{"ast":null,"code":"import _defineProperty from \"C:/Users/sikri/source/repos/MyTestAngular/MyTestAngular/ClientApp/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport * as i1 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { forwardRef, EventEmitter, Component, Input, Output, signal, computed, effect, ChangeDetectionStrategy, ViewEncapsulation, ViewChild, ContentChildren, NgModule } from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport * as i3 from 'primeng/api';\nimport { TranslationKeys, PrimeTemplate, SharedModule } from 'primeng/api';\nimport * as i7 from 'primeng/autofocus';\nimport { AutoFocusModule } from 'primeng/autofocus';\nimport { DomHandler } from 'primeng/dom';\nimport * as i4 from 'primeng/overlay';\nimport { OverlayModule } from 'primeng/overlay';\nimport * as i2 from 'primeng/ripple';\nimport { RippleModule } from 'primeng/ripple';\nimport * as i6 from 'primeng/scroller';\nimport { ScrollerModule } from 'primeng/scroller';\nimport * as i5 from 'primeng/tooltip';\nimport { TooltipModule } from 'primeng/tooltip';\nimport { ObjectUtils, UniqueComponentId } from 'primeng/utils';\nimport { TimesIcon } from 'primeng/icons/times';\nimport { ChevronDownIcon } from 'primeng/icons/chevrondown';\nimport { SearchIcon } from 'primeng/icons/search';\nfunction DropdownItem_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    let tmp_0_0;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate((tmp_0_0 = ctx_r0.label) !== null && tmp_0_0 !== undefined ? tmp_0_0 : \"empty\");\n  }\n}\nfunction DropdownItem_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\nconst _c0 = function (a0) {\n  return {\n    height: a0\n  };\n};\nconst _c1 = function (a1, a2, a3) {\n  return {\n    \"p-dropdown-item\": true,\n    \"p-highlight\": a1,\n    \"p-disabled\": a2,\n    \"p-focus\": a3\n  };\n};\nconst _c2 = function (a0) {\n  return {\n    $implicit: a0\n  };\n};\nconst _c3 = [\"container\"];\nconst _c4 = [\"filter\"];\nconst _c5 = [\"focusInput\"];\nconst _c6 = [\"editableInput\"];\nconst _c7 = [\"items\"];\nconst _c8 = [\"scroller\"];\nconst _c9 = [\"overlay\"];\nconst _c10 = [\"firstHiddenFocusableEl\"];\nconst _c11 = [\"lastHiddenFocusableEl\"];\nfunction Dropdown_span_2_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r9 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r9.label() === \"p-emptylabel\" ? \"\\xA0\" : ctx_r9.label());\n  }\n}\nfunction Dropdown_span_2_ng_container_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\nfunction Dropdown_span_2_ng_template_4_span_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r13 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r13.label() === \"p-emptylabel\" ? \"\\xA0\" : ctx_r13.placeholder);\n  }\n}\nfunction Dropdown_span_2_ng_template_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, Dropdown_span_2_ng_template_4_span_0_Template, 2, 1, \"span\", 4);\n  }\n  if (rf & 2) {\n    const ctx_r12 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r12.modelValue() && (ctx_r12.label() === ctx_r12.placeholder || ctx_r12.label() && !ctx_r12.placeholder));\n  }\n}\nfunction Dropdown_span_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r15 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"span\", 10, 11);\n    i0.ɵɵlistener(\"focus\", function Dropdown_span_2_Template_span_focus_0_listener($event) {\n      i0.ɵɵrestoreView(_r15);\n      const ctx_r14 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r14.onInputFocus($event));\n    })(\"blur\", function Dropdown_span_2_Template_span_blur_0_listener($event) {\n      i0.ɵɵrestoreView(_r15);\n      const ctx_r16 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r16.onInputBlur($event));\n    })(\"keydown\", function Dropdown_span_2_Template_span_keydown_0_listener($event) {\n      i0.ɵɵrestoreView(_r15);\n      const ctx_r17 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r17.onKeyDown($event));\n    });\n    i0.ɵɵtemplate(2, Dropdown_span_2_ng_container_2_Template, 2, 1, \"ng-container\", 12);\n    i0.ɵɵtemplate(3, Dropdown_span_2_ng_container_3_Template, 1, 0, \"ng-container\", 13);\n    i0.ɵɵtemplate(4, Dropdown_span_2_ng_template_4_Template, 1, 1, \"ng-template\", null, 14, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const _r11 = i0.ɵɵreference(5);\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngClass\", ctx_r1.inputClass)(\"pTooltip\", ctx_r1.tooltip)(\"tooltipPosition\", ctx_r1.tooltipPosition)(\"positionStyle\", ctx_r1.tooltipPositionStyle)(\"tooltipStyleClass\", ctx_r1.tooltipStyleClass)(\"autofocus\", ctx_r1.autofocus);\n    i0.ɵɵattribute(\"aria-disabled\", ctx_r1.disabled)(\"id\", ctx_r1.inputId)(\"aria-label\", ctx_r1.ariaLabel || (ctx_r1.label() === \"p-emptylabel\" ? undefined : ctx_r1.label()))(\"aria-labelledby\", ctx_r1.ariaLabelledBy)(\"aria-haspopup\", \"listbox\")(\"aria-expanded\", ctx_r1.overlayVisible)(\"aria-controls\", ctx_r1.id + \"_list\")(\"tabindex\", !ctx_r1.disabled ? ctx_r1.tabindex : -1)(\"aria-activedescendant\", ctx_r1.focused ? ctx_r1.focusedOptionId : undefined);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r1.selectedItemTemplate)(\"ngIfElse\", _r11);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r1.selectedItemTemplate)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction1(19, _c2, ctx_r1.selectedOption));\n  }\n}\nfunction Dropdown_input_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r20 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"input\", 15, 16);\n    i0.ɵɵlistener(\"input\", function Dropdown_input_3_Template_input_input_0_listener($event) {\n      i0.ɵɵrestoreView(_r20);\n      const ctx_r19 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r19.onEditableInput($event));\n    })(\"keydown\", function Dropdown_input_3_Template_input_keydown_0_listener($event) {\n      i0.ɵɵrestoreView(_r20);\n      const ctx_r21 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r21.onKeyDown($event));\n    })(\"focus\", function Dropdown_input_3_Template_input_focus_0_listener($event) {\n      i0.ɵɵrestoreView(_r20);\n      const ctx_r22 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r22.onInputFocus($event));\n    })(\"blur\", function Dropdown_input_3_Template_input_blur_0_listener($event) {\n      i0.ɵɵrestoreView(_r20);\n      const ctx_r23 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r23.onInputBlur($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngClass\", ctx_r2.inputClass)(\"disabled\", ctx_r2.disabled);\n    i0.ɵɵattribute(\"maxlength\", ctx_r2.maxlength)(\"placeholder\", ctx_r2.placeholder)(\"aria-expanded\", ctx_r2.overlayVisible);\n  }\n}\nfunction Dropdown_ng_container_4_TimesIcon_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r27 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"TimesIcon\", 19);\n    i0.ɵɵlistener(\"click\", function Dropdown_ng_container_4_TimesIcon_1_Template_TimesIcon_click_0_listener($event) {\n      i0.ɵɵrestoreView(_r27);\n      const ctx_r26 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r26.clear($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    i0.ɵɵproperty(\"styleClass\", \"p-dropdown-clear-icon\");\n    i0.ɵɵattribute(\"data-pc-section\", \"clearicon\");\n  }\n}\nfunction Dropdown_ng_container_4_span_2_1_ng_template_0_Template(rf, ctx) {}\nfunction Dropdown_ng_container_4_span_2_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, Dropdown_ng_container_4_span_2_1_ng_template_0_Template, 0, 0, \"ng-template\");\n  }\n}\nfunction Dropdown_ng_container_4_span_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r31 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"span\", 20);\n    i0.ɵɵlistener(\"click\", function Dropdown_ng_container_4_span_2_Template_span_click_0_listener($event) {\n      i0.ɵɵrestoreView(_r31);\n      const ctx_r30 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r30.clear($event));\n    });\n    i0.ɵɵtemplate(1, Dropdown_ng_container_4_span_2_1_Template, 1, 0, null, 21);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r25 = i0.ɵɵnextContext(2);\n    i0.ɵɵattribute(\"data-pc-section\", \"clearicon\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r25.clearIconTemplate);\n  }\n}\nfunction Dropdown_ng_container_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, Dropdown_ng_container_4_TimesIcon_1_Template, 1, 2, \"TimesIcon\", 17);\n    i0.ɵɵtemplate(2, Dropdown_ng_container_4_span_2_Template, 2, 2, \"span\", 18);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r3.clearIconTemplate);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r3.clearIconTemplate);\n  }\n}\nfunction Dropdown_ng_container_6_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\", 24);\n  }\n  if (rf & 2) {\n    const ctx_r32 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"ngClass\", ctx_r32.dropdownIcon);\n  }\n}\nfunction Dropdown_ng_container_6_ChevronDownIcon_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"ChevronDownIcon\", 25);\n  }\n  if (rf & 2) {\n    i0.ɵɵproperty(\"styleClass\", \"p-dropdown-trigger-icon\");\n  }\n}\nfunction Dropdown_ng_container_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, Dropdown_ng_container_6_span_1_Template, 1, 1, \"span\", 22);\n    i0.ɵɵtemplate(2, Dropdown_ng_container_6_ChevronDownIcon_2_Template, 1, 1, \"ChevronDownIcon\", 23);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r4.dropdownIcon);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r4.dropdownIcon);\n  }\n}\nfunction Dropdown_span_7_1_ng_template_0_Template(rf, ctx) {}\nfunction Dropdown_span_7_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, Dropdown_span_7_1_ng_template_0_Template, 0, 0, \"ng-template\");\n  }\n}\nfunction Dropdown_span_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 26);\n    i0.ɵɵtemplate(1, Dropdown_span_7_1_Template, 1, 0, null, 21);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r5 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r5.dropdownIconTemplate);\n  }\n}\nfunction Dropdown_ng_template_10_ng_container_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\nfunction Dropdown_ng_template_10_div_4_ng_container_1_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\nconst _c12 = function (a0) {\n  return {\n    options: a0\n  };\n};\nfunction Dropdown_ng_template_10_div_4_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, Dropdown_ng_template_10_div_4_ng_container_1_ng_container_1_Template, 1, 0, \"ng-container\", 13);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r45 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r45.filterTemplate)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction1(2, _c12, ctx_r45.filterOptions));\n  }\n}\nfunction Dropdown_ng_template_10_div_4_ng_template_2_SearchIcon_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"SearchIcon\", 25);\n  }\n  if (rf & 2) {\n    i0.ɵɵproperty(\"styleClass\", \"p-dropdown-filter-icon\");\n  }\n}\nfunction Dropdown_ng_template_10_div_4_ng_template_2_span_4_1_ng_template_0_Template(rf, ctx) {}\nfunction Dropdown_ng_template_10_div_4_ng_template_2_span_4_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, Dropdown_ng_template_10_div_4_ng_template_2_span_4_1_ng_template_0_Template, 0, 0, \"ng-template\");\n  }\n}\nfunction Dropdown_ng_template_10_div_4_ng_template_2_span_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 41);\n    i0.ɵɵtemplate(1, Dropdown_ng_template_10_div_4_ng_template_2_span_4_1_Template, 1, 0, null, 21);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r51 = i0.ɵɵnextContext(4);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r51.filterIconTemplate);\n  }\n}\nfunction Dropdown_ng_template_10_div_4_ng_template_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r55 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 37)(1, \"input\", 38, 39);\n    i0.ɵɵlistener(\"input\", function Dropdown_ng_template_10_div_4_ng_template_2_Template_input_input_1_listener($event) {\n      i0.ɵɵrestoreView(_r55);\n      const ctx_r54 = i0.ɵɵnextContext(3);\n      return i0.ɵɵresetView(ctx_r54.onFilterInputChange($event));\n    })(\"keydown\", function Dropdown_ng_template_10_div_4_ng_template_2_Template_input_keydown_1_listener($event) {\n      i0.ɵɵrestoreView(_r55);\n      const ctx_r56 = i0.ɵɵnextContext(3);\n      return i0.ɵɵresetView(ctx_r56.onFilterKeyDown($event));\n    })(\"blur\", function Dropdown_ng_template_10_div_4_ng_template_2_Template_input_blur_1_listener($event) {\n      i0.ɵɵrestoreView(_r55);\n      const ctx_r57 = i0.ɵɵnextContext(3);\n      return i0.ɵɵresetView(ctx_r57.onFilterBlur($event));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(3, Dropdown_ng_template_10_div_4_ng_template_2_SearchIcon_3_Template, 1, 1, \"SearchIcon\", 23);\n    i0.ɵɵtemplate(4, Dropdown_ng_template_10_div_4_ng_template_2_span_4_Template, 2, 1, \"span\", 40);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r47 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"value\", ctx_r47._filterValue() || \"\");\n    i0.ɵɵattribute(\"placeholder\", ctx_r47.filterPlaceholder)(\"aria-owns\", ctx_r47.id + \"_list\")(\"aria-label\", ctx_r47.ariaFilterLabel)(\"aria-activedescendant\", ctx_r47.focusedOptionId);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r47.filterIconTemplate);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r47.filterIconTemplate);\n  }\n}\nfunction Dropdown_ng_template_10_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 35);\n    i0.ɵɵlistener(\"click\", function Dropdown_ng_template_10_div_4_Template_div_click_0_listener($event) {\n      return $event.stopPropagation();\n    });\n    i0.ɵɵtemplate(1, Dropdown_ng_template_10_div_4_ng_container_1_Template, 2, 4, \"ng-container\", 12);\n    i0.ɵɵtemplate(2, Dropdown_ng_template_10_div_4_ng_template_2_Template, 5, 7, \"ng-template\", null, 36, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const _r46 = i0.ɵɵreference(3);\n    const ctx_r38 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r38.filterTemplate)(\"ngIfElse\", _r46);\n  }\n}\nfunction Dropdown_ng_template_10_p_scroller_6_ng_template_2_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\nconst _c13 = function (a0, a1) {\n  return {\n    $implicit: a0,\n    options: a1\n  };\n};\nfunction Dropdown_ng_template_10_p_scroller_6_ng_template_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, Dropdown_ng_template_10_p_scroller_6_ng_template_2_ng_container_0_Template, 1, 0, \"ng-container\", 13);\n  }\n  if (rf & 2) {\n    const items_r62 = ctx.$implicit;\n    const scrollerOptions_r63 = ctx.options;\n    i0.ɵɵnextContext(2);\n    const _r41 = i0.ɵɵreference(9);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", _r41)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction2(2, _c13, items_r62, scrollerOptions_r63));\n  }\n}\nfunction Dropdown_ng_template_10_p_scroller_6_ng_container_3_ng_template_1_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\nfunction Dropdown_ng_template_10_p_scroller_6_ng_container_3_ng_template_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, Dropdown_ng_template_10_p_scroller_6_ng_container_3_ng_template_1_ng_container_0_Template, 1, 0, \"ng-container\", 13);\n  }\n  if (rf & 2) {\n    const scrollerOptions_r66 = ctx.options;\n    const ctx_r65 = i0.ɵɵnextContext(4);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r65.loaderTemplate)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction1(2, _c12, scrollerOptions_r66));\n  }\n}\nfunction Dropdown_ng_template_10_p_scroller_6_ng_container_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, Dropdown_ng_template_10_p_scroller_6_ng_container_3_ng_template_1_Template, 1, 4, \"ng-template\", 44);\n    i0.ɵɵelementContainerEnd();\n  }\n}\nfunction Dropdown_ng_template_10_p_scroller_6_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r69 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"p-scroller\", 42, 43);\n    i0.ɵɵlistener(\"onLazyLoad\", function Dropdown_ng_template_10_p_scroller_6_Template_p_scroller_onLazyLoad_0_listener($event) {\n      i0.ɵɵrestoreView(_r69);\n      const ctx_r68 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r68.onLazyLoad.emit($event));\n    });\n    i0.ɵɵtemplate(2, Dropdown_ng_template_10_p_scroller_6_ng_template_2_Template, 1, 5, \"ng-template\", 9);\n    i0.ɵɵtemplate(3, Dropdown_ng_template_10_p_scroller_6_ng_container_3_Template, 2, 0, \"ng-container\", 4);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r39 = i0.ɵɵnextContext(2);\n    i0.ɵɵstyleMap(i0.ɵɵpureFunction1(8, _c0, ctx_r39.scrollHeight));\n    i0.ɵɵproperty(\"items\", ctx_r39.visibleOptions())(\"itemSize\", ctx_r39.virtualScrollItemSize || ctx_r39._itemSize)(\"autoSize\", true)(\"lazy\", ctx_r39.lazy)(\"options\", ctx_r39.virtualScrollOptions);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngIf\", ctx_r39.loaderTemplate);\n  }\n}\nfunction Dropdown_ng_template_10_ng_container_7_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\nconst _c14 = function () {\n  return {};\n};\nfunction Dropdown_ng_template_10_ng_container_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, Dropdown_ng_template_10_ng_container_7_ng_container_1_Template, 1, 0, \"ng-container\", 13);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    i0.ɵɵnextContext();\n    const _r41 = i0.ɵɵreference(9);\n    const ctx_r40 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", _r41)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction2(3, _c13, ctx_r40.visibleOptions(), i0.ɵɵpureFunction0(2, _c14)));\n  }\n}\nfunction Dropdown_ng_template_10_ng_template_8_ng_template_2_ng_container_0_span_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const option_r77 = i0.ɵɵnextContext(2).$implicit;\n    const ctx_r81 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r81.getOptionGroupLabel(option_r77.optionGroup));\n  }\n}\nfunction Dropdown_ng_template_10_ng_template_8_ng_template_2_ng_container_0_ng_container_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\nfunction Dropdown_ng_template_10_ng_template_8_ng_template_2_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"li\", 49);\n    i0.ɵɵtemplate(2, Dropdown_ng_template_10_ng_template_8_ng_template_2_ng_container_0_span_2_Template, 2, 1, \"span\", 4);\n    i0.ɵɵtemplate(3, Dropdown_ng_template_10_ng_template_8_ng_template_2_ng_container_0_ng_container_3_Template, 1, 0, \"ng-container\", 13);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r85 = i0.ɵɵnextContext();\n    const i_r78 = ctx_r85.index;\n    const option_r77 = ctx_r85.$implicit;\n    const scrollerOptions_r72 = i0.ɵɵnextContext().options;\n    const ctx_r79 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngStyle\", i0.ɵɵpureFunction1(5, _c0, scrollerOptions_r72.itemSize + \"px\"));\n    i0.ɵɵattribute(\"id\", ctx_r79.id + \"_\" + ctx_r79.getOptionIndex(i_r78, scrollerOptions_r72));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r79.groupTemplate);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r79.groupTemplate)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction1(7, _c2, option_r77.optionGroup));\n  }\n}\nfunction Dropdown_ng_template_10_ng_template_8_ng_template_2_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r88 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"p-dropdownItem\", 50);\n    i0.ɵɵlistener(\"onClick\", function Dropdown_ng_template_10_ng_template_8_ng_template_2_ng_container_1_Template_p_dropdownItem_onClick_1_listener($event) {\n      i0.ɵɵrestoreView(_r88);\n      const option_r77 = i0.ɵɵnextContext().$implicit;\n      const ctx_r86 = i0.ɵɵnextContext(3);\n      return i0.ɵɵresetView(ctx_r86.onOptionSelect($event, option_r77));\n    })(\"onMouseEnter\", function Dropdown_ng_template_10_ng_template_8_ng_template_2_ng_container_1_Template_p_dropdownItem_onMouseEnter_1_listener($event) {\n      i0.ɵɵrestoreView(_r88);\n      const i_r78 = i0.ɵɵnextContext().index;\n      const scrollerOptions_r72 = i0.ɵɵnextContext().options;\n      const ctx_r89 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r89.onOptionMouseEnter($event, ctx_r89.getOptionIndex(i_r78, scrollerOptions_r72)));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r92 = i0.ɵɵnextContext();\n    const i_r78 = ctx_r92.index;\n    const option_r77 = ctx_r92.$implicit;\n    const scrollerOptions_r72 = i0.ɵɵnextContext().options;\n    const ctx_r80 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"id\", ctx_r80.id + \"_\" + ctx_r80.getOptionIndex(i_r78, scrollerOptions_r72))(\"option\", option_r77)(\"selected\", ctx_r80.isSelected(option_r77))(\"label\", ctx_r80.getOptionLabel(option_r77))(\"disabled\", ctx_r80.isOptionDisabled(option_r77))(\"template\", ctx_r80.itemTemplate)(\"focused\", ctx_r80.focusedOptionIndex() === ctx_r80.getOptionIndex(i_r78, scrollerOptions_r72))(\"ariaPosInset\", ctx_r80.getAriaPosInset(ctx_r80.getOptionIndex(i_r78, scrollerOptions_r72)))(\"ariaSetSize\", ctx_r80.ariaSetSize);\n  }\n}\nfunction Dropdown_ng_template_10_ng_template_8_ng_template_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, Dropdown_ng_template_10_ng_template_8_ng_template_2_ng_container_0_Template, 4, 9, \"ng-container\", 4);\n    i0.ɵɵtemplate(1, Dropdown_ng_template_10_ng_template_8_ng_template_2_ng_container_1_Template, 2, 9, \"ng-container\", 4);\n  }\n  if (rf & 2) {\n    const option_r77 = ctx.$implicit;\n    i0.ɵɵproperty(\"ngIf\", option_r77.group);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !option_r77.group);\n  }\n}\nfunction Dropdown_ng_template_10_ng_template_8_li_3_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r94 = i0.ɵɵnextContext(4);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r94.emptyFilterMessageLabel, \" \");\n  }\n}\nfunction Dropdown_ng_template_10_ng_template_8_li_3_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0, null, 52);\n  }\n}\nfunction Dropdown_ng_template_10_ng_template_8_li_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\", 51);\n    i0.ɵɵtemplate(1, Dropdown_ng_template_10_ng_template_8_li_3_ng_container_1_Template, 2, 1, \"ng-container\", 12);\n    i0.ɵɵtemplate(2, Dropdown_ng_template_10_ng_template_8_li_3_ng_container_2_Template, 2, 0, \"ng-container\", 21);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const scrollerOptions_r72 = i0.ɵɵnextContext().options;\n    const ctx_r75 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"ngStyle\", i0.ɵɵpureFunction1(4, _c0, scrollerOptions_r72.itemSize + \"px\"));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r75.emptyFilterTemplate && !ctx_r75.emptyTemplate)(\"ngIfElse\", ctx_r75.emptyFilter);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r75.emptyFilterTemplate || ctx_r75.emptyTemplate);\n  }\n}\nfunction Dropdown_ng_template_10_ng_template_8_li_4_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r98 = i0.ɵɵnextContext(4);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r98.emptyMessageLabel, \" \");\n  }\n}\nfunction Dropdown_ng_template_10_ng_template_8_li_4_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0, null, 53);\n  }\n}\nfunction Dropdown_ng_template_10_ng_template_8_li_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\", 51);\n    i0.ɵɵtemplate(1, Dropdown_ng_template_10_ng_template_8_li_4_ng_container_1_Template, 2, 1, \"ng-container\", 12);\n    i0.ɵɵtemplate(2, Dropdown_ng_template_10_ng_template_8_li_4_ng_container_2_Template, 2, 0, \"ng-container\", 21);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const scrollerOptions_r72 = i0.ɵɵnextContext().options;\n    const ctx_r76 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"ngStyle\", i0.ɵɵpureFunction1(4, _c0, scrollerOptions_r72.itemSize + \"px\"));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r76.emptyTemplate)(\"ngIfElse\", ctx_r76.empty);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r76.emptyTemplate);\n  }\n}\nfunction Dropdown_ng_template_10_ng_template_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ul\", 45, 46);\n    i0.ɵɵtemplate(2, Dropdown_ng_template_10_ng_template_8_ng_template_2_Template, 2, 2, \"ng-template\", 47);\n    i0.ɵɵtemplate(3, Dropdown_ng_template_10_ng_template_8_li_3_Template, 3, 6, \"li\", 48);\n    i0.ɵɵtemplate(4, Dropdown_ng_template_10_ng_template_8_li_4_Template, 3, 6, \"li\", 48);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const items_r71 = ctx.$implicit;\n    const scrollerOptions_r72 = ctx.options;\n    const ctx_r42 = i0.ɵɵnextContext(2);\n    i0.ɵɵstyleMap(scrollerOptions_r72.contentStyle);\n    i0.ɵɵproperty(\"ngClass\", scrollerOptions_r72.contentStyleClass);\n    i0.ɵɵattribute(\"id\", ctx_r42.id + \"_list\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngForOf\", items_r71);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r42.filterValue && ctx_r42.isEmpty());\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r42.filterValue && ctx_r42.isEmpty());\n  }\n}\nfunction Dropdown_ng_template_10_ng_container_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\nfunction Dropdown_ng_template_10_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r103 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 27)(1, \"span\", 28, 29);\n    i0.ɵɵlistener(\"focus\", function Dropdown_ng_template_10_Template_span_focus_1_listener($event) {\n      i0.ɵɵrestoreView(_r103);\n      const ctx_r102 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r102.onFirstHiddenFocus($event));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(3, Dropdown_ng_template_10_ng_container_3_Template, 1, 0, \"ng-container\", 21);\n    i0.ɵɵtemplate(4, Dropdown_ng_template_10_div_4_Template, 4, 2, \"div\", 30);\n    i0.ɵɵelementStart(5, \"div\", 31);\n    i0.ɵɵtemplate(6, Dropdown_ng_template_10_p_scroller_6_Template, 4, 10, \"p-scroller\", 32);\n    i0.ɵɵtemplate(7, Dropdown_ng_template_10_ng_container_7_Template, 2, 6, \"ng-container\", 4);\n    i0.ɵɵtemplate(8, Dropdown_ng_template_10_ng_template_8_Template, 5, 7, \"ng-template\", null, 33, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(10, Dropdown_ng_template_10_ng_container_10_Template, 1, 0, \"ng-container\", 21);\n    i0.ɵɵelementStart(11, \"span\", 28, 34);\n    i0.ɵɵlistener(\"focus\", function Dropdown_ng_template_10_Template_span_focus_11_listener($event) {\n      i0.ɵɵrestoreView(_r103);\n      const ctx_r104 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r104.onLastHiddenFocus($event));\n    });\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r7 = i0.ɵɵnextContext();\n    i0.ɵɵclassMap(ctx_r7.panelStyleClass);\n    i0.ɵɵproperty(\"ngClass\", \"p-dropdown-panel p-component\")(\"ngStyle\", ctx_r7.panelStyle);\n    i0.ɵɵadvance(1);\n    i0.ɵɵattribute(\"aria-hidden\", true)(\"tabindex\", 0)(\"data-p-hidden-accessible\", true)(\"data-p-hidden-focusable\", true);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r7.headerTemplate);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r7.filter);\n    i0.ɵɵadvance(1);\n    i0.ɵɵstyleProp(\"max-height\", ctx_r7.virtualScroll ? \"auto\" : ctx_r7.scrollHeight || \"auto\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r7.virtualScroll);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r7.virtualScroll);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r7.footerTemplate);\n    i0.ɵɵadvance(1);\n    i0.ɵɵattribute(\"aria-hidden\", true)(\"tabindex\", 0)(\"data-p-hidden-accessible\", true)(\"data-p-hidden-focusable\", true);\n  }\n}\nconst DROPDOWN_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => Dropdown),\n  multi: true\n};\nclass DropdownItem {\n  constructor() {\n    _defineProperty(this, \"id\", void 0);\n    _defineProperty(this, \"option\", void 0);\n    _defineProperty(this, \"selected\", void 0);\n    _defineProperty(this, \"focused\", void 0);\n    _defineProperty(this, \"label\", void 0);\n    _defineProperty(this, \"disabled\", void 0);\n    _defineProperty(this, \"visible\", void 0);\n    _defineProperty(this, \"itemSize\", void 0);\n    _defineProperty(this, \"ariaPosInset\", void 0);\n    _defineProperty(this, \"ariaSetSize\", void 0);\n    _defineProperty(this, \"template\", void 0);\n    _defineProperty(this, \"onClick\", new EventEmitter());\n    _defineProperty(this, \"onMouseEnter\", new EventEmitter());\n  }\n  ngOnInit() {}\n  onOptionClick(event) {\n    this.onClick.emit(event);\n  }\n  onOptionMouseEnter(event) {\n    this.onMouseEnter.emit(event);\n  }\n}\n_defineProperty(DropdownItem, \"\\u0275fac\", function DropdownItem_Factory(t) {\n  return new (t || DropdownItem)();\n});\n_defineProperty(DropdownItem, \"\\u0275cmp\", /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: DropdownItem,\n  selectors: [[\"p-dropdownItem\"]],\n  hostAttrs: [1, \"p-element\"],\n  inputs: {\n    id: \"id\",\n    option: \"option\",\n    selected: \"selected\",\n    focused: \"focused\",\n    label: \"label\",\n    disabled: \"disabled\",\n    visible: \"visible\",\n    itemSize: \"itemSize\",\n    ariaPosInset: \"ariaPosInset\",\n    ariaSetSize: \"ariaSetSize\",\n    template: \"template\"\n  },\n  outputs: {\n    onClick: \"onClick\",\n    onMouseEnter: \"onMouseEnter\"\n  },\n  decls: 3,\n  vars: 21,\n  consts: [[\"role\", \"option\", \"pRipple\", \"\", 3, \"id\", \"ngStyle\", \"ngClass\", \"click\", \"mouseenter\"], [4, \"ngIf\"], [4, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"]],\n  template: function DropdownItem_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"li\", 0);\n      i0.ɵɵlistener(\"click\", function DropdownItem_Template_li_click_0_listener($event) {\n        return ctx.onOptionClick($event);\n      })(\"mouseenter\", function DropdownItem_Template_li_mouseenter_0_listener($event) {\n        return ctx.onOptionMouseEnter($event);\n      });\n      i0.ɵɵtemplate(1, DropdownItem_span_1_Template, 2, 1, \"span\", 1);\n      i0.ɵɵtemplate(2, DropdownItem_ng_container_2_Template, 1, 0, \"ng-container\", 2);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"id\", ctx.id)(\"ngStyle\", i0.ɵɵpureFunction1(13, _c0, ctx.itemSize + \"px\"))(\"ngClass\", i0.ɵɵpureFunction3(15, _c1, ctx.selected, ctx.disabled, ctx.focused));\n      i0.ɵɵattribute(\"aria-label\", ctx.label)(\"aria-setsize\", ctx.ariaSetSize)(\"aria-posinset\", ctx.ariaPosInset)(\"aria-selected\", ctx.selected)(\"data-p-focused\", ctx.focused)(\"data-p-highlight\", ctx.selected)(\"data-p-disabled\", ctx.disabled);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", !ctx.template);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngTemplateOutlet\", ctx.template)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction1(19, _c2, ctx.option));\n    }\n  },\n  dependencies: [i1.NgClass, i1.NgIf, i1.NgTemplateOutlet, i1.NgStyle, i2.Ripple],\n  encapsulation: 2\n}));\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(DropdownItem, [{\n    type: Component,\n    args: [{\n      selector: 'p-dropdownItem',\n      template: `\n        <li\n            [id]=\"id\"\n            (click)=\"onOptionClick($event)\"\n            (mouseenter)=\"onOptionMouseEnter($event)\"\n            role=\"option\"\n            pRipple\n            [attr.aria-label]=\"label\"\n            [attr.aria-setsize]=\"ariaSetSize\"\n            [attr.aria-posinset]=\"ariaPosInset\"\n            [attr.aria-selected]=\"selected\"\n            [attr.data-p-focused]=\"focused\"\n            [attr.data-p-highlight]=\"selected\"\n            [attr.data-p-disabled]=\"disabled\"\n            [ngStyle]=\"{ height: itemSize + 'px' }\"\n            [ngClass]=\"{ 'p-dropdown-item': true, 'p-highlight': selected, 'p-disabled': disabled, 'p-focus': focused }\"\n        >\n            <span *ngIf=\"!template\">{{ label ?? 'empty' }}</span>\n            <ng-container *ngTemplateOutlet=\"template; context: { $implicit: option }\"></ng-container>\n        </li>\n    `,\n      host: {\n        class: 'p-element'\n      }\n    }]\n  }], null, {\n    id: [{\n      type: Input\n    }],\n    option: [{\n      type: Input\n    }],\n    selected: [{\n      type: Input\n    }],\n    focused: [{\n      type: Input\n    }],\n    label: [{\n      type: Input\n    }],\n    disabled: [{\n      type: Input\n    }],\n    visible: [{\n      type: Input\n    }],\n    itemSize: [{\n      type: Input\n    }],\n    ariaPosInset: [{\n      type: Input\n    }],\n    ariaSetSize: [{\n      type: Input\n    }],\n    template: [{\n      type: Input\n    }],\n    onClick: [{\n      type: Output\n    }],\n    onMouseEnter: [{\n      type: Output\n    }]\n  });\n})();\n/**\n * Dropdown also known as Select, is used to choose an item from a collection of options.\n * @group Components\n */\nclass Dropdown {\n  /**\n   * When present, it specifies that the component should be disabled.\n   * @group Props\n   */\n  get disabled() {\n    return this._disabled;\n  }\n  set disabled(_disabled) {\n    if (_disabled) {\n      this.focused = false;\n      if (this.overlayVisible) this.hide();\n    }\n    this._disabled = _disabled;\n    if (!this.cd.destroyed) {\n      this.cd.detectChanges();\n    }\n  }\n  /**\n   * Item size of item to be virtual scrolled.\n   * @group Props\n   * @deprecated use virtualScrollItemSize property instead.\n   */\n  get itemSize() {\n    return this._itemSize;\n  }\n  set itemSize(val) {\n    this._itemSize = val;\n    console.warn('The itemSize property is deprecated, use virtualScrollItemSize property instead.');\n  }\n  /**\n   * Whether to automatically manage layering.\n   * @group Props\n   * @deprecated since v14.2.0, use overlayOptions property instead.\n   */\n  get autoZIndex() {\n    return this._autoZIndex;\n  }\n  set autoZIndex(val) {\n    this._autoZIndex = val;\n    console.warn('The autoZIndex property is deprecated since v14.2.0, use overlayOptions property instead.');\n  }\n  /**\n   * Base zIndex value to use in layering.\n   * @group Props\n   * @deprecated since v14.2.0, use overlayOptions property instead.\n   */\n  get baseZIndex() {\n    return this._baseZIndex;\n  }\n  set baseZIndex(val) {\n    this._baseZIndex = val;\n    console.warn('The baseZIndex property is deprecated since v14.2.0, use overlayOptions property instead.');\n  }\n  /**\n   * Transition options of the show animation.\n   * @group Props\n   * @deprecated since v14.2.0, use overlayOptions property instead.\n   */\n  get showTransitionOptions() {\n    return this._showTransitionOptions;\n  }\n  set showTransitionOptions(val) {\n    this._showTransitionOptions = val;\n    console.warn('The showTransitionOptions property is deprecated since v14.2.0, use overlayOptions property instead.');\n  }\n  /**\n   * Transition options of the hide animation.\n   * @group Props\n   * @deprecated since v14.2.0, use overlayOptions property instead.\n   */\n  get hideTransitionOptions() {\n    return this._hideTransitionOptions;\n  }\n  set hideTransitionOptions(val) {\n    this._hideTransitionOptions = val;\n    console.warn('The hideTransitionOptions property is deprecated since v14.2.0, use overlayOptions property instead.');\n  }\n  /**\n   * When specified, filter displays with this value.\n   * @group Props\n   */\n  get filterValue() {\n    return this._filterValue();\n  }\n  set filterValue(val) {\n    this._filterValue.set(val);\n  }\n  /**\n   * An array of objects to display as the available options.\n   * @group Props\n   */\n  get options() {\n    const options = this._options();\n    return options;\n  }\n  set options(val) {\n    this._options.set(val);\n  }\n  /**\n   * Callback to invoke when value of dropdown changes.\n   * @param {DropdownChangeEvent} event - custom change event.\n   * @group Emits\n   */\n\n  get emptyMessageLabel() {\n    return this.emptyMessage || this.config.getTranslation(TranslationKeys.EMPTY_MESSAGE);\n  }\n  get emptyFilterMessageLabel() {\n    return this.emptyFilterMessage || this.config.getTranslation(TranslationKeys.EMPTY_FILTER_MESSAGE);\n  }\n  get filled() {\n    if (typeof this.modelValue() === 'string') return !!this.modelValue();\n    return this.modelValue() || this.modelValue() != null || this.modelValue() != undefined;\n  }\n  get isVisibleClearIcon() {\n    return this.modelValue() != null && this.hasSelectedOption() && this.showClear && !this.disabled;\n  }\n  get containerClass() {\n    return {\n      'p-dropdown p-component p-inputwrapper': true,\n      'p-disabled': this.disabled,\n      'p-dropdown-clearable': this.showClear && !this.disabled,\n      'p-focus': this.focused,\n      'p-inputwrapper-filled': this.modelValue(),\n      'p-inputwrapper-focus': this.focused || this.overlayVisible\n    };\n  }\n  get inputClass() {\n    const label = this.label();\n    return {\n      'p-dropdown-label p-inputtext': true,\n      'p-placeholder': this.placeholder && label === this.placeholder,\n      'p-dropdown-label-empty': !this.editable && !this.selectedItemTemplate && (!label || label === 'p-emptylabel' || label.length === 0)\n    };\n  }\n  get panelClass() {\n    return {\n      'p-dropdown-panel p-component': true,\n      'p-input-filled': this.config.inputStyle === 'filled',\n      'p-ripple-disabled': this.config.ripple === false\n    };\n  }\n  constructor(el, renderer, cd, zone, filterService, config) {\n    _defineProperty(this, \"el\", void 0);\n    _defineProperty(this, \"renderer\", void 0);\n    _defineProperty(this, \"cd\", void 0);\n    _defineProperty(this, \"zone\", void 0);\n    _defineProperty(this, \"filterService\", void 0);\n    _defineProperty(this, \"config\", void 0);\n    /**\n     * Unique identifier of the component\n     * @group Props\n     */\n    _defineProperty(this, \"id\", void 0);\n    /**\n     * Height of the viewport in pixels, a scrollbar is defined if height of list exceeds this value.\n     * @group Props\n     */\n    _defineProperty(this, \"scrollHeight\", '200px');\n    /**\n     * When specified, displays an input field to filter the items on keyup.\n     * @group Props\n     */\n    _defineProperty(this, \"filter\", void 0);\n    /**\n     * Name of the input element.\n     * @group Props\n     */\n    _defineProperty(this, \"name\", void 0);\n    /**\n     * Inline style of the element.\n     * @group Props\n     */\n    _defineProperty(this, \"style\", void 0);\n    /**\n     * Inline style of the overlay panel element.\n     * @group Props\n     */\n    _defineProperty(this, \"panelStyle\", void 0);\n    /**\n     * Style class of the element.\n     * @group Props\n     */\n    _defineProperty(this, \"styleClass\", void 0);\n    /**\n     * Style class of the overlay panel element.\n     * @group Props\n     */\n    _defineProperty(this, \"panelStyleClass\", void 0);\n    /**\n     * When present, it specifies that the component cannot be edited.\n     * @group Props\n     */\n    _defineProperty(this, \"readonly\", void 0);\n    /**\n     * When present, it specifies that an input field must be filled out before submitting the form.\n     * @group Props\n     */\n    _defineProperty(this, \"required\", void 0);\n    /**\n     * When present, custom value instead of predefined options can be entered using the editable input field.\n     * @group Props\n     */\n    _defineProperty(this, \"editable\", void 0);\n    /**\n     * Target element to attach the overlay, valid values are \"body\" or a local ng-template variable of another element (note: use binding with brackets for template variables, e.g. [appendTo]=\"mydiv\" for a div element having #mydiv as variable name).\n     * @group Props\n     */\n    _defineProperty(this, \"appendTo\", void 0);\n    /**\n     * Index of the element in tabbing order.\n     * @group Props\n     */\n    _defineProperty(this, \"tabindex\", 0);\n    /**\n     * Default text to display when no option is selected.\n     * @group Props\n     */\n    _defineProperty(this, \"placeholder\", void 0);\n    /**\n     * Placeholder text to show when filter input is empty.\n     * @group Props\n     */\n    _defineProperty(this, \"filterPlaceholder\", void 0);\n    /**\n     * Locale to use in filtering. The default locale is the host environment's current locale.\n     * @group Props\n     */\n    _defineProperty(this, \"filterLocale\", void 0);\n    /**\n     * Identifier of the accessible input element.\n     * @group Props\n     */\n    _defineProperty(this, \"inputId\", void 0);\n    /**\n     * A property to uniquely identify a value in options.\n     * @group Props\n     */\n    _defineProperty(this, \"dataKey\", void 0);\n    /**\n     * When filtering is enabled, filterBy decides which field or fields (comma separated) to search against.\n     * @group Props\n     */\n    _defineProperty(this, \"filterBy\", void 0);\n    /**\n     * Fields used when filtering the options, defaults to optionLabel.\n     * @group Props\n     */\n    _defineProperty(this, \"filterFields\", void 0);\n    /**\n     * When present, it specifies that the component should automatically get focus on load.\n     * @group Props\n     */\n    _defineProperty(this, \"autofocus\", void 0);\n    /**\n     * Clears the filter value when hiding the dropdown.\n     * @group Props\n     */\n    _defineProperty(this, \"resetFilterOnHide\", false);\n    /**\n     * Icon class of the dropdown icon.\n     * @group Props\n     */\n    _defineProperty(this, \"dropdownIcon\", void 0);\n    /**\n     * Name of the label field of an option.\n     * @group Props\n     */\n    _defineProperty(this, \"optionLabel\", void 0);\n    /**\n     * Name of the value field of an option.\n     * @group Props\n     */\n    _defineProperty(this, \"optionValue\", void 0);\n    /**\n     * Name of the disabled field of an option.\n     * @group Props\n     */\n    _defineProperty(this, \"optionDisabled\", void 0);\n    /**\n     * Name of the label field of an option group.\n     * @group Props\n     */\n    _defineProperty(this, \"optionGroupLabel\", 'label');\n    /**\n     * Name of the options field of an option group.\n     * @group Props\n     */\n    _defineProperty(this, \"optionGroupChildren\", 'items');\n    /**\n     * Whether to display the first item as the label if no placeholder is defined and value is null.\n     * @group Props\n     */\n    _defineProperty(this, \"autoDisplayFirst\", true);\n    /**\n     * Whether to display options as grouped when nested options are provided.\n     * @group Props\n     */\n    _defineProperty(this, \"group\", void 0);\n    /**\n     * When enabled, a clear icon is displayed to clear the value.\n     * @group Props\n     */\n    _defineProperty(this, \"showClear\", void 0);\n    /**\n     * Text to display when filtering does not return any results. Defaults to global value in i18n translation configuration.\n     * @group Props\n     */\n    _defineProperty(this, \"emptyFilterMessage\", '');\n    /**\n     * Text to display when there is no data. Defaults to global value in i18n translation configuration.\n     * @group Props\n     */\n    _defineProperty(this, \"emptyMessage\", '');\n    /**\n     * Defines if data is loaded and interacted with in lazy manner.\n     * @group Props\n     */\n    _defineProperty(this, \"lazy\", false);\n    /**\n     * Whether the data should be loaded on demand during scroll.\n     * @group Props\n     */\n    _defineProperty(this, \"virtualScroll\", void 0);\n    /**\n     * Height of an item in the list for VirtualScrolling.\n     * @group Props\n     */\n    _defineProperty(this, \"virtualScrollItemSize\", void 0);\n    /**\n     * Whether to use the scroller feature. The properties of scroller component can be used like an object in it.\n     * @group Props\n     */\n    _defineProperty(this, \"virtualScrollOptions\", void 0);\n    /**\n     * Whether to use overlay API feature. The properties of overlay API can be used like an object in it.\n     * @group Props\n     */\n    _defineProperty(this, \"overlayOptions\", void 0);\n    /**\n     * Defines a string that labels the filter input.\n     * @group Props\n     */\n    _defineProperty(this, \"ariaFilterLabel\", void 0);\n    /**\n     * Used to define a aria label attribute the current element.\n     * @group Props\n     */\n    _defineProperty(this, \"ariaLabel\", void 0);\n    /**\n     * Establishes relationships between the component and label(s) where its value should be one or more element IDs.\n     * @group Props\n     */\n    _defineProperty(this, \"ariaLabelledBy\", void 0);\n    /**\n     * Defines how the items are filtered.\n     * @group Props\n     */\n    _defineProperty(this, \"filterMatchMode\", 'contains');\n    /**\n     * Maximum number of character allows in the editable input field.\n     * @group Props\n     */\n    _defineProperty(this, \"maxlength\", void 0);\n    /**\n     * Advisory information to display in a tooltip on hover.\n     * @group Props\n     */\n    _defineProperty(this, \"tooltip\", '');\n    /**\n     * Position of the tooltip.\n     * @group Props\n     */\n    _defineProperty(this, \"tooltipPosition\", 'right');\n    /**\n     * Type of CSS position.\n     * @group Props\n     */\n    _defineProperty(this, \"tooltipPositionStyle\", 'absolute');\n    /**\n     * Style class of the tooltip.\n     * @group Props\n     */\n    _defineProperty(this, \"tooltipStyleClass\", void 0);\n    /**\n     * Fields used when filtering the options, defaults to optionLabel.\n     * @group Props\n     */\n    _defineProperty(this, \"focusOnHover\", false);\n    /**\n     * Determines if the option will be selected on focus.\n     * @group Props\n     */\n    _defineProperty(this, \"selectOnFocus\", false);\n    /**\n     * Whether to focus on the first visible or selected element when the overlay panel is shown.\n     * @group Props\n     */\n    _defineProperty(this, \"autoOptionFocus\", true);\n    /**\n     * Applies focus to the filter element when the overlay is shown.\n     * @group Props\n     */\n    _defineProperty(this, \"autofocusFilter\", true);\n    _defineProperty(this, \"_itemSize\", void 0);\n    _defineProperty(this, \"_autoZIndex\", void 0);\n    _defineProperty(this, \"_baseZIndex\", void 0);\n    _defineProperty(this, \"_showTransitionOptions\", void 0);\n    _defineProperty(this, \"_hideTransitionOptions\", void 0);\n    _defineProperty(this, \"onChange\", new EventEmitter());\n    /**\n     * Callback to invoke when data is filtered.\n     * @param {DropdownFilterEvent} event - custom filter event.\n     * @group Emits\n     */\n    _defineProperty(this, \"onFilter\", new EventEmitter());\n    /**\n     * Callback to invoke when dropdown gets focus.\n     * @param {Event} event - Browser event.\n     * @group Emits\n     */\n    _defineProperty(this, \"onFocus\", new EventEmitter());\n    /**\n     * Callback to invoke when dropdown loses focus.\n     * @param {Event} event - Browser event.\n     * @group Emits\n     */\n    _defineProperty(this, \"onBlur\", new EventEmitter());\n    /**\n     * Callback to invoke when component is clicked.\n     * @param {MouseEvent} event - Mouse event.\n     * @group Emits\n     */\n    _defineProperty(this, \"onClick\", new EventEmitter());\n    /**\n     * Callback to invoke when dropdown overlay gets visible.\n     * @param {AnimationEvent} event - Animation event.\n     * @group Emits\n     */\n    _defineProperty(this, \"onShow\", new EventEmitter());\n    /**\n     * Callback to invoke when dropdown overlay gets hidden.\n     * @param {AnimationEvent} event - Animation event.\n     * @group Emits\n     */\n    _defineProperty(this, \"onHide\", new EventEmitter());\n    /**\n     * Callback to invoke when dropdown clears the value.\n     * @param {Event} event - Browser event.\n     * @group Emits\n     */\n    _defineProperty(this, \"onClear\", new EventEmitter());\n    /**\n     * Callback to invoke in lazy mode to load new data.\n     * @param {DropdownLazyLoadEvent} event - Lazy load event.\n     * @group Emits\n     */\n    _defineProperty(this, \"onLazyLoad\", new EventEmitter());\n    _defineProperty(this, \"containerViewChild\", void 0);\n    _defineProperty(this, \"filterViewChild\", void 0);\n    _defineProperty(this, \"focusInputViewChild\", void 0);\n    _defineProperty(this, \"editableInputViewChild\", void 0);\n    _defineProperty(this, \"itemsViewChild\", void 0);\n    _defineProperty(this, \"scroller\", void 0);\n    _defineProperty(this, \"overlayViewChild\", void 0);\n    _defineProperty(this, \"firstHiddenFocusableElementOnOverlay\", void 0);\n    _defineProperty(this, \"lastHiddenFocusableElementOnOverlay\", void 0);\n    _defineProperty(this, \"templates\", void 0);\n    _defineProperty(this, \"_disabled\", void 0);\n    _defineProperty(this, \"itemsWrapper\", void 0);\n    _defineProperty(this, \"itemTemplate\", void 0);\n    _defineProperty(this, \"groupTemplate\", void 0);\n    _defineProperty(this, \"loaderTemplate\", void 0);\n    _defineProperty(this, \"selectedItemTemplate\", void 0);\n    _defineProperty(this, \"headerTemplate\", void 0);\n    _defineProperty(this, \"filterTemplate\", void 0);\n    _defineProperty(this, \"footerTemplate\", void 0);\n    _defineProperty(this, \"emptyFilterTemplate\", void 0);\n    _defineProperty(this, \"emptyTemplate\", void 0);\n    _defineProperty(this, \"dropdownIconTemplate\", void 0);\n    _defineProperty(this, \"clearIconTemplate\", void 0);\n    _defineProperty(this, \"filterIconTemplate\", void 0);\n    _defineProperty(this, \"filterOptions\", void 0);\n    _defineProperty(this, \"_options\", signal(null));\n    _defineProperty(this, \"modelValue\", signal(null));\n    _defineProperty(this, \"value\", void 0);\n    _defineProperty(this, \"onModelChange\", () => {});\n    _defineProperty(this, \"onModelTouched\", () => {});\n    _defineProperty(this, \"hover\", void 0);\n    _defineProperty(this, \"focused\", void 0);\n    _defineProperty(this, \"overlayVisible\", void 0);\n    _defineProperty(this, \"optionsChanged\", void 0);\n    _defineProperty(this, \"panel\", void 0);\n    _defineProperty(this, \"dimensionsUpdated\", void 0);\n    _defineProperty(this, \"hoveredItem\", void 0);\n    _defineProperty(this, \"selectedOptionUpdated\", void 0);\n    _defineProperty(this, \"_filterValue\", signal(null));\n    _defineProperty(this, \"searchValue\", void 0);\n    _defineProperty(this, \"searchIndex\", void 0);\n    _defineProperty(this, \"searchTimeout\", void 0);\n    _defineProperty(this, \"previousSearchChar\", void 0);\n    _defineProperty(this, \"currentSearchChar\", void 0);\n    _defineProperty(this, \"preventModelTouched\", void 0);\n    _defineProperty(this, \"focusedOptionIndex\", signal(-1));\n    _defineProperty(this, \"labelId\", void 0);\n    _defineProperty(this, \"listId\", void 0);\n    _defineProperty(this, \"visibleOptions\", computed(() => {\n      const options = this.group ? this.flatOptions(this.options) : this.options || [];\n      if (this._filterValue()) {\n        const filteredOptions = !this.filterBy && !this.filterFields && !this.optionValue ? this.options.filter(option => option.toLowerCase().indexOf(this._filterValue().toLowerCase()) !== -1) : this.filterService.filter(options, this.searchFields(), this._filterValue(), this.filterMatchMode, this.filterLocale);\n        if (this.group) {\n          const optionGroups = this.options || [];\n          const filtered = [];\n          optionGroups.forEach(group => {\n            const groupChildren = this.getOptionGroupChildren(group);\n            const filteredItems = groupChildren.filter(item => filteredOptions.includes(item));\n            if (filteredItems.length > 0) filtered.push({\n              ...group,\n              [typeof this.optionGroupChildren === 'string' ? this.optionGroupChildren : 'items']: [...filteredItems]\n            });\n          });\n          return this.flatOptions(filtered);\n        }\n        return filteredOptions;\n      }\n      return options;\n    }));\n    _defineProperty(this, \"label\", computed(() => {\n      const selectedOptionIndex = this.findSelectedOptionIndex();\n      return selectedOptionIndex !== -1 ? this.getOptionLabel(this.visibleOptions()[selectedOptionIndex]) : this.placeholder || 'p-emptylabel';\n    }));\n    _defineProperty(this, \"selectedOption\", void 0);\n    this.el = el;\n    this.renderer = renderer;\n    this.cd = cd;\n    this.zone = zone;\n    this.filterService = filterService;\n    this.config = config;\n    effect(() => {\n      const modelValue = this.modelValue();\n      const visibleOptions = this.visibleOptions();\n      if (modelValue && this.editable) {\n        this.updateEditableLabel();\n      }\n      if (visibleOptions && ObjectUtils.isNotEmpty(visibleOptions)) {\n        this.selectedOption = visibleOptions[this.findSelectedOptionIndex()];\n      }\n    });\n  }\n  ngOnInit() {\n    this.id = this.id || UniqueComponentId();\n    this.autoUpdateModel();\n    if (this.filterBy) {\n      this.filterOptions = {\n        filter: value => this.onFilterInputChange(value),\n        reset: () => this.resetFilter()\n      };\n    }\n  }\n  ngAfterViewChecked() {\n    if (this.optionsChanged && this.overlayVisible) {\n      this.optionsChanged = false;\n      this.zone.runOutsideAngular(() => {\n        setTimeout(() => {\n          if (this.overlayViewChild) {\n            this.overlayViewChild.alignOverlay();\n          }\n        }, 1);\n      });\n    }\n    if (this.selectedOptionUpdated && this.itemsWrapper) {\n      let selectedItem = DomHandler.findSingle(this.overlayViewChild?.overlayViewChild?.nativeElement, 'li.p-highlight');\n      if (selectedItem) {\n        DomHandler.scrollInView(this.itemsWrapper, selectedItem);\n      }\n      this.selectedOptionUpdated = false;\n    }\n  }\n  ngAfterContentInit() {\n    this.templates.forEach(item => {\n      switch (item.getType()) {\n        case 'item':\n          this.itemTemplate = item.template;\n          break;\n        case 'selectedItem':\n          this.selectedItemTemplate = item.template;\n          break;\n        case 'header':\n          this.headerTemplate = item.template;\n          break;\n        case 'filter':\n          this.filterTemplate = item.template;\n          break;\n        case 'footer':\n          this.footerTemplate = item.template;\n          break;\n        case 'emptyfilter':\n          this.emptyFilterTemplate = item.template;\n          break;\n        case 'empty':\n          this.emptyTemplate = item.template;\n          break;\n        case 'group':\n          this.groupTemplate = item.template;\n          break;\n        case 'loader':\n          this.loaderTemplate = item.template;\n          break;\n        case 'dropdownicon':\n          this.dropdownIconTemplate = item.template;\n          break;\n        case 'clearicon':\n          this.clearIconTemplate = item.template;\n          break;\n        case 'filtericon':\n          this.filterIconTemplate = item.template;\n          break;\n        default:\n          this.itemTemplate = item.template;\n          break;\n      }\n    });\n  }\n  flatOptions(options) {\n    return (options || []).reduce((result, option, index) => {\n      result.push({\n        optionGroup: option,\n        group: true,\n        index\n      });\n      const optionGroupChildren = this.getOptionGroupChildren(option);\n      optionGroupChildren && optionGroupChildren.forEach(o => result.push(o));\n      return result;\n    }, []);\n  }\n  autoUpdateModel() {\n    if (this.selectOnFocus && this.autoOptionFocus && !this.hasSelectedOption()) {\n      this.focusedOptionIndex.set(this.findFirstFocusedOptionIndex());\n      this.onOptionSelect(null, this.visibleOptions()[this.focusedOptionIndex()], false);\n    }\n    if (this.autoDisplayFirst && !this.modelValue()) {\n      const ind = this.findFirstOptionIndex();\n      this.onOptionSelect(null, this.visibleOptions()[ind], false, true);\n    }\n  }\n  onOptionSelect(event, option, isHide = true, preventChange = false) {\n    const value = this.getOptionValue(option);\n    this.updateModel(value, event);\n    this.focusedOptionIndex.set(this.findSelectedOptionIndex());\n    isHide && this.hide(true);\n    preventChange === false && this.onChange.emit({\n      originalEvent: event,\n      value: value\n    });\n  }\n  onOptionMouseEnter(event, index) {\n    if (this.focusOnHover) {\n      this.changeFocusedOptionIndex(event, index);\n    }\n  }\n  updateModel(value, event) {\n    this.value = value;\n    this.onModelChange(value);\n    this.modelValue.set(value);\n    this.selectedOptionUpdated = true;\n  }\n  writeValue(value) {\n    if (this.filter) {\n      this.resetFilter();\n    }\n    this.value = value;\n    this.allowModelChange() && this.onModelChange(value);\n    this.modelValue.set(this.value);\n    this.updateEditableLabel();\n    this.cd.markForCheck();\n  }\n  allowModelChange() {\n    return this.autoDisplayFirst && !this.placeholder && !this.modelValue() && !this.editable && this.options && this.options.length;\n  }\n  isSelected(option) {\n    return this.isValidOption(option) && ObjectUtils.equals(this.modelValue(), this.getOptionValue(option), this.equalityKey());\n  }\n  ngAfterViewInit() {\n    if (this.editable) {\n      this.updateEditableLabel();\n    }\n  }\n  updateEditableLabel() {\n    if (this.editableInputViewChild) {\n      this.editableInputViewChild.nativeElement.value = this.getOptionLabel(this.modelValue()) === undefined ? this.editableInputViewChild.nativeElement.value : this.getOptionLabel(this.modelValue());\n    }\n  }\n  getOptionIndex(index, scrollerOptions) {\n    return this.virtualScrollerDisabled ? index : scrollerOptions && scrollerOptions.getItemOptions(index)['index'];\n  }\n  getOptionLabel(option) {\n    return this.optionLabel ? ObjectUtils.resolveFieldData(option, this.optionLabel) : option && option.label !== undefined ? option.label : option;\n  }\n  getOptionValue(option) {\n    return this.optionValue ? ObjectUtils.resolveFieldData(option, this.optionValue) : !this.optionLabel && option && option.value !== undefined ? option.value : option;\n  }\n  isOptionDisabled(option) {\n    return this.optionDisabled ? ObjectUtils.resolveFieldData(option, this.optionDisabled) : option && option.disabled !== undefined ? option.disabled : false;\n  }\n  getOptionGroupLabel(optionGroup) {\n    return this.optionGroupLabel ? ObjectUtils.resolveFieldData(optionGroup, this.optionGroupLabel) : optionGroup && optionGroup.label !== undefined ? optionGroup.label : optionGroup;\n  }\n  getOptionGroupChildren(optionGroup) {\n    return this.optionGroupChildren ? ObjectUtils.resolveFieldData(optionGroup, this.optionGroupChildren) : optionGroup.items;\n  }\n  getAriaPosInset(index) {\n    return (this.optionGroupLabel ? index - this.visibleOptions().slice(0, index).filter(option => this.isOptionGroup(option)).length : index) + 1;\n  }\n  get ariaSetSize() {\n    return this.visibleOptions().filter(option => !this.isOptionGroup(option)).length;\n  }\n  /**\n   * Callback to invoke on filter reset.\n   * @group Method\n   */\n  resetFilter() {\n    this._filterValue.set(null);\n    if (this.filterViewChild && this.filterViewChild.nativeElement) {\n      this.filterViewChild.nativeElement.value = '';\n    }\n  }\n  registerOnChange(fn) {\n    this.onModelChange = fn;\n  }\n  registerOnTouched(fn) {\n    this.onModelTouched = fn;\n  }\n  setDisabledState(val) {\n    this.disabled = val;\n    this.cd.markForCheck();\n  }\n  onContainerClick(event) {\n    if (this.disabled || this.readonly) {\n      return;\n    }\n    this.focusInputViewChild?.nativeElement.focus({\n      preventScroll: true\n    });\n    if (event.target.tagName === 'INPUT' || event.target.getAttribute('data-pc-section') === 'clearicon' || event.target.closest('[data-pc-section=\"clearicon\"]')) {\n      return;\n    } else if (!this.overlayViewChild || !this.overlayViewChild.el.nativeElement.contains(event.target)) {\n      this.overlayVisible ? this.hide(true) : this.show(true);\n    }\n    this.onClick.emit(event);\n    this.cd.detectChanges();\n  }\n  isEmpty() {\n    return !this._options() || this._options() && this._options().length === 0;\n  }\n  onEditableInput(event) {\n    const value = event.target.value;\n    this.searchValue = '';\n    const matched = this.searchOptions(event, value);\n    !matched && this.focusedOptionIndex.set(-1);\n    this.onModelChange(value);\n    this.updateModel(value, event);\n    this.onChange.emit({\n      originalEvent: event,\n      value: value\n    });\n  }\n  /**\n   * Displays the panel.\n   * @group Method\n   */\n  show(isFocus) {\n    this.overlayVisible = true;\n    const focusedOptionIndex = this.focusedOptionIndex() !== -1 ? this.focusedOptionIndex() : this.autoOptionFocus ? this.findFirstFocusedOptionIndex() : -1;\n    this.focusedOptionIndex.set(focusedOptionIndex);\n    if (isFocus) {\n      DomHandler.focus(this.focusInputViewChild?.nativeElement);\n    }\n    this.cd.markForCheck();\n  }\n  onOverlayAnimationStart(event) {\n    if (event.toState === 'visible') {\n      this.itemsWrapper = DomHandler.findSingle(this.overlayViewChild?.overlayViewChild?.nativeElement, this.virtualScroll ? '.p-scroller' : '.p-dropdown-items-wrapper');\n      this.virtualScroll && this.scroller?.setContentEl(this.itemsViewChild?.nativeElement);\n      if (this.options && this.options.length) {\n        if (this.virtualScroll) {\n          const selectedIndex = this.modelValue() ? this.focusedOptionIndex() : -1;\n          if (selectedIndex !== -1) {\n            this.scroller?.scrollToIndex(selectedIndex);\n          }\n        } else {\n          let selectedListItem = DomHandler.findSingle(this.itemsWrapper, '.p-dropdown-item.p-highlight');\n          if (selectedListItem) {\n            selectedListItem.scrollIntoView({\n              block: 'nearest',\n              inline: 'nearest'\n            });\n          }\n        }\n      }\n      if (this.filterViewChild && this.filterViewChild.nativeElement) {\n        this.preventModelTouched = true;\n        if (this.autofocusFilter) {\n          this.filterViewChild.nativeElement.focus();\n        }\n      }\n      this.onShow.emit(event);\n    }\n    if (event.toState === 'void') {\n      this.itemsWrapper = null;\n      this.onModelTouched();\n      this.onHide.emit(event);\n    }\n  }\n  /**\n   * Hides the panel.\n   * @group Method\n   */\n  hide(isFocus) {\n    this.overlayVisible = false;\n    this.focusedOptionIndex.set(-1);\n    if (this.filter && this.resetFilterOnHide) {\n      this.resetFilter();\n    }\n    isFocus && DomHandler.focus(this.focusInputViewChild?.nativeElement);\n    this.cd.markForCheck();\n  }\n  onInputFocus(event) {\n    if (this.disabled) {\n      // For ScreenReaders\n      return;\n    }\n    this.focused = true;\n    const focusedOptionIndex = this.focusedOptionIndex() !== -1 ? this.focusedOptionIndex() : this.overlayVisible && this.autoOptionFocus ? this.findFirstFocusedOptionIndex() : -1;\n    this.focusedOptionIndex.set(focusedOptionIndex);\n    this.overlayVisible && this.scrollInView(this.focusedOptionIndex());\n    this.onFocus.emit(event);\n  }\n  onInputBlur(event) {\n    this.focused = false;\n    this.overlayVisible === false && this.onBlur.emit(event);\n    if (!this.preventModelTouched) {\n      this.onModelTouched();\n    }\n    this.preventModelTouched = false;\n  }\n  onKeyDown(event, search) {\n    if (this.disabled || this.readonly) {\n      return;\n    }\n    switch (event.code) {\n      //down\n      case 'ArrowDown':\n        this.onArrowDownKey(event);\n        break;\n      //up\n      case 'ArrowUp':\n        this.onArrowUpKey(event, this.editable);\n        break;\n      case 'ArrowLeft':\n      case 'ArrowRight':\n        this.onArrowLeftKey(event, this.editable);\n        break;\n      case 'Delete':\n        this.onDeleteKey(event);\n        break;\n      case 'Home':\n        this.onHomeKey(event, this.editable);\n        break;\n      case 'End':\n        this.onEndKey(event, this.editable);\n        break;\n      case 'PageDown':\n        this.onPageDownKey(event);\n        break;\n      case 'PageUp':\n        this.onPageUpKey(event);\n        break;\n      //space\n      case 'Space':\n        this.onSpaceKey(event, search);\n        break;\n      //enter\n      case 'Enter':\n      case 'NumpadEnter':\n        this.onEnterKey(event);\n        break;\n      //escape and tab\n      case 'Escape':\n        this.onEscapeKey(event);\n        break;\n      case 'Tab':\n        this.onTabKey(event);\n        break;\n      case 'Backspace':\n        this.onBackspaceKey(event, this.editable);\n        break;\n      case 'ShiftLeft':\n      case 'ShiftRight':\n        //NOOP\n        break;\n      default:\n        if (!event.metaKey && ObjectUtils.isPrintableCharacter(event.key)) {\n          !this.overlayVisible && this.show();\n          !this.editable && this.searchOptions(event, event.key);\n        }\n        break;\n    }\n  }\n  onFilterKeyDown(event) {\n    switch (event.code) {\n      case 'ArrowDown':\n        this.onArrowDownKey(event);\n        break;\n      case 'ArrowUp':\n        this.onArrowUpKey(event, true);\n        break;\n      case 'ArrowLeft':\n      case 'ArrowRight':\n        this.onArrowLeftKey(event, true);\n        break;\n      case 'Home':\n        this.onHomeKey(event, true);\n        break;\n      case 'End':\n        this.onEndKey(event, true);\n        break;\n      case 'Enter':\n        this.onEnterKey(event);\n        break;\n      case 'Escape':\n        this.onEscapeKey(event);\n        break;\n      case 'Tab':\n        this.onTabKey(event, true);\n        break;\n      default:\n        break;\n    }\n  }\n  onFilterBlur(event) {\n    this.focusedOptionIndex.set(-1);\n  }\n  onArrowDownKey(event) {\n    const optionIndex = this.focusedOptionIndex() !== -1 ? this.findNextOptionIndex(this.focusedOptionIndex()) : this.findFirstFocusedOptionIndex();\n    this.changeFocusedOptionIndex(event, optionIndex);\n    !this.overlayVisible && this.show();\n    event.preventDefault();\n  }\n  changeFocusedOptionIndex(event, index) {\n    if (this.focusedOptionIndex() !== index) {\n      this.focusedOptionIndex.set(index);\n      this.scrollInView();\n      if (this.selectOnFocus) {\n        const option = this.visibleOptions()[index];\n        this.onOptionSelect(event, option, false);\n      }\n    }\n  }\n  get virtualScrollerDisabled() {\n    return !this.virtualScroll;\n  }\n  scrollInView(index = -1) {\n    const id = index !== -1 ? `${this.id}_${index}` : this.focusedOptionId;\n    if (this.itemsViewChild && this.itemsViewChild.nativeElement) {\n      const element = DomHandler.findSingle(this.itemsViewChild.nativeElement, `li[id=\"${id}\"]`);\n      if (element) {\n        element.scrollIntoView && element.scrollIntoView({\n          block: 'nearest',\n          inline: 'nearest'\n        });\n      } else if (!this.virtualScrollerDisabled) {\n        setTimeout(() => {\n          this.virtualScroll && this.scroller?.scrollToIndex(index !== -1 ? index : this.focusedOptionIndex());\n        }, 0);\n      }\n    }\n  }\n  get focusedOptionId() {\n    return this.focusedOptionIndex() !== -1 ? `${this.id}_${this.focusedOptionIndex()}` : null;\n  }\n  hasSelectedOption() {\n    return this.modelValue() !== undefined;\n  }\n  isValidSelectedOption(option) {\n    return this.isValidOption(option) && this.isSelected(option);\n  }\n  equalityKey() {\n    return this.optionValue ? null : this.dataKey;\n  }\n  findFirstFocusedOptionIndex() {\n    const selectedIndex = this.findSelectedOptionIndex();\n    return selectedIndex < 0 ? this.findFirstOptionIndex() : selectedIndex;\n  }\n  findFirstOptionIndex() {\n    return this.visibleOptions().findIndex(option => this.isValidOption(option));\n  }\n  findSelectedOptionIndex() {\n    return this.hasSelectedOption() ? this.visibleOptions().findIndex(option => this.isValidSelectedOption(option)) : -1;\n  }\n  findNextOptionIndex(index) {\n    const matchedOptionIndex = index < this.visibleOptions().length - 1 ? this.visibleOptions().slice(index + 1).findIndex(option => this.isValidOption(option)) : -1;\n    return matchedOptionIndex > -1 ? matchedOptionIndex + index + 1 : index;\n  }\n  findPrevOptionIndex(index) {\n    const matchedOptionIndex = index > 0 ? ObjectUtils.findLastIndex(this.visibleOptions().slice(0, index), option => this.isValidOption(option)) : -1;\n    return matchedOptionIndex > -1 ? matchedOptionIndex : index;\n  }\n  findLastOptionIndex() {\n    return ObjectUtils.findLastIndex(this.visibleOptions(), option => this.isValidOption(option));\n  }\n  findLastFocusedOptionIndex() {\n    const selectedIndex = this.findSelectedOptionIndex();\n    return selectedIndex < 0 ? this.findLastOptionIndex() : selectedIndex;\n  }\n  isValidOption(option) {\n    return option && !(this.isOptionDisabled(option) || this.isOptionGroup(option));\n  }\n  isOptionGroup(option) {\n    return this.optionGroupLabel && option.optionGroup && option.group;\n  }\n  onArrowUpKey(event, pressedInInputText = false) {\n    if (event.altKey && !pressedInInputText) {\n      if (this.focusedOptionIndex() !== -1) {\n        const option = this.visibleOptions()[this.focusedOptionIndex()];\n        this.onOptionSelect(event, option);\n      }\n      this.overlayVisible && this.hide();\n      event.preventDefault();\n    } else {\n      const optionIndex = this.focusedOptionIndex() !== -1 ? this.findPrevOptionIndex(this.focusedOptionIndex()) : this.findLastFocusedOptionIndex();\n      this.changeFocusedOptionIndex(event, optionIndex);\n      !this.overlayVisible && this.show();\n      event.preventDefault();\n    }\n  }\n  onArrowLeftKey(event, pressedInInputText = false) {\n    pressedInInputText && this.focusedOptionIndex.set(-1);\n  }\n  onDeleteKey(event) {\n    if (this.showClear) {\n      this.clear(event);\n      event.preventDefault();\n    }\n  }\n  onHomeKey(event, pressedInInputText = false) {\n    if (pressedInInputText) {\n      event.currentTarget.setSelectionRange(0, 0);\n      this.focusedOptionIndex.set(-1);\n    } else {\n      this.changeFocusedOptionIndex(event, this.findFirstOptionIndex());\n      !this.overlayVisible && this.show();\n    }\n    event.preventDefault();\n  }\n  onEndKey(event, pressedInInputText = false) {\n    if (pressedInInputText) {\n      const target = event.currentTarget;\n      const len = target.value.length;\n      target.setSelectionRange(len, len);\n      this.focusedOptionIndex.set(-1);\n    } else {\n      this.changeFocusedOptionIndex(event, this.findLastOptionIndex());\n      !this.overlayVisible && this.show();\n    }\n    event.preventDefault();\n  }\n  onPageDownKey(event) {\n    this.scrollInView(this.visibleOptions().length - 1);\n    event.preventDefault();\n  }\n  onPageUpKey(event) {\n    this.scrollInView(0);\n    event.preventDefault();\n  }\n  onSpaceKey(event, pressedInInputText = false) {\n    !pressedInInputText && this.onEnterKey(event);\n  }\n  onEnterKey(event) {\n    if (!this.overlayVisible) {\n      this.onArrowDownKey(event);\n    } else {\n      if (this.focusedOptionIndex() !== -1) {\n        const option = this.visibleOptions()[this.focusedOptionIndex()];\n        this.onOptionSelect(event, option);\n      }\n      this.hide();\n    }\n    event.preventDefault();\n  }\n  onEscapeKey(event) {\n    this.overlayVisible && this.hide(true);\n    event.preventDefault();\n  }\n  onTabKey(event, pressedInInputText = false) {\n    if (!pressedInInputText) {\n      if (this.overlayVisible && this.hasFocusableElements()) {\n        DomHandler.focus(event.shiftKey ? this.lastHiddenFocusableElementOnOverlay.nativeElement : this.firstHiddenFocusableElementOnOverlay.nativeElement);\n        event.preventDefault();\n      } else {\n        if (this.focusedOptionIndex() !== -1) {\n          const option = this.visibleOptions()[this.focusedOptionIndex()];\n          this.onOptionSelect(event, option);\n        }\n        this.overlayVisible && this.hide(this.filter);\n      }\n    }\n  }\n  onFirstHiddenFocus(event) {\n    const focusableEl = event.relatedTarget === this.focusInputViewChild?.nativeElement ? DomHandler.getFirstFocusableElement(this.overlayViewChild.el.nativeElement, ':not(.p-hidden-focusable)') : this.focusInputViewChild.nativeElement;\n    DomHandler.focus(focusableEl);\n  }\n  onLastHiddenFocus(event) {\n    const focusableEl = event.relatedTarget === this.focusInputViewChild?.nativeElement ? DomHandler.getLastFocusableElement(this.overlayViewChild?.overlayViewChild?.nativeElement, ':not([data-p-hidden-focusable=\"true\"])') : this.focusInputViewChild?.nativeElement;\n    DomHandler.focus(focusableEl);\n  }\n  hasFocusableElements() {\n    return DomHandler.getFocusableElements(this.overlayViewChild.overlayViewChild.nativeElement, ':not([data-p-hidden-focusable=\"true\"])').length > 0;\n  }\n  onBackspaceKey(event, pressedInInputText = false) {\n    if (pressedInInputText) {\n      !this.overlayVisible && this.show();\n    }\n  }\n  searchFields() {\n    return this.filterFields || [this.optionLabel];\n  }\n  searchOptions(event, char) {\n    this.searchValue = (this.searchValue || '') + char;\n    let optionIndex = -1;\n    let matched = false;\n    if (this.focusedOptionIndex() !== -1) {\n      optionIndex = this.visibleOptions().slice(this.focusedOptionIndex()).findIndex(option => this.isOptionMatched(option));\n      optionIndex = optionIndex === -1 ? this.visibleOptions().slice(0, this.focusedOptionIndex()).findIndex(option => this.isOptionMatched(option)) : optionIndex + this.focusedOptionIndex();\n    } else {\n      optionIndex = this.visibleOptions().findIndex(option => this.isOptionMatched(option));\n    }\n    if (optionIndex !== -1) {\n      matched = true;\n    }\n    if (optionIndex === -1 && this.focusedOptionIndex() === -1) {\n      optionIndex = this.findFirstFocusedOptionIndex();\n    }\n    if (optionIndex !== -1) {\n      this.changeFocusedOptionIndex(event, optionIndex);\n    }\n    if (this.searchTimeout) {\n      clearTimeout(this.searchTimeout);\n    }\n    this.searchTimeout = setTimeout(() => {\n      this.searchValue = '';\n      this.searchTimeout = null;\n    }, 500);\n    return matched;\n  }\n  isOptionMatched(option) {\n    return this.isValidOption(option) && this.getOptionLabel(option).toLocaleLowerCase(this.filterLocale).startsWith(this.searchValue.toLocaleLowerCase(this.filterLocale));\n  }\n  onFilterInputChange(event) {\n    let value = event.target.value?.trim();\n    this._filterValue.set(value);\n    this.focusedOptionIndex.set(-1);\n    this.onFilter.emit({\n      originalEvent: event,\n      filter: this._filterValue()\n    });\n    !this.virtualScrollerDisabled && this.scroller.scrollToIndex(0);\n    this.cd.markForCheck();\n  }\n  applyFocus() {\n    if (this.editable) DomHandler.findSingle(this.el.nativeElement, '.p-dropdown-label.p-inputtext').focus();else DomHandler.findSingle(this.el.nativeElement, 'input[readonly]').focus();\n  }\n  /**\n   * Applies focus.\n   * @group Method\n   */\n  focus() {\n    this.applyFocus();\n  }\n  clear(event) {\n    this.updateModel(null, event);\n    this.updateEditableLabel();\n    this.onChange.emit({\n      originalEvent: event,\n      value: this.value\n    });\n    this.onClear.emit(event);\n  }\n}\n_defineProperty(Dropdown, \"\\u0275fac\", function Dropdown_Factory(t) {\n  return new (t || Dropdown)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(i3.FilterService), i0.ɵɵdirectiveInject(i3.PrimeNGConfig));\n});\n_defineProperty(Dropdown, \"\\u0275cmp\", /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: Dropdown,\n  selectors: [[\"p-dropdown\"]],\n  contentQueries: function Dropdown_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      i0.ɵɵcontentQuery(dirIndex, PrimeTemplate, 4);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.templates = _t);\n    }\n  },\n  viewQuery: function Dropdown_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c3, 5);\n      i0.ɵɵviewQuery(_c4, 5);\n      i0.ɵɵviewQuery(_c5, 5);\n      i0.ɵɵviewQuery(_c6, 5);\n      i0.ɵɵviewQuery(_c7, 5);\n      i0.ɵɵviewQuery(_c8, 5);\n      i0.ɵɵviewQuery(_c9, 5);\n      i0.ɵɵviewQuery(_c10, 5);\n      i0.ɵɵviewQuery(_c11, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.containerViewChild = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.filterViewChild = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.focusInputViewChild = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.editableInputViewChild = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.itemsViewChild = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.scroller = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.overlayViewChild = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.firstHiddenFocusableElementOnOverlay = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.lastHiddenFocusableElementOnOverlay = _t.first);\n    }\n  },\n  hostAttrs: [1, \"p-element\", \"p-inputwrapper\"],\n  hostVars: 4,\n  hostBindings: function Dropdown_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      i0.ɵɵclassProp(\"p-inputwrapper-filled\", ctx.filled)(\"p-inputwrapper-focus\", ctx.focused || ctx.overlayVisible);\n    }\n  },\n  inputs: {\n    id: \"id\",\n    scrollHeight: \"scrollHeight\",\n    filter: \"filter\",\n    name: \"name\",\n    style: \"style\",\n    panelStyle: \"panelStyle\",\n    styleClass: \"styleClass\",\n    panelStyleClass: \"panelStyleClass\",\n    readonly: \"readonly\",\n    required: \"required\",\n    editable: \"editable\",\n    appendTo: \"appendTo\",\n    tabindex: \"tabindex\",\n    placeholder: \"placeholder\",\n    filterPlaceholder: \"filterPlaceholder\",\n    filterLocale: \"filterLocale\",\n    inputId: \"inputId\",\n    dataKey: \"dataKey\",\n    filterBy: \"filterBy\",\n    filterFields: \"filterFields\",\n    autofocus: \"autofocus\",\n    resetFilterOnHide: \"resetFilterOnHide\",\n    dropdownIcon: \"dropdownIcon\",\n    optionLabel: \"optionLabel\",\n    optionValue: \"optionValue\",\n    optionDisabled: \"optionDisabled\",\n    optionGroupLabel: \"optionGroupLabel\",\n    optionGroupChildren: \"optionGroupChildren\",\n    autoDisplayFirst: \"autoDisplayFirst\",\n    group: \"group\",\n    showClear: \"showClear\",\n    emptyFilterMessage: \"emptyFilterMessage\",\n    emptyMessage: \"emptyMessage\",\n    lazy: \"lazy\",\n    virtualScroll: \"virtualScroll\",\n    virtualScrollItemSize: \"virtualScrollItemSize\",\n    virtualScrollOptions: \"virtualScrollOptions\",\n    overlayOptions: \"overlayOptions\",\n    ariaFilterLabel: \"ariaFilterLabel\",\n    ariaLabel: \"ariaLabel\",\n    ariaLabelledBy: \"ariaLabelledBy\",\n    filterMatchMode: \"filterMatchMode\",\n    maxlength: \"maxlength\",\n    tooltip: \"tooltip\",\n    tooltipPosition: \"tooltipPosition\",\n    tooltipPositionStyle: \"tooltipPositionStyle\",\n    tooltipStyleClass: \"tooltipStyleClass\",\n    focusOnHover: \"focusOnHover\",\n    selectOnFocus: \"selectOnFocus\",\n    autoOptionFocus: \"autoOptionFocus\",\n    autofocusFilter: \"autofocusFilter\",\n    disabled: \"disabled\",\n    itemSize: \"itemSize\",\n    autoZIndex: \"autoZIndex\",\n    baseZIndex: \"baseZIndex\",\n    showTransitionOptions: \"showTransitionOptions\",\n    hideTransitionOptions: \"hideTransitionOptions\",\n    filterValue: \"filterValue\",\n    options: \"options\"\n  },\n  outputs: {\n    onChange: \"onChange\",\n    onFilter: \"onFilter\",\n    onFocus: \"onFocus\",\n    onBlur: \"onBlur\",\n    onClick: \"onClick\",\n    onShow: \"onShow\",\n    onHide: \"onHide\",\n    onClear: \"onClear\",\n    onLazyLoad: \"onLazyLoad\"\n  },\n  features: [i0.ɵɵProvidersFeature([DROPDOWN_VALUE_ACCESSOR])],\n  decls: 11,\n  vars: 20,\n  consts: [[3, \"ngClass\", \"ngStyle\", \"click\"], [\"container\", \"\"], [\"role\", \"combobox\", \"pAutoFocus\", \"\", 3, \"ngClass\", \"pTooltip\", \"tooltipPosition\", \"positionStyle\", \"tooltipStyleClass\", \"autofocus\", \"focus\", \"blur\", \"keydown\", 4, \"ngIf\"], [\"type\", \"text\", \"aria-haspopup\", \"listbox\", 3, \"ngClass\", \"disabled\", \"input\", \"keydown\", \"focus\", \"blur\", 4, \"ngIf\"], [4, \"ngIf\"], [\"role\", \"button\", \"aria-label\", \"dropdown trigger\", \"aria-haspopup\", \"listbox\", 1, \"p-dropdown-trigger\"], [\"class\", \"p-dropdown-trigger-icon\", 4, \"ngIf\"], [3, \"visible\", \"options\", \"target\", \"appendTo\", \"autoZIndex\", \"baseZIndex\", \"showTransitionOptions\", \"hideTransitionOptions\", \"visibleChange\", \"onAnimationStart\", \"onHide\"], [\"overlay\", \"\"], [\"pTemplate\", \"content\"], [\"role\", \"combobox\", \"pAutoFocus\", \"\", 3, \"ngClass\", \"pTooltip\", \"tooltipPosition\", \"positionStyle\", \"tooltipStyleClass\", \"autofocus\", \"focus\", \"blur\", \"keydown\"], [\"focusInput\", \"\"], [4, \"ngIf\", \"ngIfElse\"], [4, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"], [\"defaultPlaceholder\", \"\"], [\"type\", \"text\", \"aria-haspopup\", \"listbox\", 3, \"ngClass\", \"disabled\", \"input\", \"keydown\", \"focus\", \"blur\"], [\"editableInput\", \"\"], [3, \"styleClass\", \"click\", 4, \"ngIf\"], [\"class\", \"p-dropdown-clear-icon\", 3, \"click\", 4, \"ngIf\"], [3, \"styleClass\", \"click\"], [1, \"p-dropdown-clear-icon\", 3, \"click\"], [4, \"ngTemplateOutlet\"], [\"class\", \"p-dropdown-trigger-icon\", 3, \"ngClass\", 4, \"ngIf\"], [3, \"styleClass\", 4, \"ngIf\"], [1, \"p-dropdown-trigger-icon\", 3, \"ngClass\"], [3, \"styleClass\"], [1, \"p-dropdown-trigger-icon\"], [3, \"ngClass\", \"ngStyle\"], [\"role\", \"presentation\", 1, \"p-hidden-accessible\", \"p-hidden-focusable\", 3, \"focus\"], [\"firstHiddenFocusableEl\", \"\"], [\"class\", \"p-dropdown-header\", 3, \"click\", 4, \"ngIf\"], [1, \"p-dropdown-items-wrapper\"], [3, \"items\", \"style\", \"itemSize\", \"autoSize\", \"lazy\", \"options\", \"onLazyLoad\", 4, \"ngIf\"], [\"buildInItems\", \"\"], [\"lastHiddenFocusableEl\", \"\"], [1, \"p-dropdown-header\", 3, \"click\"], [\"builtInFilterElement\", \"\"], [1, \"p-dropdown-filter-container\"], [\"type\", \"text\", \"autocomplete\", \"off\", 1, \"p-dropdown-filter\", \"p-inputtext\", \"p-component\", 3, \"value\", \"input\", \"keydown\", \"blur\"], [\"filter\", \"\"], [\"class\", \"p-dropdown-filter-icon\", 4, \"ngIf\"], [1, \"p-dropdown-filter-icon\"], [3, \"items\", \"itemSize\", \"autoSize\", \"lazy\", \"options\", \"onLazyLoad\"], [\"scroller\", \"\"], [\"pTemplate\", \"loader\"], [\"role\", \"listbox\", 1, \"p-dropdown-items\", 3, \"ngClass\"], [\"items\", \"\"], [\"ngFor\", \"\", 3, \"ngForOf\"], [\"class\", \"p-dropdown-empty-message\", 3, \"ngStyle\", 4, \"ngIf\"], [\"role\", \"option\", 1, \"p-dropdown-item-group\", 3, \"ngStyle\"], [3, \"id\", \"option\", \"selected\", \"label\", \"disabled\", \"template\", \"focused\", \"ariaPosInset\", \"ariaSetSize\", \"onClick\", \"onMouseEnter\"], [1, \"p-dropdown-empty-message\", 3, \"ngStyle\"], [\"emptyFilter\", \"\"], [\"empty\", \"\"]],\n  template: function Dropdown_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0, 1);\n      i0.ɵɵlistener(\"click\", function Dropdown_Template_div_click_0_listener($event) {\n        return ctx.onContainerClick($event);\n      });\n      i0.ɵɵtemplate(2, Dropdown_span_2_Template, 6, 21, \"span\", 2);\n      i0.ɵɵtemplate(3, Dropdown_input_3_Template, 2, 5, \"input\", 3);\n      i0.ɵɵtemplate(4, Dropdown_ng_container_4_Template, 3, 2, \"ng-container\", 4);\n      i0.ɵɵelementStart(5, \"div\", 5);\n      i0.ɵɵtemplate(6, Dropdown_ng_container_6_Template, 3, 2, \"ng-container\", 4);\n      i0.ɵɵtemplate(7, Dropdown_span_7_Template, 2, 1, \"span\", 6);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"p-overlay\", 7, 8);\n      i0.ɵɵlistener(\"visibleChange\", function Dropdown_Template_p_overlay_visibleChange_8_listener($event) {\n        return ctx.overlayVisible = $event;\n      })(\"onAnimationStart\", function Dropdown_Template_p_overlay_onAnimationStart_8_listener($event) {\n        return ctx.onOverlayAnimationStart($event);\n      })(\"onHide\", function Dropdown_Template_p_overlay_onHide_8_listener() {\n        return ctx.hide();\n      });\n      i0.ɵɵtemplate(10, Dropdown_ng_template_10_Template, 13, 19, \"ng-template\", 9);\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵclassMap(ctx.styleClass);\n      i0.ɵɵproperty(\"ngClass\", ctx.containerClass)(\"ngStyle\", ctx.style);\n      i0.ɵɵattribute(\"id\", ctx.id);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", !ctx.editable);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.editable);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.isVisibleClearIcon);\n      i0.ɵɵadvance(1);\n      i0.ɵɵattribute(\"aria-expanded\", ctx.overlayVisible)(\"data-pc-section\", \"trigger\");\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", !ctx.dropdownIconTemplate);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.dropdownIconTemplate);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"visible\", ctx.overlayVisible)(\"options\", ctx.overlayOptions)(\"target\", \"@parent\")(\"appendTo\", ctx.appendTo)(\"autoZIndex\", ctx.autoZIndex)(\"baseZIndex\", ctx.baseZIndex)(\"showTransitionOptions\", ctx.showTransitionOptions)(\"hideTransitionOptions\", ctx.hideTransitionOptions);\n    }\n  },\n  dependencies: function () {\n    return [i1.NgClass, i1.NgForOf, i1.NgIf, i1.NgTemplateOutlet, i1.NgStyle, i4.Overlay, i3.PrimeTemplate, i5.Tooltip, i6.Scroller, i7.AutoFocus, TimesIcon, ChevronDownIcon, SearchIcon, DropdownItem];\n  },\n  styles: [\"@layer primeng{.p-dropdown{display:inline-flex;cursor:pointer;position:relative;-webkit-user-select:none;user-select:none}.p-dropdown-clear-icon{position:absolute;top:50%;margin-top:-.5rem}.p-dropdown-trigger{display:flex;align-items:center;justify-content:center;flex-shrink:0}.p-dropdown-label{display:block;white-space:nowrap;overflow:hidden;flex:1 1 auto;width:1%;text-overflow:ellipsis;cursor:pointer}.p-dropdown-label-empty{overflow:hidden;opacity:0}input.p-dropdown-label{cursor:default}.p-dropdown .p-dropdown-panel{min-width:100%}.p-dropdown-items-wrapper{overflow:auto}.p-dropdown-item{cursor:pointer;font-weight:400;white-space:nowrap;position:relative;overflow:hidden}.p-dropdown-item-group{cursor:auto}.p-dropdown-items{margin:0;padding:0;list-style-type:none}.p-dropdown-filter{width:100%}.p-dropdown-filter-container{position:relative}.p-dropdown-filter-icon{position:absolute;top:50%;margin-top:-.5rem}.p-fluid .p-dropdown{display:flex}.p-fluid .p-dropdown .p-dropdown-label{width:1%}}\\n\"],\n  encapsulation: 2,\n  changeDetection: 0\n}));\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(Dropdown, [{\n    type: Component,\n    args: [{\n      selector: 'p-dropdown',\n      template: `\n        <div #container [attr.id]=\"id\" [ngClass]=\"containerClass\" (click)=\"onContainerClick($event)\" [ngStyle]=\"style\" [class]=\"styleClass\">\n            <span\n                #focusInput\n                [ngClass]=\"inputClass\"\n                *ngIf=\"!editable\"\n                [pTooltip]=\"tooltip\"\n                [tooltipPosition]=\"tooltipPosition\"\n                [positionStyle]=\"tooltipPositionStyle\"\n                [tooltipStyleClass]=\"tooltipStyleClass\"\n                [attr.aria-disabled]=\"disabled\"\n                [attr.id]=\"inputId\"\n                role=\"combobox\"\n                [attr.aria-label]=\"ariaLabel || (label() === 'p-emptylabel' ? undefined : label())\"\n                [attr.aria-labelledby]=\"ariaLabelledBy\"\n                [attr.aria-haspopup]=\"'listbox'\"\n                [attr.aria-expanded]=\"overlayVisible\"\n                [attr.aria-controls]=\"id + '_list'\"\n                [attr.tabindex]=\"!disabled ? tabindex : -1\"\n                pAutoFocus\n                [autofocus]=\"autofocus\"\n                [attr.aria-activedescendant]=\"focused ? focusedOptionId : undefined\"\n                (focus)=\"onInputFocus($event)\"\n                (blur)=\"onInputBlur($event)\"\n                (keydown)=\"onKeyDown($event)\"\n            >\n                <ng-container *ngIf=\"!selectedItemTemplate; else defaultPlaceholder\">{{ label() === 'p-emptylabel' ? '&nbsp;' : label() }}</ng-container>\n                <ng-container *ngTemplateOutlet=\"selectedItemTemplate; context: { $implicit: selectedOption }\"></ng-container>\n                <ng-template #defaultPlaceholder>\n                    <span *ngIf=\"!modelValue() && (label() === placeholder || (label() && !placeholder))\">{{ label() === 'p-emptylabel' ? '&nbsp;' : placeholder }}</span>\n                </ng-template>\n            </span>\n            <input\n                *ngIf=\"editable\"\n                #editableInput\n                type=\"text\"\n                [attr.maxlength]=\"maxlength\"\n                [ngClass]=\"inputClass\"\n                [disabled]=\"disabled\"\n                aria-haspopup=\"listbox\"\n                [attr.placeholder]=\"placeholder\"\n                [attr.aria-expanded]=\"overlayVisible\"\n                (input)=\"onEditableInput($event)\"\n                (keydown)=\"onKeyDown($event)\"\n                (focus)=\"onInputFocus($event)\"\n                (blur)=\"onInputBlur($event)\"\n            />\n            <ng-container *ngIf=\"isVisibleClearIcon\">\n                <TimesIcon [styleClass]=\"'p-dropdown-clear-icon'\" (click)=\"clear($event)\" *ngIf=\"!clearIconTemplate\" [attr.data-pc-section]=\"'clearicon'\" />\n                <span class=\"p-dropdown-clear-icon\" (click)=\"clear($event)\" *ngIf=\"clearIconTemplate\" [attr.data-pc-section]=\"'clearicon'\">\n                    <ng-template *ngTemplateOutlet=\"clearIconTemplate\"></ng-template>\n                </span>\n            </ng-container>\n\n            <div class=\"p-dropdown-trigger\" role=\"button\" aria-label=\"dropdown trigger\" aria-haspopup=\"listbox\" [attr.aria-expanded]=\"overlayVisible\" [attr.data-pc-section]=\"'trigger'\">\n                <ng-container *ngIf=\"!dropdownIconTemplate\">\n                    <span class=\"p-dropdown-trigger-icon\" *ngIf=\"dropdownIcon\" [ngClass]=\"dropdownIcon\"></span>\n                    <ChevronDownIcon *ngIf=\"!dropdownIcon\" [styleClass]=\"'p-dropdown-trigger-icon'\" />\n                </ng-container>\n                <span *ngIf=\"dropdownIconTemplate\" class=\"p-dropdown-trigger-icon\">\n                    <ng-template *ngTemplateOutlet=\"dropdownIconTemplate\"></ng-template>\n                </span>\n            </div>\n\n            <p-overlay\n                #overlay\n                [(visible)]=\"overlayVisible\"\n                [options]=\"overlayOptions\"\n                [target]=\"'@parent'\"\n                [appendTo]=\"appendTo\"\n                [autoZIndex]=\"autoZIndex\"\n                [baseZIndex]=\"baseZIndex\"\n                [showTransitionOptions]=\"showTransitionOptions\"\n                [hideTransitionOptions]=\"hideTransitionOptions\"\n                (onAnimationStart)=\"onOverlayAnimationStart($event)\"\n                (onHide)=\"hide()\"\n            >\n                <ng-template pTemplate=\"content\">\n                    <div [ngClass]=\"'p-dropdown-panel p-component'\" [ngStyle]=\"panelStyle\" [class]=\"panelStyleClass\">\n                        <span\n                            #firstHiddenFocusableEl\n                            role=\"presentation\"\n                            [attr.aria-hidden]=\"true\"\n                            class=\"p-hidden-accessible p-hidden-focusable\"\n                            [attr.tabindex]=\"0\"\n                            (focus)=\"onFirstHiddenFocus($event)\"\n                            [attr.data-p-hidden-accessible]=\"true\"\n                            [attr.data-p-hidden-focusable]=\"true\"\n                        >\n                        </span>\n                        <ng-container *ngTemplateOutlet=\"headerTemplate\"></ng-container>\n                        <div class=\"p-dropdown-header\" *ngIf=\"filter\" (click)=\"$event.stopPropagation()\">\n                            <ng-container *ngIf=\"filterTemplate; else builtInFilterElement\">\n                                <ng-container *ngTemplateOutlet=\"filterTemplate; context: { options: filterOptions }\"></ng-container>\n                            </ng-container>\n                            <ng-template #builtInFilterElement>\n                                <div class=\"p-dropdown-filter-container\">\n                                    <input\n                                        #filter\n                                        type=\"text\"\n                                        autocomplete=\"off\"\n                                        [value]=\"_filterValue() || ''\"\n                                        class=\"p-dropdown-filter p-inputtext p-component\"\n                                        [attr.placeholder]=\"filterPlaceholder\"\n                                        [attr.aria-owns]=\"id + '_list'\"\n                                        (input)=\"onFilterInputChange($event)\"\n                                        [attr.aria-label]=\"ariaFilterLabel\"\n                                        [attr.aria-activedescendant]=\"focusedOptionId\"\n                                        (keydown)=\"onFilterKeyDown($event)\"\n                                        (blur)=\"onFilterBlur($event)\"\n                                    />\n                                    <SearchIcon *ngIf=\"!filterIconTemplate\" [styleClass]=\"'p-dropdown-filter-icon'\" />\n                                    <span *ngIf=\"filterIconTemplate\" class=\"p-dropdown-filter-icon\">\n                                        <ng-template *ngTemplateOutlet=\"filterIconTemplate\"></ng-template>\n                                    </span>\n                                </div>\n                            </ng-template>\n                        </div>\n                        <div class=\"p-dropdown-items-wrapper\" [style.max-height]=\"virtualScroll ? 'auto' : scrollHeight || 'auto'\">\n                            <p-scroller\n                                *ngIf=\"virtualScroll\"\n                                #scroller\n                                [items]=\"visibleOptions()\"\n                                [style]=\"{ height: scrollHeight }\"\n                                [itemSize]=\"virtualScrollItemSize || _itemSize\"\n                                [autoSize]=\"true\"\n                                [lazy]=\"lazy\"\n                                (onLazyLoad)=\"onLazyLoad.emit($event)\"\n                                [options]=\"virtualScrollOptions\"\n                            >\n                                <ng-template pTemplate=\"content\" let-items let-scrollerOptions=\"options\">\n                                    <ng-container *ngTemplateOutlet=\"buildInItems; context: { $implicit: items, options: scrollerOptions }\"></ng-container>\n                                </ng-template>\n                                <ng-container *ngIf=\"loaderTemplate\">\n                                    <ng-template pTemplate=\"loader\" let-scrollerOptions=\"options\">\n                                        <ng-container *ngTemplateOutlet=\"loaderTemplate; context: { options: scrollerOptions }\"></ng-container>\n                                    </ng-template>\n                                </ng-container>\n                            </p-scroller>\n                            <ng-container *ngIf=\"!virtualScroll\">\n                                <ng-container *ngTemplateOutlet=\"buildInItems; context: { $implicit: visibleOptions(), options: {} }\"></ng-container>\n                            </ng-container>\n\n                            <ng-template #buildInItems let-items let-scrollerOptions=\"options\">\n                                <ul #items [attr.id]=\"id + '_list'\" class=\"p-dropdown-items\" [ngClass]=\"scrollerOptions.contentStyleClass\" [style]=\"scrollerOptions.contentStyle\" role=\"listbox\">\n                                    <ng-template ngFor let-option [ngForOf]=\"items\" let-i=\"index\">\n                                        <ng-container *ngIf=\"option.group\">\n                                            <li class=\"p-dropdown-item-group\" [attr.id]=\"id + '_' + getOptionIndex(i, scrollerOptions)\" [ngStyle]=\"{ height: scrollerOptions.itemSize + 'px' }\" role=\"option\">\n                                                <span *ngIf=\"!groupTemplate\">{{ getOptionGroupLabel(option.optionGroup) }}</span>\n                                                <ng-container *ngTemplateOutlet=\"groupTemplate; context: { $implicit: option.optionGroup }\"></ng-container>\n                                            </li>\n                                        </ng-container>\n                                        <ng-container *ngIf=\"!option.group\">\n                                            <p-dropdownItem\n                                                [id]=\"id + '_' + getOptionIndex(i, scrollerOptions)\"\n                                                [option]=\"option\"\n                                                [selected]=\"isSelected(option)\"\n                                                [label]=\"getOptionLabel(option)\"\n                                                [disabled]=\"isOptionDisabled(option)\"\n                                                [template]=\"itemTemplate\"\n                                                [focused]=\"focusedOptionIndex() === getOptionIndex(i, scrollerOptions)\"\n                                                [ariaPosInset]=\"getAriaPosInset(getOptionIndex(i, scrollerOptions))\"\n                                                [ariaSetSize]=\"ariaSetSize\"\n                                                (onClick)=\"onOptionSelect($event, option)\"\n                                                (onMouseEnter)=\"onOptionMouseEnter($event, getOptionIndex(i, scrollerOptions))\"\n                                            ></p-dropdownItem>\n                                        </ng-container>\n                                    </ng-template>\n\n                                    <li *ngIf=\"filterValue && isEmpty()\" class=\"p-dropdown-empty-message\" [ngStyle]=\"{ height: scrollerOptions.itemSize + 'px' }\">\n                                        <ng-container *ngIf=\"!emptyFilterTemplate && !emptyTemplate; else emptyFilter\">\n                                            {{ emptyFilterMessageLabel }}\n                                        </ng-container>\n                                        <ng-container #emptyFilter *ngTemplateOutlet=\"emptyFilterTemplate || emptyTemplate\"></ng-container>\n                                    </li>\n                                    <li *ngIf=\"!filterValue && isEmpty()\" class=\"p-dropdown-empty-message\" [ngStyle]=\"{ height: scrollerOptions.itemSize + 'px' }\">\n                                        <ng-container *ngIf=\"!emptyTemplate; else empty\">\n                                            {{ emptyMessageLabel }}\n                                        </ng-container>\n                                        <ng-container #empty *ngTemplateOutlet=\"emptyTemplate\"></ng-container>\n                                    </li>\n                                </ul>\n                            </ng-template>\n                        </div>\n                        <ng-container *ngTemplateOutlet=\"footerTemplate\"></ng-container>\n                        <span\n                            #lastHiddenFocusableEl\n                            role=\"presentation\"\n                            [attr.aria-hidden]=\"true\"\n                            class=\"p-hidden-accessible p-hidden-focusable\"\n                            [attr.tabindex]=\"0\"\n                            (focus)=\"onLastHiddenFocus($event)\"\n                            [attr.data-p-hidden-accessible]=\"true\"\n                            [attr.data-p-hidden-focusable]=\"true\"\n                        ></span>\n                    </div>\n                </ng-template>\n            </p-overlay>\n        </div>\n    `,\n      host: {\n        class: 'p-element p-inputwrapper',\n        '[class.p-inputwrapper-filled]': 'filled',\n        '[class.p-inputwrapper-focus]': 'focused || overlayVisible'\n      },\n      providers: [DROPDOWN_VALUE_ACCESSOR],\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      styles: [\"@layer primeng{.p-dropdown{display:inline-flex;cursor:pointer;position:relative;-webkit-user-select:none;user-select:none}.p-dropdown-clear-icon{position:absolute;top:50%;margin-top:-.5rem}.p-dropdown-trigger{display:flex;align-items:center;justify-content:center;flex-shrink:0}.p-dropdown-label{display:block;white-space:nowrap;overflow:hidden;flex:1 1 auto;width:1%;text-overflow:ellipsis;cursor:pointer}.p-dropdown-label-empty{overflow:hidden;opacity:0}input.p-dropdown-label{cursor:default}.p-dropdown .p-dropdown-panel{min-width:100%}.p-dropdown-items-wrapper{overflow:auto}.p-dropdown-item{cursor:pointer;font-weight:400;white-space:nowrap;position:relative;overflow:hidden}.p-dropdown-item-group{cursor:auto}.p-dropdown-items{margin:0;padding:0;list-style-type:none}.p-dropdown-filter{width:100%}.p-dropdown-filter-container{position:relative}.p-dropdown-filter-icon{position:absolute;top:50%;margin-top:-.5rem}.p-fluid .p-dropdown{display:flex}.p-fluid .p-dropdown .p-dropdown-label{width:1%}}\\n\"]\n    }]\n  }], () => [{\n    type: i0.ElementRef\n  }, {\n    type: i0.Renderer2\n  }, {\n    type: i0.ChangeDetectorRef\n  }, {\n    type: i0.NgZone\n  }, {\n    type: i3.FilterService\n  }, {\n    type: i3.PrimeNGConfig\n  }], {\n    id: [{\n      type: Input\n    }],\n    scrollHeight: [{\n      type: Input\n    }],\n    filter: [{\n      type: Input\n    }],\n    name: [{\n      type: Input\n    }],\n    style: [{\n      type: Input\n    }],\n    panelStyle: [{\n      type: Input\n    }],\n    styleClass: [{\n      type: Input\n    }],\n    panelStyleClass: [{\n      type: Input\n    }],\n    readonly: [{\n      type: Input\n    }],\n    required: [{\n      type: Input\n    }],\n    editable: [{\n      type: Input\n    }],\n    appendTo: [{\n      type: Input\n    }],\n    tabindex: [{\n      type: Input\n    }],\n    placeholder: [{\n      type: Input\n    }],\n    filterPlaceholder: [{\n      type: Input\n    }],\n    filterLocale: [{\n      type: Input\n    }],\n    inputId: [{\n      type: Input\n    }],\n    dataKey: [{\n      type: Input\n    }],\n    filterBy: [{\n      type: Input\n    }],\n    filterFields: [{\n      type: Input\n    }],\n    autofocus: [{\n      type: Input\n    }],\n    resetFilterOnHide: [{\n      type: Input\n    }],\n    dropdownIcon: [{\n      type: Input\n    }],\n    optionLabel: [{\n      type: Input\n    }],\n    optionValue: [{\n      type: Input\n    }],\n    optionDisabled: [{\n      type: Input\n    }],\n    optionGroupLabel: [{\n      type: Input\n    }],\n    optionGroupChildren: [{\n      type: Input\n    }],\n    autoDisplayFirst: [{\n      type: Input\n    }],\n    group: [{\n      type: Input\n    }],\n    showClear: [{\n      type: Input\n    }],\n    emptyFilterMessage: [{\n      type: Input\n    }],\n    emptyMessage: [{\n      type: Input\n    }],\n    lazy: [{\n      type: Input\n    }],\n    virtualScroll: [{\n      type: Input\n    }],\n    virtualScrollItemSize: [{\n      type: Input\n    }],\n    virtualScrollOptions: [{\n      type: Input\n    }],\n    overlayOptions: [{\n      type: Input\n    }],\n    ariaFilterLabel: [{\n      type: Input\n    }],\n    ariaLabel: [{\n      type: Input\n    }],\n    ariaLabelledBy: [{\n      type: Input\n    }],\n    filterMatchMode: [{\n      type: Input\n    }],\n    maxlength: [{\n      type: Input\n    }],\n    tooltip: [{\n      type: Input\n    }],\n    tooltipPosition: [{\n      type: Input\n    }],\n    tooltipPositionStyle: [{\n      type: Input\n    }],\n    tooltipStyleClass: [{\n      type: Input\n    }],\n    focusOnHover: [{\n      type: Input\n    }],\n    selectOnFocus: [{\n      type: Input\n    }],\n    autoOptionFocus: [{\n      type: Input\n    }],\n    autofocusFilter: [{\n      type: Input\n    }],\n    disabled: [{\n      type: Input\n    }],\n    itemSize: [{\n      type: Input\n    }],\n    autoZIndex: [{\n      type: Input\n    }],\n    baseZIndex: [{\n      type: Input\n    }],\n    showTransitionOptions: [{\n      type: Input\n    }],\n    hideTransitionOptions: [{\n      type: Input\n    }],\n    filterValue: [{\n      type: Input\n    }],\n    options: [{\n      type: Input\n    }],\n    onChange: [{\n      type: Output\n    }],\n    onFilter: [{\n      type: Output\n    }],\n    onFocus: [{\n      type: Output\n    }],\n    onBlur: [{\n      type: Output\n    }],\n    onClick: [{\n      type: Output\n    }],\n    onShow: [{\n      type: Output\n    }],\n    onHide: [{\n      type: Output\n    }],\n    onClear: [{\n      type: Output\n    }],\n    onLazyLoad: [{\n      type: Output\n    }],\n    containerViewChild: [{\n      type: ViewChild,\n      args: ['container']\n    }],\n    filterViewChild: [{\n      type: ViewChild,\n      args: ['filter']\n    }],\n    focusInputViewChild: [{\n      type: ViewChild,\n      args: ['focusInput']\n    }],\n    editableInputViewChild: [{\n      type: ViewChild,\n      args: ['editableInput']\n    }],\n    itemsViewChild: [{\n      type: ViewChild,\n      args: ['items']\n    }],\n    scroller: [{\n      type: ViewChild,\n      args: ['scroller']\n    }],\n    overlayViewChild: [{\n      type: ViewChild,\n      args: ['overlay']\n    }],\n    firstHiddenFocusableElementOnOverlay: [{\n      type: ViewChild,\n      args: ['firstHiddenFocusableEl']\n    }],\n    lastHiddenFocusableElementOnOverlay: [{\n      type: ViewChild,\n      args: ['lastHiddenFocusableEl']\n    }],\n    templates: [{\n      type: ContentChildren,\n      args: [PrimeTemplate]\n    }]\n  });\n})();\nclass DropdownModule {}\n_defineProperty(DropdownModule, \"\\u0275fac\", function DropdownModule_Factory(t) {\n  return new (t || DropdownModule)();\n});\n_defineProperty(DropdownModule, \"\\u0275mod\", /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: DropdownModule\n}));\n_defineProperty(DropdownModule, \"\\u0275inj\", /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [CommonModule, OverlayModule, SharedModule, TooltipModule, RippleModule, ScrollerModule, AutoFocusModule, TimesIcon, ChevronDownIcon, SearchIcon, OverlayModule, SharedModule, ScrollerModule]\n}));\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(DropdownModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule, OverlayModule, SharedModule, TooltipModule, RippleModule, ScrollerModule, AutoFocusModule, TimesIcon, ChevronDownIcon, SearchIcon],\n      exports: [Dropdown, OverlayModule, SharedModule, ScrollerModule],\n      declarations: [Dropdown, DropdownItem]\n    }]\n  }], null, null);\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { DROPDOWN_VALUE_ACCESSOR, Dropdown, DropdownItem, DropdownModule };","map":{"version":3,"names":["i1","CommonModule","i0","forwardRef","EventEmitter","Component","Input","Output","signal","computed","effect","ChangeDetectionStrategy","ViewEncapsulation","ViewChild","ContentChildren","NgModule","NG_VALUE_ACCESSOR","i3","TranslationKeys","PrimeTemplate","SharedModule","i7","AutoFocusModule","DomHandler","i4","OverlayModule","i2","RippleModule","i6","ScrollerModule","i5","TooltipModule","ObjectUtils","UniqueComponentId","TimesIcon","ChevronDownIcon","SearchIcon","DROPDOWN_VALUE_ACCESSOR","provide","useExisting","Dropdown","multi","DropdownItem","ngOnInit","onOptionClick","event","onClick","emit","onOptionMouseEnter","onMouseEnter","NgClass","NgIf","NgTemplateOutlet","NgStyle","Ripple","type","args","selector","template","host","class","id","option","selected","focused","label","disabled","visible","itemSize","ariaPosInset","ariaSetSize","_disabled","overlayVisible","hide","cd","destroyed","detectChanges","_itemSize","val","console","warn","autoZIndex","_autoZIndex","baseZIndex","_baseZIndex","showTransitionOptions","_showTransitionOptions","hideTransitionOptions","_hideTransitionOptions","filterValue","_filterValue","set","options","_options","emptyMessageLabel","emptyMessage","config","getTranslation","EMPTY_MESSAGE","emptyFilterMessageLabel","emptyFilterMessage","EMPTY_FILTER_MESSAGE","filled","modelValue","undefined","isVisibleClearIcon","hasSelectedOption","showClear","containerClass","inputClass","placeholder","editable","selectedItemTemplate","length","panelClass","inputStyle","ripple","constructor","el","renderer","zone","filterService","group","flatOptions","filteredOptions","filterBy","filterFields","optionValue","filter","toLowerCase","indexOf","searchFields","filterMatchMode","filterLocale","optionGroups","filtered","forEach","groupChildren","getOptionGroupChildren","filteredItems","item","includes","push","optionGroupChildren","selectedOptionIndex","findSelectedOptionIndex","getOptionLabel","visibleOptions","updateEditableLabel","isNotEmpty","selectedOption","autoUpdateModel","filterOptions","value","onFilterInputChange","reset","resetFilter","ngAfterViewChecked","optionsChanged","runOutsideAngular","setTimeout","overlayViewChild","alignOverlay","selectedOptionUpdated","itemsWrapper","selectedItem","findSingle","nativeElement","scrollInView","ngAfterContentInit","templates","getType","itemTemplate","headerTemplate","filterTemplate","footerTemplate","emptyFilterTemplate","emptyTemplate","groupTemplate","loaderTemplate","dropdownIconTemplate","clearIconTemplate","filterIconTemplate","reduce","result","index","optionGroup","o","selectOnFocus","autoOptionFocus","focusedOptionIndex","findFirstFocusedOptionIndex","onOptionSelect","autoDisplayFirst","ind","findFirstOptionIndex","isHide","preventChange","getOptionValue","updateModel","onChange","originalEvent","focusOnHover","changeFocusedOptionIndex","onModelChange","writeValue","allowModelChange","markForCheck","isSelected","isValidOption","equals","equalityKey","ngAfterViewInit","editableInputViewChild","getOptionIndex","scrollerOptions","virtualScrollerDisabled","getItemOptions","optionLabel","resolveFieldData","isOptionDisabled","optionDisabled","getOptionGroupLabel","optionGroupLabel","items","getAriaPosInset","slice","isOptionGroup","filterViewChild","registerOnChange","fn","registerOnTouched","onModelTouched","setDisabledState","onContainerClick","readonly","focusInputViewChild","focus","preventScroll","target","tagName","getAttribute","closest","contains","show","isEmpty","onEditableInput","searchValue","matched","searchOptions","isFocus","onOverlayAnimationStart","toState","virtualScroll","scroller","setContentEl","itemsViewChild","selectedIndex","scrollToIndex","selectedListItem","scrollIntoView","block","inline","preventModelTouched","autofocusFilter","onShow","onHide","resetFilterOnHide","onInputFocus","onFocus","onInputBlur","onBlur","onKeyDown","search","code","onArrowDownKey","onArrowUpKey","onArrowLeftKey","onDeleteKey","onHomeKey","onEndKey","onPageDownKey","onPageUpKey","onSpaceKey","onEnterKey","onEscapeKey","onTabKey","onBackspaceKey","metaKey","isPrintableCharacter","key","onFilterKeyDown","onFilterBlur","optionIndex","findNextOptionIndex","preventDefault","focusedOptionId","element","isValidSelectedOption","dataKey","findIndex","matchedOptionIndex","findPrevOptionIndex","findLastIndex","findLastOptionIndex","findLastFocusedOptionIndex","pressedInInputText","altKey","clear","currentTarget","setSelectionRange","len","hasFocusableElements","shiftKey","lastHiddenFocusableElementOnOverlay","firstHiddenFocusableElementOnOverlay","onFirstHiddenFocus","focusableEl","relatedTarget","getFirstFocusableElement","onLastHiddenFocus","getLastFocusableElement","getFocusableElements","char","isOptionMatched","searchTimeout","clearTimeout","toLocaleLowerCase","startsWith","trim","onFilter","applyFocus","onClear","ElementRef","Renderer2","ChangeDetectorRef","NgZone","FilterService","PrimeNGConfig","NgForOf","Overlay","Tooltip","Scroller","AutoFocus","providers","changeDetection","OnPush","encapsulation","None","styles","scrollHeight","name","style","panelStyle","styleClass","panelStyleClass","required","appendTo","tabindex","filterPlaceholder","inputId","autofocus","dropdownIcon","lazy","virtualScrollItemSize","virtualScrollOptions","overlayOptions","ariaFilterLabel","ariaLabel","ariaLabelledBy","maxlength","tooltip","tooltipPosition","tooltipPositionStyle","tooltipStyleClass","onLazyLoad","containerViewChild","DropdownModule","imports","exports","declarations"],"sources":["C:/Users/sikri/source/repos/MyTestAngular/MyTestAngular/ClientApp/node_modules/primeng/fesm2022/primeng-dropdown.mjs"],"sourcesContent":["import * as i1 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { forwardRef, EventEmitter, Component, Input, Output, signal, computed, effect, ChangeDetectionStrategy, ViewEncapsulation, ViewChild, ContentChildren, NgModule } from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport * as i3 from 'primeng/api';\nimport { TranslationKeys, PrimeTemplate, SharedModule } from 'primeng/api';\nimport * as i7 from 'primeng/autofocus';\nimport { AutoFocusModule } from 'primeng/autofocus';\nimport { DomHandler } from 'primeng/dom';\nimport * as i4 from 'primeng/overlay';\nimport { OverlayModule } from 'primeng/overlay';\nimport * as i2 from 'primeng/ripple';\nimport { RippleModule } from 'primeng/ripple';\nimport * as i6 from 'primeng/scroller';\nimport { ScrollerModule } from 'primeng/scroller';\nimport * as i5 from 'primeng/tooltip';\nimport { TooltipModule } from 'primeng/tooltip';\nimport { ObjectUtils, UniqueComponentId } from 'primeng/utils';\nimport { TimesIcon } from 'primeng/icons/times';\nimport { ChevronDownIcon } from 'primeng/icons/chevrondown';\nimport { SearchIcon } from 'primeng/icons/search';\n\nconst DROPDOWN_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => Dropdown),\n    multi: true\n};\nclass DropdownItem {\n    id;\n    option;\n    selected;\n    focused;\n    label;\n    disabled;\n    visible;\n    itemSize;\n    ariaPosInset;\n    ariaSetSize;\n    template;\n    onClick = new EventEmitter();\n    onMouseEnter = new EventEmitter();\n    ngOnInit() { }\n    onOptionClick(event) {\n        this.onClick.emit(event);\n    }\n    onOptionMouseEnter(event) {\n        this.onMouseEnter.emit(event);\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.0.5\", ngImport: i0, type: DropdownItem, deps: [], target: i0.ɵɵFactoryTarget.Component });\n    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"17.0.5\", type: DropdownItem, selector: \"p-dropdownItem\", inputs: { id: \"id\", option: \"option\", selected: \"selected\", focused: \"focused\", label: \"label\", disabled: \"disabled\", visible: \"visible\", itemSize: \"itemSize\", ariaPosInset: \"ariaPosInset\", ariaSetSize: \"ariaSetSize\", template: \"template\" }, outputs: { onClick: \"onClick\", onMouseEnter: \"onMouseEnter\" }, host: { classAttribute: \"p-element\" }, ngImport: i0, template: `\n        <li\n            [id]=\"id\"\n            (click)=\"onOptionClick($event)\"\n            (mouseenter)=\"onOptionMouseEnter($event)\"\n            role=\"option\"\n            pRipple\n            [attr.aria-label]=\"label\"\n            [attr.aria-setsize]=\"ariaSetSize\"\n            [attr.aria-posinset]=\"ariaPosInset\"\n            [attr.aria-selected]=\"selected\"\n            [attr.data-p-focused]=\"focused\"\n            [attr.data-p-highlight]=\"selected\"\n            [attr.data-p-disabled]=\"disabled\"\n            [ngStyle]=\"{ height: itemSize + 'px' }\"\n            [ngClass]=\"{ 'p-dropdown-item': true, 'p-highlight': selected, 'p-disabled': disabled, 'p-focus': focused }\"\n        >\n            <span *ngIf=\"!template\">{{ label ?? 'empty' }}</span>\n            <ng-container *ngTemplateOutlet=\"template; context: { $implicit: option }\"></ng-container>\n        </li>\n    `, isInline: true, dependencies: [{ kind: \"directive\", type: i1.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }, { kind: \"directive\", type: i1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i1.NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\", \"ngTemplateOutletInjector\"] }, { kind: \"directive\", type: i1.NgStyle, selector: \"[ngStyle]\", inputs: [\"ngStyle\"] }, { kind: \"directive\", type: i2.Ripple, selector: \"[pRipple]\" }] });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.0.5\", ngImport: i0, type: DropdownItem, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'p-dropdownItem',\n                    template: `\n        <li\n            [id]=\"id\"\n            (click)=\"onOptionClick($event)\"\n            (mouseenter)=\"onOptionMouseEnter($event)\"\n            role=\"option\"\n            pRipple\n            [attr.aria-label]=\"label\"\n            [attr.aria-setsize]=\"ariaSetSize\"\n            [attr.aria-posinset]=\"ariaPosInset\"\n            [attr.aria-selected]=\"selected\"\n            [attr.data-p-focused]=\"focused\"\n            [attr.data-p-highlight]=\"selected\"\n            [attr.data-p-disabled]=\"disabled\"\n            [ngStyle]=\"{ height: itemSize + 'px' }\"\n            [ngClass]=\"{ 'p-dropdown-item': true, 'p-highlight': selected, 'p-disabled': disabled, 'p-focus': focused }\"\n        >\n            <span *ngIf=\"!template\">{{ label ?? 'empty' }}</span>\n            <ng-container *ngTemplateOutlet=\"template; context: { $implicit: option }\"></ng-container>\n        </li>\n    `,\n                    host: {\n                        class: 'p-element'\n                    }\n                }]\n        }], propDecorators: { id: [{\n                type: Input\n            }], option: [{\n                type: Input\n            }], selected: [{\n                type: Input\n            }], focused: [{\n                type: Input\n            }], label: [{\n                type: Input\n            }], disabled: [{\n                type: Input\n            }], visible: [{\n                type: Input\n            }], itemSize: [{\n                type: Input\n            }], ariaPosInset: [{\n                type: Input\n            }], ariaSetSize: [{\n                type: Input\n            }], template: [{\n                type: Input\n            }], onClick: [{\n                type: Output\n            }], onMouseEnter: [{\n                type: Output\n            }] } });\n/**\n * Dropdown also known as Select, is used to choose an item from a collection of options.\n * @group Components\n */\nclass Dropdown {\n    el;\n    renderer;\n    cd;\n    zone;\n    filterService;\n    config;\n    /**\n     * Unique identifier of the component\n     * @group Props\n     */\n    id;\n    /**\n     * Height of the viewport in pixels, a scrollbar is defined if height of list exceeds this value.\n     * @group Props\n     */\n    scrollHeight = '200px';\n    /**\n     * When specified, displays an input field to filter the items on keyup.\n     * @group Props\n     */\n    filter;\n    /**\n     * Name of the input element.\n     * @group Props\n     */\n    name;\n    /**\n     * Inline style of the element.\n     * @group Props\n     */\n    style;\n    /**\n     * Inline style of the overlay panel element.\n     * @group Props\n     */\n    panelStyle;\n    /**\n     * Style class of the element.\n     * @group Props\n     */\n    styleClass;\n    /**\n     * Style class of the overlay panel element.\n     * @group Props\n     */\n    panelStyleClass;\n    /**\n     * When present, it specifies that the component cannot be edited.\n     * @group Props\n     */\n    readonly;\n    /**\n     * When present, it specifies that an input field must be filled out before submitting the form.\n     * @group Props\n     */\n    required;\n    /**\n     * When present, custom value instead of predefined options can be entered using the editable input field.\n     * @group Props\n     */\n    editable;\n    /**\n     * Target element to attach the overlay, valid values are \"body\" or a local ng-template variable of another element (note: use binding with brackets for template variables, e.g. [appendTo]=\"mydiv\" for a div element having #mydiv as variable name).\n     * @group Props\n     */\n    appendTo;\n    /**\n     * Index of the element in tabbing order.\n     * @group Props\n     */\n    tabindex = 0;\n    /**\n     * Default text to display when no option is selected.\n     * @group Props\n     */\n    placeholder;\n    /**\n     * Placeholder text to show when filter input is empty.\n     * @group Props\n     */\n    filterPlaceholder;\n    /**\n     * Locale to use in filtering. The default locale is the host environment's current locale.\n     * @group Props\n     */\n    filterLocale;\n    /**\n     * Identifier of the accessible input element.\n     * @group Props\n     */\n    inputId;\n    /**\n     * A property to uniquely identify a value in options.\n     * @group Props\n     */\n    dataKey;\n    /**\n     * When filtering is enabled, filterBy decides which field or fields (comma separated) to search against.\n     * @group Props\n     */\n    filterBy;\n    /**\n     * Fields used when filtering the options, defaults to optionLabel.\n     * @group Props\n     */\n    filterFields;\n    /**\n     * When present, it specifies that the component should automatically get focus on load.\n     * @group Props\n     */\n    autofocus;\n    /**\n     * Clears the filter value when hiding the dropdown.\n     * @group Props\n     */\n    resetFilterOnHide = false;\n    /**\n     * Icon class of the dropdown icon.\n     * @group Props\n     */\n    dropdownIcon;\n    /**\n     * Name of the label field of an option.\n     * @group Props\n     */\n    optionLabel;\n    /**\n     * Name of the value field of an option.\n     * @group Props\n     */\n    optionValue;\n    /**\n     * Name of the disabled field of an option.\n     * @group Props\n     */\n    optionDisabled;\n    /**\n     * Name of the label field of an option group.\n     * @group Props\n     */\n    optionGroupLabel = 'label';\n    /**\n     * Name of the options field of an option group.\n     * @group Props\n     */\n    optionGroupChildren = 'items';\n    /**\n     * Whether to display the first item as the label if no placeholder is defined and value is null.\n     * @group Props\n     */\n    autoDisplayFirst = true;\n    /**\n     * Whether to display options as grouped when nested options are provided.\n     * @group Props\n     */\n    group;\n    /**\n     * When enabled, a clear icon is displayed to clear the value.\n     * @group Props\n     */\n    showClear;\n    /**\n     * Text to display when filtering does not return any results. Defaults to global value in i18n translation configuration.\n     * @group Props\n     */\n    emptyFilterMessage = '';\n    /**\n     * Text to display when there is no data. Defaults to global value in i18n translation configuration.\n     * @group Props\n     */\n    emptyMessage = '';\n    /**\n     * Defines if data is loaded and interacted with in lazy manner.\n     * @group Props\n     */\n    lazy = false;\n    /**\n     * Whether the data should be loaded on demand during scroll.\n     * @group Props\n     */\n    virtualScroll;\n    /**\n     * Height of an item in the list for VirtualScrolling.\n     * @group Props\n     */\n    virtualScrollItemSize;\n    /**\n     * Whether to use the scroller feature. The properties of scroller component can be used like an object in it.\n     * @group Props\n     */\n    virtualScrollOptions;\n    /**\n     * Whether to use overlay API feature. The properties of overlay API can be used like an object in it.\n     * @group Props\n     */\n    overlayOptions;\n    /**\n     * Defines a string that labels the filter input.\n     * @group Props\n     */\n    ariaFilterLabel;\n    /**\n     * Used to define a aria label attribute the current element.\n     * @group Props\n     */\n    ariaLabel;\n    /**\n     * Establishes relationships between the component and label(s) where its value should be one or more element IDs.\n     * @group Props\n     */\n    ariaLabelledBy;\n    /**\n     * Defines how the items are filtered.\n     * @group Props\n     */\n    filterMatchMode = 'contains';\n    /**\n     * Maximum number of character allows in the editable input field.\n     * @group Props\n     */\n    maxlength;\n    /**\n     * Advisory information to display in a tooltip on hover.\n     * @group Props\n     */\n    tooltip = '';\n    /**\n     * Position of the tooltip.\n     * @group Props\n     */\n    tooltipPosition = 'right';\n    /**\n     * Type of CSS position.\n     * @group Props\n     */\n    tooltipPositionStyle = 'absolute';\n    /**\n     * Style class of the tooltip.\n     * @group Props\n     */\n    tooltipStyleClass;\n    /**\n     * Fields used when filtering the options, defaults to optionLabel.\n     * @group Props\n     */\n    focusOnHover = false;\n    /**\n     * Determines if the option will be selected on focus.\n     * @group Props\n     */\n    selectOnFocus = false;\n    /**\n     * Whether to focus on the first visible or selected element when the overlay panel is shown.\n     * @group Props\n     */\n    autoOptionFocus = true;\n    /**\n     * Applies focus to the filter element when the overlay is shown.\n     * @group Props\n     */\n    autofocusFilter = true;\n    /**\n     * When present, it specifies that the component should be disabled.\n     * @group Props\n     */\n    get disabled() {\n        return this._disabled;\n    }\n    set disabled(_disabled) {\n        if (_disabled) {\n            this.focused = false;\n            if (this.overlayVisible)\n                this.hide();\n        }\n        this._disabled = _disabled;\n        if (!this.cd.destroyed) {\n            this.cd.detectChanges();\n        }\n    }\n    /**\n     * Item size of item to be virtual scrolled.\n     * @group Props\n     * @deprecated use virtualScrollItemSize property instead.\n     */\n    get itemSize() {\n        return this._itemSize;\n    }\n    set itemSize(val) {\n        this._itemSize = val;\n        console.warn('The itemSize property is deprecated, use virtualScrollItemSize property instead.');\n    }\n    _itemSize;\n    /**\n     * Whether to automatically manage layering.\n     * @group Props\n     * @deprecated since v14.2.0, use overlayOptions property instead.\n     */\n    get autoZIndex() {\n        return this._autoZIndex;\n    }\n    set autoZIndex(val) {\n        this._autoZIndex = val;\n        console.warn('The autoZIndex property is deprecated since v14.2.0, use overlayOptions property instead.');\n    }\n    _autoZIndex;\n    /**\n     * Base zIndex value to use in layering.\n     * @group Props\n     * @deprecated since v14.2.0, use overlayOptions property instead.\n     */\n    get baseZIndex() {\n        return this._baseZIndex;\n    }\n    set baseZIndex(val) {\n        this._baseZIndex = val;\n        console.warn('The baseZIndex property is deprecated since v14.2.0, use overlayOptions property instead.');\n    }\n    _baseZIndex;\n    /**\n     * Transition options of the show animation.\n     * @group Props\n     * @deprecated since v14.2.0, use overlayOptions property instead.\n     */\n    get showTransitionOptions() {\n        return this._showTransitionOptions;\n    }\n    set showTransitionOptions(val) {\n        this._showTransitionOptions = val;\n        console.warn('The showTransitionOptions property is deprecated since v14.2.0, use overlayOptions property instead.');\n    }\n    _showTransitionOptions;\n    /**\n     * Transition options of the hide animation.\n     * @group Props\n     * @deprecated since v14.2.0, use overlayOptions property instead.\n     */\n    get hideTransitionOptions() {\n        return this._hideTransitionOptions;\n    }\n    set hideTransitionOptions(val) {\n        this._hideTransitionOptions = val;\n        console.warn('The hideTransitionOptions property is deprecated since v14.2.0, use overlayOptions property instead.');\n    }\n    _hideTransitionOptions;\n    /**\n     * When specified, filter displays with this value.\n     * @group Props\n     */\n    get filterValue() {\n        return this._filterValue();\n    }\n    set filterValue(val) {\n        this._filterValue.set(val);\n    }\n    /**\n     * An array of objects to display as the available options.\n     * @group Props\n     */\n    get options() {\n        const options = this._options();\n        return options;\n    }\n    set options(val) {\n        this._options.set(val);\n    }\n    /**\n     * Callback to invoke when value of dropdown changes.\n     * @param {DropdownChangeEvent} event - custom change event.\n     * @group Emits\n     */\n    onChange = new EventEmitter();\n    /**\n     * Callback to invoke when data is filtered.\n     * @param {DropdownFilterEvent} event - custom filter event.\n     * @group Emits\n     */\n    onFilter = new EventEmitter();\n    /**\n     * Callback to invoke when dropdown gets focus.\n     * @param {Event} event - Browser event.\n     * @group Emits\n     */\n    onFocus = new EventEmitter();\n    /**\n     * Callback to invoke when dropdown loses focus.\n     * @param {Event} event - Browser event.\n     * @group Emits\n     */\n    onBlur = new EventEmitter();\n    /**\n     * Callback to invoke when component is clicked.\n     * @param {MouseEvent} event - Mouse event.\n     * @group Emits\n     */\n    onClick = new EventEmitter();\n    /**\n     * Callback to invoke when dropdown overlay gets visible.\n     * @param {AnimationEvent} event - Animation event.\n     * @group Emits\n     */\n    onShow = new EventEmitter();\n    /**\n     * Callback to invoke when dropdown overlay gets hidden.\n     * @param {AnimationEvent} event - Animation event.\n     * @group Emits\n     */\n    onHide = new EventEmitter();\n    /**\n     * Callback to invoke when dropdown clears the value.\n     * @param {Event} event - Browser event.\n     * @group Emits\n     */\n    onClear = new EventEmitter();\n    /**\n     * Callback to invoke in lazy mode to load new data.\n     * @param {DropdownLazyLoadEvent} event - Lazy load event.\n     * @group Emits\n     */\n    onLazyLoad = new EventEmitter();\n    containerViewChild;\n    filterViewChild;\n    focusInputViewChild;\n    editableInputViewChild;\n    itemsViewChild;\n    scroller;\n    overlayViewChild;\n    firstHiddenFocusableElementOnOverlay;\n    lastHiddenFocusableElementOnOverlay;\n    templates;\n    _disabled;\n    itemsWrapper;\n    itemTemplate;\n    groupTemplate;\n    loaderTemplate;\n    selectedItemTemplate;\n    headerTemplate;\n    filterTemplate;\n    footerTemplate;\n    emptyFilterTemplate;\n    emptyTemplate;\n    dropdownIconTemplate;\n    clearIconTemplate;\n    filterIconTemplate;\n    filterOptions;\n    _options = signal(null);\n    modelValue = signal(null);\n    value;\n    onModelChange = () => { };\n    onModelTouched = () => { };\n    hover;\n    focused;\n    overlayVisible;\n    optionsChanged;\n    panel;\n    dimensionsUpdated;\n    hoveredItem;\n    selectedOptionUpdated;\n    _filterValue = signal(null);\n    searchValue;\n    searchIndex;\n    searchTimeout;\n    previousSearchChar;\n    currentSearchChar;\n    preventModelTouched;\n    focusedOptionIndex = signal(-1);\n    labelId;\n    listId;\n    get emptyMessageLabel() {\n        return this.emptyMessage || this.config.getTranslation(TranslationKeys.EMPTY_MESSAGE);\n    }\n    get emptyFilterMessageLabel() {\n        return this.emptyFilterMessage || this.config.getTranslation(TranslationKeys.EMPTY_FILTER_MESSAGE);\n    }\n    get filled() {\n        if (typeof this.modelValue() === 'string')\n            return !!this.modelValue();\n        return this.modelValue() || this.modelValue() != null || this.modelValue() != undefined;\n    }\n    get isVisibleClearIcon() {\n        return this.modelValue() != null && this.hasSelectedOption() && this.showClear && !this.disabled;\n    }\n    get containerClass() {\n        return {\n            'p-dropdown p-component p-inputwrapper': true,\n            'p-disabled': this.disabled,\n            'p-dropdown-clearable': this.showClear && !this.disabled,\n            'p-focus': this.focused,\n            'p-inputwrapper-filled': this.modelValue(),\n            'p-inputwrapper-focus': this.focused || this.overlayVisible\n        };\n    }\n    get inputClass() {\n        const label = this.label();\n        return {\n            'p-dropdown-label p-inputtext': true,\n            'p-placeholder': this.placeholder && label === this.placeholder,\n            'p-dropdown-label-empty': !this.editable && !this.selectedItemTemplate && (!label || label === 'p-emptylabel' || label.length === 0)\n        };\n    }\n    get panelClass() {\n        return {\n            'p-dropdown-panel p-component': true,\n            'p-input-filled': this.config.inputStyle === 'filled',\n            'p-ripple-disabled': this.config.ripple === false\n        };\n    }\n    visibleOptions = computed(() => {\n        const options = this.group ? this.flatOptions(this.options) : this.options || [];\n        if (this._filterValue()) {\n            const filteredOptions = !this.filterBy && !this.filterFields && !this.optionValue\n                ? this.options.filter((option) => option.toLowerCase().indexOf(this._filterValue().toLowerCase()) !== -1)\n                : this.filterService.filter(options, this.searchFields(), this._filterValue(), this.filterMatchMode, this.filterLocale);\n            if (this.group) {\n                const optionGroups = this.options || [];\n                const filtered = [];\n                optionGroups.forEach((group) => {\n                    const groupChildren = this.getOptionGroupChildren(group);\n                    const filteredItems = groupChildren.filter((item) => filteredOptions.includes(item));\n                    if (filteredItems.length > 0)\n                        filtered.push({ ...group, [typeof this.optionGroupChildren === 'string' ? this.optionGroupChildren : 'items']: [...filteredItems] });\n                });\n                return this.flatOptions(filtered);\n            }\n            return filteredOptions;\n        }\n        return options;\n    });\n    label = computed(() => {\n        const selectedOptionIndex = this.findSelectedOptionIndex();\n        return selectedOptionIndex !== -1 ? this.getOptionLabel(this.visibleOptions()[selectedOptionIndex]) : this.placeholder || 'p-emptylabel';\n    });\n    selectedOption;\n    constructor(el, renderer, cd, zone, filterService, config) {\n        this.el = el;\n        this.renderer = renderer;\n        this.cd = cd;\n        this.zone = zone;\n        this.filterService = filterService;\n        this.config = config;\n        effect(() => {\n            const modelValue = this.modelValue();\n            const visibleOptions = this.visibleOptions();\n            if (modelValue && this.editable) {\n                this.updateEditableLabel();\n            }\n            if (visibleOptions && ObjectUtils.isNotEmpty(visibleOptions)) {\n                this.selectedOption = visibleOptions[this.findSelectedOptionIndex()];\n            }\n        });\n    }\n    ngOnInit() {\n        this.id = this.id || UniqueComponentId();\n        this.autoUpdateModel();\n        if (this.filterBy) {\n            this.filterOptions = {\n                filter: (value) => this.onFilterInputChange(value),\n                reset: () => this.resetFilter()\n            };\n        }\n    }\n    ngAfterViewChecked() {\n        if (this.optionsChanged && this.overlayVisible) {\n            this.optionsChanged = false;\n            this.zone.runOutsideAngular(() => {\n                setTimeout(() => {\n                    if (this.overlayViewChild) {\n                        this.overlayViewChild.alignOverlay();\n                    }\n                }, 1);\n            });\n        }\n        if (this.selectedOptionUpdated && this.itemsWrapper) {\n            let selectedItem = DomHandler.findSingle(this.overlayViewChild?.overlayViewChild?.nativeElement, 'li.p-highlight');\n            if (selectedItem) {\n                DomHandler.scrollInView(this.itemsWrapper, selectedItem);\n            }\n            this.selectedOptionUpdated = false;\n        }\n    }\n    ngAfterContentInit() {\n        this.templates.forEach((item) => {\n            switch (item.getType()) {\n                case 'item':\n                    this.itemTemplate = item.template;\n                    break;\n                case 'selectedItem':\n                    this.selectedItemTemplate = item.template;\n                    break;\n                case 'header':\n                    this.headerTemplate = item.template;\n                    break;\n                case 'filter':\n                    this.filterTemplate = item.template;\n                    break;\n                case 'footer':\n                    this.footerTemplate = item.template;\n                    break;\n                case 'emptyfilter':\n                    this.emptyFilterTemplate = item.template;\n                    break;\n                case 'empty':\n                    this.emptyTemplate = item.template;\n                    break;\n                case 'group':\n                    this.groupTemplate = item.template;\n                    break;\n                case 'loader':\n                    this.loaderTemplate = item.template;\n                    break;\n                case 'dropdownicon':\n                    this.dropdownIconTemplate = item.template;\n                    break;\n                case 'clearicon':\n                    this.clearIconTemplate = item.template;\n                    break;\n                case 'filtericon':\n                    this.filterIconTemplate = item.template;\n                    break;\n                default:\n                    this.itemTemplate = item.template;\n                    break;\n            }\n        });\n    }\n    flatOptions(options) {\n        return (options || []).reduce((result, option, index) => {\n            result.push({ optionGroup: option, group: true, index });\n            const optionGroupChildren = this.getOptionGroupChildren(option);\n            optionGroupChildren && optionGroupChildren.forEach((o) => result.push(o));\n            return result;\n        }, []);\n    }\n    autoUpdateModel() {\n        if (this.selectOnFocus && this.autoOptionFocus && !this.hasSelectedOption()) {\n            this.focusedOptionIndex.set(this.findFirstFocusedOptionIndex());\n            this.onOptionSelect(null, this.visibleOptions()[this.focusedOptionIndex()], false);\n        }\n        if (this.autoDisplayFirst && !this.modelValue()) {\n            const ind = this.findFirstOptionIndex();\n            this.onOptionSelect(null, this.visibleOptions()[ind], false, true);\n        }\n    }\n    onOptionSelect(event, option, isHide = true, preventChange = false) {\n        const value = this.getOptionValue(option);\n        this.updateModel(value, event);\n        this.focusedOptionIndex.set(this.findSelectedOptionIndex());\n        isHide && this.hide(true);\n        preventChange === false && this.onChange.emit({ originalEvent: event, value: value });\n    }\n    onOptionMouseEnter(event, index) {\n        if (this.focusOnHover) {\n            this.changeFocusedOptionIndex(event, index);\n        }\n    }\n    updateModel(value, event) {\n        this.value = value;\n        this.onModelChange(value);\n        this.modelValue.set(value);\n        this.selectedOptionUpdated = true;\n    }\n    writeValue(value) {\n        if (this.filter) {\n            this.resetFilter();\n        }\n        this.value = value;\n        this.allowModelChange() && this.onModelChange(value);\n        this.modelValue.set(this.value);\n        this.updateEditableLabel();\n        this.cd.markForCheck();\n    }\n    allowModelChange() {\n        return this.autoDisplayFirst && !this.placeholder && !this.modelValue() && !this.editable && this.options && this.options.length;\n    }\n    isSelected(option) {\n        return this.isValidOption(option) && ObjectUtils.equals(this.modelValue(), this.getOptionValue(option), this.equalityKey());\n    }\n    ngAfterViewInit() {\n        if (this.editable) {\n            this.updateEditableLabel();\n        }\n    }\n    updateEditableLabel() {\n        if (this.editableInputViewChild) {\n            this.editableInputViewChild.nativeElement.value = this.getOptionLabel(this.modelValue()) === undefined ? this.editableInputViewChild.nativeElement.value : this.getOptionLabel(this.modelValue());\n        }\n    }\n    getOptionIndex(index, scrollerOptions) {\n        return this.virtualScrollerDisabled ? index : scrollerOptions && scrollerOptions.getItemOptions(index)['index'];\n    }\n    getOptionLabel(option) {\n        return this.optionLabel ? ObjectUtils.resolveFieldData(option, this.optionLabel) : option && option.label !== undefined ? option.label : option;\n    }\n    getOptionValue(option) {\n        return this.optionValue ? ObjectUtils.resolveFieldData(option, this.optionValue) : !this.optionLabel && option && option.value !== undefined ? option.value : option;\n    }\n    isOptionDisabled(option) {\n        return this.optionDisabled ? ObjectUtils.resolveFieldData(option, this.optionDisabled) : option && option.disabled !== undefined ? option.disabled : false;\n    }\n    getOptionGroupLabel(optionGroup) {\n        return this.optionGroupLabel ? ObjectUtils.resolveFieldData(optionGroup, this.optionGroupLabel) : optionGroup && optionGroup.label !== undefined ? optionGroup.label : optionGroup;\n    }\n    getOptionGroupChildren(optionGroup) {\n        return this.optionGroupChildren ? ObjectUtils.resolveFieldData(optionGroup, this.optionGroupChildren) : optionGroup.items;\n    }\n    getAriaPosInset(index) {\n        return ((this.optionGroupLabel\n            ? index -\n                this.visibleOptions()\n                    .slice(0, index)\n                    .filter((option) => this.isOptionGroup(option)).length\n            : index) + 1);\n    }\n    get ariaSetSize() {\n        return this.visibleOptions().filter((option) => !this.isOptionGroup(option)).length;\n    }\n    /**\n     * Callback to invoke on filter reset.\n     * @group Method\n     */\n    resetFilter() {\n        this._filterValue.set(null);\n        if (this.filterViewChild && this.filterViewChild.nativeElement) {\n            this.filterViewChild.nativeElement.value = '';\n        }\n    }\n    registerOnChange(fn) {\n        this.onModelChange = fn;\n    }\n    registerOnTouched(fn) {\n        this.onModelTouched = fn;\n    }\n    setDisabledState(val) {\n        this.disabled = val;\n        this.cd.markForCheck();\n    }\n    onContainerClick(event) {\n        if (this.disabled || this.readonly) {\n            return;\n        }\n        this.focusInputViewChild?.nativeElement.focus({ preventScroll: true });\n        if (event.target.tagName === 'INPUT' || event.target.getAttribute('data-pc-section') === 'clearicon' || event.target.closest('[data-pc-section=\"clearicon\"]')) {\n            return;\n        }\n        else if (!this.overlayViewChild || !this.overlayViewChild.el.nativeElement.contains(event.target)) {\n            this.overlayVisible ? this.hide(true) : this.show(true);\n        }\n        this.onClick.emit(event);\n        this.cd.detectChanges();\n    }\n    isEmpty() {\n        return !this._options() || (this._options() && this._options().length === 0);\n    }\n    onEditableInput(event) {\n        const value = event.target.value;\n        this.searchValue = '';\n        const matched = this.searchOptions(event, value);\n        !matched && this.focusedOptionIndex.set(-1);\n        this.onModelChange(value);\n        this.updateModel(value, event);\n        this.onChange.emit({ originalEvent: event, value: value });\n    }\n    /**\n     * Displays the panel.\n     * @group Method\n     */\n    show(isFocus) {\n        this.overlayVisible = true;\n        const focusedOptionIndex = this.focusedOptionIndex() !== -1 ? this.focusedOptionIndex() : this.autoOptionFocus ? this.findFirstFocusedOptionIndex() : -1;\n        this.focusedOptionIndex.set(focusedOptionIndex);\n        if (isFocus) {\n            DomHandler.focus(this.focusInputViewChild?.nativeElement);\n        }\n        this.cd.markForCheck();\n    }\n    onOverlayAnimationStart(event) {\n        if (event.toState === 'visible') {\n            this.itemsWrapper = DomHandler.findSingle(this.overlayViewChild?.overlayViewChild?.nativeElement, this.virtualScroll ? '.p-scroller' : '.p-dropdown-items-wrapper');\n            this.virtualScroll && this.scroller?.setContentEl(this.itemsViewChild?.nativeElement);\n            if (this.options && this.options.length) {\n                if (this.virtualScroll) {\n                    const selectedIndex = this.modelValue() ? this.focusedOptionIndex() : -1;\n                    if (selectedIndex !== -1) {\n                        this.scroller?.scrollToIndex(selectedIndex);\n                    }\n                }\n                else {\n                    let selectedListItem = DomHandler.findSingle(this.itemsWrapper, '.p-dropdown-item.p-highlight');\n                    if (selectedListItem) {\n                        selectedListItem.scrollIntoView({ block: 'nearest', inline: 'nearest' });\n                    }\n                }\n            }\n            if (this.filterViewChild && this.filterViewChild.nativeElement) {\n                this.preventModelTouched = true;\n                if (this.autofocusFilter) {\n                    this.filterViewChild.nativeElement.focus();\n                }\n            }\n            this.onShow.emit(event);\n        }\n        if (event.toState === 'void') {\n            this.itemsWrapper = null;\n            this.onModelTouched();\n            this.onHide.emit(event);\n        }\n    }\n    /**\n     * Hides the panel.\n     * @group Method\n     */\n    hide(isFocus) {\n        this.overlayVisible = false;\n        this.focusedOptionIndex.set(-1);\n        if (this.filter && this.resetFilterOnHide) {\n            this.resetFilter();\n        }\n        isFocus && DomHandler.focus(this.focusInputViewChild?.nativeElement);\n        this.cd.markForCheck();\n    }\n    onInputFocus(event) {\n        if (this.disabled) {\n            // For ScreenReaders\n            return;\n        }\n        this.focused = true;\n        const focusedOptionIndex = this.focusedOptionIndex() !== -1 ? this.focusedOptionIndex() : this.overlayVisible && this.autoOptionFocus ? this.findFirstFocusedOptionIndex() : -1;\n        this.focusedOptionIndex.set(focusedOptionIndex);\n        this.overlayVisible && this.scrollInView(this.focusedOptionIndex());\n        this.onFocus.emit(event);\n    }\n    onInputBlur(event) {\n        this.focused = false;\n        this.overlayVisible === false && this.onBlur.emit(event);\n        if (!this.preventModelTouched) {\n            this.onModelTouched();\n        }\n        this.preventModelTouched = false;\n    }\n    onKeyDown(event, search) {\n        if (this.disabled || this.readonly) {\n            return;\n        }\n        switch (event.code) {\n            //down\n            case 'ArrowDown':\n                this.onArrowDownKey(event);\n                break;\n            //up\n            case 'ArrowUp':\n                this.onArrowUpKey(event, this.editable);\n                break;\n            case 'ArrowLeft':\n            case 'ArrowRight':\n                this.onArrowLeftKey(event, this.editable);\n                break;\n            case 'Delete':\n                this.onDeleteKey(event);\n                break;\n            case 'Home':\n                this.onHomeKey(event, this.editable);\n                break;\n            case 'End':\n                this.onEndKey(event, this.editable);\n                break;\n            case 'PageDown':\n                this.onPageDownKey(event);\n                break;\n            case 'PageUp':\n                this.onPageUpKey(event);\n                break;\n            //space\n            case 'Space':\n                this.onSpaceKey(event, search);\n                break;\n            //enter\n            case 'Enter':\n            case 'NumpadEnter':\n                this.onEnterKey(event);\n                break;\n            //escape and tab\n            case 'Escape':\n                this.onEscapeKey(event);\n                break;\n            case 'Tab':\n                this.onTabKey(event);\n                break;\n            case 'Backspace':\n                this.onBackspaceKey(event, this.editable);\n                break;\n            case 'ShiftLeft':\n            case 'ShiftRight':\n                //NOOP\n                break;\n            default:\n                if (!event.metaKey && ObjectUtils.isPrintableCharacter(event.key)) {\n                    !this.overlayVisible && this.show();\n                    !this.editable && this.searchOptions(event, event.key);\n                }\n                break;\n        }\n    }\n    onFilterKeyDown(event) {\n        switch (event.code) {\n            case 'ArrowDown':\n                this.onArrowDownKey(event);\n                break;\n            case 'ArrowUp':\n                this.onArrowUpKey(event, true);\n                break;\n            case 'ArrowLeft':\n            case 'ArrowRight':\n                this.onArrowLeftKey(event, true);\n                break;\n            case 'Home':\n                this.onHomeKey(event, true);\n                break;\n            case 'End':\n                this.onEndKey(event, true);\n                break;\n            case 'Enter':\n                this.onEnterKey(event);\n                break;\n            case 'Escape':\n                this.onEscapeKey(event);\n                break;\n            case 'Tab':\n                this.onTabKey(event, true);\n                break;\n            default:\n                break;\n        }\n    }\n    onFilterBlur(event) {\n        this.focusedOptionIndex.set(-1);\n    }\n    onArrowDownKey(event) {\n        const optionIndex = this.focusedOptionIndex() !== -1 ? this.findNextOptionIndex(this.focusedOptionIndex()) : this.findFirstFocusedOptionIndex();\n        this.changeFocusedOptionIndex(event, optionIndex);\n        !this.overlayVisible && this.show();\n        event.preventDefault();\n    }\n    changeFocusedOptionIndex(event, index) {\n        if (this.focusedOptionIndex() !== index) {\n            this.focusedOptionIndex.set(index);\n            this.scrollInView();\n            if (this.selectOnFocus) {\n                const option = this.visibleOptions()[index];\n                this.onOptionSelect(event, option, false);\n            }\n        }\n    }\n    get virtualScrollerDisabled() {\n        return !this.virtualScroll;\n    }\n    scrollInView(index = -1) {\n        const id = index !== -1 ? `${this.id}_${index}` : this.focusedOptionId;\n        if (this.itemsViewChild && this.itemsViewChild.nativeElement) {\n            const element = DomHandler.findSingle(this.itemsViewChild.nativeElement, `li[id=\"${id}\"]`);\n            if (element) {\n                element.scrollIntoView && element.scrollIntoView({ block: 'nearest', inline: 'nearest' });\n            }\n            else if (!this.virtualScrollerDisabled) {\n                setTimeout(() => {\n                    this.virtualScroll && this.scroller?.scrollToIndex(index !== -1 ? index : this.focusedOptionIndex());\n                }, 0);\n            }\n        }\n    }\n    get focusedOptionId() {\n        return this.focusedOptionIndex() !== -1 ? `${this.id}_${this.focusedOptionIndex()}` : null;\n    }\n    hasSelectedOption() {\n        return this.modelValue() !== undefined;\n    }\n    isValidSelectedOption(option) {\n        return this.isValidOption(option) && this.isSelected(option);\n    }\n    equalityKey() {\n        return this.optionValue ? null : this.dataKey;\n    }\n    findFirstFocusedOptionIndex() {\n        const selectedIndex = this.findSelectedOptionIndex();\n        return selectedIndex < 0 ? this.findFirstOptionIndex() : selectedIndex;\n    }\n    findFirstOptionIndex() {\n        return this.visibleOptions().findIndex((option) => this.isValidOption(option));\n    }\n    findSelectedOptionIndex() {\n        return this.hasSelectedOption() ? this.visibleOptions().findIndex((option) => this.isValidSelectedOption(option)) : -1;\n    }\n    findNextOptionIndex(index) {\n        const matchedOptionIndex = index < this.visibleOptions().length - 1\n            ? this.visibleOptions()\n                .slice(index + 1)\n                .findIndex((option) => this.isValidOption(option))\n            : -1;\n        return matchedOptionIndex > -1 ? matchedOptionIndex + index + 1 : index;\n    }\n    findPrevOptionIndex(index) {\n        const matchedOptionIndex = index > 0 ? ObjectUtils.findLastIndex(this.visibleOptions().slice(0, index), (option) => this.isValidOption(option)) : -1;\n        return matchedOptionIndex > -1 ? matchedOptionIndex : index;\n    }\n    findLastOptionIndex() {\n        return ObjectUtils.findLastIndex(this.visibleOptions(), (option) => this.isValidOption(option));\n    }\n    findLastFocusedOptionIndex() {\n        const selectedIndex = this.findSelectedOptionIndex();\n        return selectedIndex < 0 ? this.findLastOptionIndex() : selectedIndex;\n    }\n    isValidOption(option) {\n        return option && !(this.isOptionDisabled(option) || this.isOptionGroup(option));\n    }\n    isOptionGroup(option) {\n        return this.optionGroupLabel && option.optionGroup && option.group;\n    }\n    onArrowUpKey(event, pressedInInputText = false) {\n        if (event.altKey && !pressedInInputText) {\n            if (this.focusedOptionIndex() !== -1) {\n                const option = this.visibleOptions()[this.focusedOptionIndex()];\n                this.onOptionSelect(event, option);\n            }\n            this.overlayVisible && this.hide();\n            event.preventDefault();\n        }\n        else {\n            const optionIndex = this.focusedOptionIndex() !== -1 ? this.findPrevOptionIndex(this.focusedOptionIndex()) : this.findLastFocusedOptionIndex();\n            this.changeFocusedOptionIndex(event, optionIndex);\n            !this.overlayVisible && this.show();\n            event.preventDefault();\n        }\n    }\n    onArrowLeftKey(event, pressedInInputText = false) {\n        pressedInInputText && this.focusedOptionIndex.set(-1);\n    }\n    onDeleteKey(event) {\n        if (this.showClear) {\n            this.clear(event);\n            event.preventDefault();\n        }\n    }\n    onHomeKey(event, pressedInInputText = false) {\n        if (pressedInInputText) {\n            event.currentTarget.setSelectionRange(0, 0);\n            this.focusedOptionIndex.set(-1);\n        }\n        else {\n            this.changeFocusedOptionIndex(event, this.findFirstOptionIndex());\n            !this.overlayVisible && this.show();\n        }\n        event.preventDefault();\n    }\n    onEndKey(event, pressedInInputText = false) {\n        if (pressedInInputText) {\n            const target = event.currentTarget;\n            const len = target.value.length;\n            target.setSelectionRange(len, len);\n            this.focusedOptionIndex.set(-1);\n        }\n        else {\n            this.changeFocusedOptionIndex(event, this.findLastOptionIndex());\n            !this.overlayVisible && this.show();\n        }\n        event.preventDefault();\n    }\n    onPageDownKey(event) {\n        this.scrollInView(this.visibleOptions().length - 1);\n        event.preventDefault();\n    }\n    onPageUpKey(event) {\n        this.scrollInView(0);\n        event.preventDefault();\n    }\n    onSpaceKey(event, pressedInInputText = false) {\n        !pressedInInputText && this.onEnterKey(event);\n    }\n    onEnterKey(event) {\n        if (!this.overlayVisible) {\n            this.onArrowDownKey(event);\n        }\n        else {\n            if (this.focusedOptionIndex() !== -1) {\n                const option = this.visibleOptions()[this.focusedOptionIndex()];\n                this.onOptionSelect(event, option);\n            }\n            this.hide();\n        }\n        event.preventDefault();\n    }\n    onEscapeKey(event) {\n        this.overlayVisible && this.hide(true);\n        event.preventDefault();\n    }\n    onTabKey(event, pressedInInputText = false) {\n        if (!pressedInInputText) {\n            if (this.overlayVisible && this.hasFocusableElements()) {\n                DomHandler.focus(event.shiftKey ? this.lastHiddenFocusableElementOnOverlay.nativeElement : this.firstHiddenFocusableElementOnOverlay.nativeElement);\n                event.preventDefault();\n            }\n            else {\n                if (this.focusedOptionIndex() !== -1) {\n                    const option = this.visibleOptions()[this.focusedOptionIndex()];\n                    this.onOptionSelect(event, option);\n                }\n                this.overlayVisible && this.hide(this.filter);\n            }\n        }\n    }\n    onFirstHiddenFocus(event) {\n        const focusableEl = event.relatedTarget === this.focusInputViewChild?.nativeElement ? DomHandler.getFirstFocusableElement(this.overlayViewChild.el.nativeElement, ':not(.p-hidden-focusable)') : this.focusInputViewChild.nativeElement;\n        DomHandler.focus(focusableEl);\n    }\n    onLastHiddenFocus(event) {\n        const focusableEl = event.relatedTarget === this.focusInputViewChild?.nativeElement\n            ? DomHandler.getLastFocusableElement(this.overlayViewChild?.overlayViewChild?.nativeElement, ':not([data-p-hidden-focusable=\"true\"])')\n            : this.focusInputViewChild?.nativeElement;\n        DomHandler.focus(focusableEl);\n    }\n    hasFocusableElements() {\n        return DomHandler.getFocusableElements(this.overlayViewChild.overlayViewChild.nativeElement, ':not([data-p-hidden-focusable=\"true\"])').length > 0;\n    }\n    onBackspaceKey(event, pressedInInputText = false) {\n        if (pressedInInputText) {\n            !this.overlayVisible && this.show();\n        }\n    }\n    searchFields() {\n        return this.filterFields || [this.optionLabel];\n    }\n    searchOptions(event, char) {\n        this.searchValue = (this.searchValue || '') + char;\n        let optionIndex = -1;\n        let matched = false;\n        if (this.focusedOptionIndex() !== -1) {\n            optionIndex = this.visibleOptions()\n                .slice(this.focusedOptionIndex())\n                .findIndex((option) => this.isOptionMatched(option));\n            optionIndex =\n                optionIndex === -1\n                    ? this.visibleOptions()\n                        .slice(0, this.focusedOptionIndex())\n                        .findIndex((option) => this.isOptionMatched(option))\n                    : optionIndex + this.focusedOptionIndex();\n        }\n        else {\n            optionIndex = this.visibleOptions().findIndex((option) => this.isOptionMatched(option));\n        }\n        if (optionIndex !== -1) {\n            matched = true;\n        }\n        if (optionIndex === -1 && this.focusedOptionIndex() === -1) {\n            optionIndex = this.findFirstFocusedOptionIndex();\n        }\n        if (optionIndex !== -1) {\n            this.changeFocusedOptionIndex(event, optionIndex);\n        }\n        if (this.searchTimeout) {\n            clearTimeout(this.searchTimeout);\n        }\n        this.searchTimeout = setTimeout(() => {\n            this.searchValue = '';\n            this.searchTimeout = null;\n        }, 500);\n        return matched;\n    }\n    isOptionMatched(option) {\n        return this.isValidOption(option) && this.getOptionLabel(option).toLocaleLowerCase(this.filterLocale).startsWith(this.searchValue.toLocaleLowerCase(this.filterLocale));\n    }\n    onFilterInputChange(event) {\n        let value = event.target.value?.trim();\n        this._filterValue.set(value);\n        this.focusedOptionIndex.set(-1);\n        this.onFilter.emit({ originalEvent: event, filter: this._filterValue() });\n        !this.virtualScrollerDisabled && this.scroller.scrollToIndex(0);\n        this.cd.markForCheck();\n    }\n    applyFocus() {\n        if (this.editable)\n            DomHandler.findSingle(this.el.nativeElement, '.p-dropdown-label.p-inputtext').focus();\n        else\n            DomHandler.findSingle(this.el.nativeElement, 'input[readonly]').focus();\n    }\n    /**\n     * Applies focus.\n     * @group Method\n     */\n    focus() {\n        this.applyFocus();\n    }\n    clear(event) {\n        this.updateModel(null, event);\n        this.updateEditableLabel();\n        this.onChange.emit({ originalEvent: event, value: this.value });\n        this.onClear.emit(event);\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.0.5\", ngImport: i0, type: Dropdown, deps: [{ token: i0.ElementRef }, { token: i0.Renderer2 }, { token: i0.ChangeDetectorRef }, { token: i0.NgZone }, { token: i3.FilterService }, { token: i3.PrimeNGConfig }], target: i0.ɵɵFactoryTarget.Component });\n    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"17.0.5\", type: Dropdown, selector: \"p-dropdown\", inputs: { id: \"id\", scrollHeight: \"scrollHeight\", filter: \"filter\", name: \"name\", style: \"style\", panelStyle: \"panelStyle\", styleClass: \"styleClass\", panelStyleClass: \"panelStyleClass\", readonly: \"readonly\", required: \"required\", editable: \"editable\", appendTo: \"appendTo\", tabindex: \"tabindex\", placeholder: \"placeholder\", filterPlaceholder: \"filterPlaceholder\", filterLocale: \"filterLocale\", inputId: \"inputId\", dataKey: \"dataKey\", filterBy: \"filterBy\", filterFields: \"filterFields\", autofocus: \"autofocus\", resetFilterOnHide: \"resetFilterOnHide\", dropdownIcon: \"dropdownIcon\", optionLabel: \"optionLabel\", optionValue: \"optionValue\", optionDisabled: \"optionDisabled\", optionGroupLabel: \"optionGroupLabel\", optionGroupChildren: \"optionGroupChildren\", autoDisplayFirst: \"autoDisplayFirst\", group: \"group\", showClear: \"showClear\", emptyFilterMessage: \"emptyFilterMessage\", emptyMessage: \"emptyMessage\", lazy: \"lazy\", virtualScroll: \"virtualScroll\", virtualScrollItemSize: \"virtualScrollItemSize\", virtualScrollOptions: \"virtualScrollOptions\", overlayOptions: \"overlayOptions\", ariaFilterLabel: \"ariaFilterLabel\", ariaLabel: \"ariaLabel\", ariaLabelledBy: \"ariaLabelledBy\", filterMatchMode: \"filterMatchMode\", maxlength: \"maxlength\", tooltip: \"tooltip\", tooltipPosition: \"tooltipPosition\", tooltipPositionStyle: \"tooltipPositionStyle\", tooltipStyleClass: \"tooltipStyleClass\", focusOnHover: \"focusOnHover\", selectOnFocus: \"selectOnFocus\", autoOptionFocus: \"autoOptionFocus\", autofocusFilter: \"autofocusFilter\", disabled: \"disabled\", itemSize: \"itemSize\", autoZIndex: \"autoZIndex\", baseZIndex: \"baseZIndex\", showTransitionOptions: \"showTransitionOptions\", hideTransitionOptions: \"hideTransitionOptions\", filterValue: \"filterValue\", options: \"options\" }, outputs: { onChange: \"onChange\", onFilter: \"onFilter\", onFocus: \"onFocus\", onBlur: \"onBlur\", onClick: \"onClick\", onShow: \"onShow\", onHide: \"onHide\", onClear: \"onClear\", onLazyLoad: \"onLazyLoad\" }, host: { properties: { \"class.p-inputwrapper-filled\": \"filled\", \"class.p-inputwrapper-focus\": \"focused || overlayVisible\" }, classAttribute: \"p-element p-inputwrapper\" }, providers: [DROPDOWN_VALUE_ACCESSOR], queries: [{ propertyName: \"templates\", predicate: PrimeTemplate }], viewQueries: [{ propertyName: \"containerViewChild\", first: true, predicate: [\"container\"], descendants: true }, { propertyName: \"filterViewChild\", first: true, predicate: [\"filter\"], descendants: true }, { propertyName: \"focusInputViewChild\", first: true, predicate: [\"focusInput\"], descendants: true }, { propertyName: \"editableInputViewChild\", first: true, predicate: [\"editableInput\"], descendants: true }, { propertyName: \"itemsViewChild\", first: true, predicate: [\"items\"], descendants: true }, { propertyName: \"scroller\", first: true, predicate: [\"scroller\"], descendants: true }, { propertyName: \"overlayViewChild\", first: true, predicate: [\"overlay\"], descendants: true }, { propertyName: \"firstHiddenFocusableElementOnOverlay\", first: true, predicate: [\"firstHiddenFocusableEl\"], descendants: true }, { propertyName: \"lastHiddenFocusableElementOnOverlay\", first: true, predicate: [\"lastHiddenFocusableEl\"], descendants: true }], ngImport: i0, template: `\n        <div #container [attr.id]=\"id\" [ngClass]=\"containerClass\" (click)=\"onContainerClick($event)\" [ngStyle]=\"style\" [class]=\"styleClass\">\n            <span\n                #focusInput\n                [ngClass]=\"inputClass\"\n                *ngIf=\"!editable\"\n                [pTooltip]=\"tooltip\"\n                [tooltipPosition]=\"tooltipPosition\"\n                [positionStyle]=\"tooltipPositionStyle\"\n                [tooltipStyleClass]=\"tooltipStyleClass\"\n                [attr.aria-disabled]=\"disabled\"\n                [attr.id]=\"inputId\"\n                role=\"combobox\"\n                [attr.aria-label]=\"ariaLabel || (label() === 'p-emptylabel' ? undefined : label())\"\n                [attr.aria-labelledby]=\"ariaLabelledBy\"\n                [attr.aria-haspopup]=\"'listbox'\"\n                [attr.aria-expanded]=\"overlayVisible\"\n                [attr.aria-controls]=\"id + '_list'\"\n                [attr.tabindex]=\"!disabled ? tabindex : -1\"\n                pAutoFocus\n                [autofocus]=\"autofocus\"\n                [attr.aria-activedescendant]=\"focused ? focusedOptionId : undefined\"\n                (focus)=\"onInputFocus($event)\"\n                (blur)=\"onInputBlur($event)\"\n                (keydown)=\"onKeyDown($event)\"\n            >\n                <ng-container *ngIf=\"!selectedItemTemplate; else defaultPlaceholder\">{{ label() === 'p-emptylabel' ? '&nbsp;' : label() }}</ng-container>\n                <ng-container *ngTemplateOutlet=\"selectedItemTemplate; context: { $implicit: selectedOption }\"></ng-container>\n                <ng-template #defaultPlaceholder>\n                    <span *ngIf=\"!modelValue() && (label() === placeholder || (label() && !placeholder))\">{{ label() === 'p-emptylabel' ? '&nbsp;' : placeholder }}</span>\n                </ng-template>\n            </span>\n            <input\n                *ngIf=\"editable\"\n                #editableInput\n                type=\"text\"\n                [attr.maxlength]=\"maxlength\"\n                [ngClass]=\"inputClass\"\n                [disabled]=\"disabled\"\n                aria-haspopup=\"listbox\"\n                [attr.placeholder]=\"placeholder\"\n                [attr.aria-expanded]=\"overlayVisible\"\n                (input)=\"onEditableInput($event)\"\n                (keydown)=\"onKeyDown($event)\"\n                (focus)=\"onInputFocus($event)\"\n                (blur)=\"onInputBlur($event)\"\n            />\n            <ng-container *ngIf=\"isVisibleClearIcon\">\n                <TimesIcon [styleClass]=\"'p-dropdown-clear-icon'\" (click)=\"clear($event)\" *ngIf=\"!clearIconTemplate\" [attr.data-pc-section]=\"'clearicon'\" />\n                <span class=\"p-dropdown-clear-icon\" (click)=\"clear($event)\" *ngIf=\"clearIconTemplate\" [attr.data-pc-section]=\"'clearicon'\">\n                    <ng-template *ngTemplateOutlet=\"clearIconTemplate\"></ng-template>\n                </span>\n            </ng-container>\n\n            <div class=\"p-dropdown-trigger\" role=\"button\" aria-label=\"dropdown trigger\" aria-haspopup=\"listbox\" [attr.aria-expanded]=\"overlayVisible\" [attr.data-pc-section]=\"'trigger'\">\n                <ng-container *ngIf=\"!dropdownIconTemplate\">\n                    <span class=\"p-dropdown-trigger-icon\" *ngIf=\"dropdownIcon\" [ngClass]=\"dropdownIcon\"></span>\n                    <ChevronDownIcon *ngIf=\"!dropdownIcon\" [styleClass]=\"'p-dropdown-trigger-icon'\" />\n                </ng-container>\n                <span *ngIf=\"dropdownIconTemplate\" class=\"p-dropdown-trigger-icon\">\n                    <ng-template *ngTemplateOutlet=\"dropdownIconTemplate\"></ng-template>\n                </span>\n            </div>\n\n            <p-overlay\n                #overlay\n                [(visible)]=\"overlayVisible\"\n                [options]=\"overlayOptions\"\n                [target]=\"'@parent'\"\n                [appendTo]=\"appendTo\"\n                [autoZIndex]=\"autoZIndex\"\n                [baseZIndex]=\"baseZIndex\"\n                [showTransitionOptions]=\"showTransitionOptions\"\n                [hideTransitionOptions]=\"hideTransitionOptions\"\n                (onAnimationStart)=\"onOverlayAnimationStart($event)\"\n                (onHide)=\"hide()\"\n            >\n                <ng-template pTemplate=\"content\">\n                    <div [ngClass]=\"'p-dropdown-panel p-component'\" [ngStyle]=\"panelStyle\" [class]=\"panelStyleClass\">\n                        <span\n                            #firstHiddenFocusableEl\n                            role=\"presentation\"\n                            [attr.aria-hidden]=\"true\"\n                            class=\"p-hidden-accessible p-hidden-focusable\"\n                            [attr.tabindex]=\"0\"\n                            (focus)=\"onFirstHiddenFocus($event)\"\n                            [attr.data-p-hidden-accessible]=\"true\"\n                            [attr.data-p-hidden-focusable]=\"true\"\n                        >\n                        </span>\n                        <ng-container *ngTemplateOutlet=\"headerTemplate\"></ng-container>\n                        <div class=\"p-dropdown-header\" *ngIf=\"filter\" (click)=\"$event.stopPropagation()\">\n                            <ng-container *ngIf=\"filterTemplate; else builtInFilterElement\">\n                                <ng-container *ngTemplateOutlet=\"filterTemplate; context: { options: filterOptions }\"></ng-container>\n                            </ng-container>\n                            <ng-template #builtInFilterElement>\n                                <div class=\"p-dropdown-filter-container\">\n                                    <input\n                                        #filter\n                                        type=\"text\"\n                                        autocomplete=\"off\"\n                                        [value]=\"_filterValue() || ''\"\n                                        class=\"p-dropdown-filter p-inputtext p-component\"\n                                        [attr.placeholder]=\"filterPlaceholder\"\n                                        [attr.aria-owns]=\"id + '_list'\"\n                                        (input)=\"onFilterInputChange($event)\"\n                                        [attr.aria-label]=\"ariaFilterLabel\"\n                                        [attr.aria-activedescendant]=\"focusedOptionId\"\n                                        (keydown)=\"onFilterKeyDown($event)\"\n                                        (blur)=\"onFilterBlur($event)\"\n                                    />\n                                    <SearchIcon *ngIf=\"!filterIconTemplate\" [styleClass]=\"'p-dropdown-filter-icon'\" />\n                                    <span *ngIf=\"filterIconTemplate\" class=\"p-dropdown-filter-icon\">\n                                        <ng-template *ngTemplateOutlet=\"filterIconTemplate\"></ng-template>\n                                    </span>\n                                </div>\n                            </ng-template>\n                        </div>\n                        <div class=\"p-dropdown-items-wrapper\" [style.max-height]=\"virtualScroll ? 'auto' : scrollHeight || 'auto'\">\n                            <p-scroller\n                                *ngIf=\"virtualScroll\"\n                                #scroller\n                                [items]=\"visibleOptions()\"\n                                [style]=\"{ height: scrollHeight }\"\n                                [itemSize]=\"virtualScrollItemSize || _itemSize\"\n                                [autoSize]=\"true\"\n                                [lazy]=\"lazy\"\n                                (onLazyLoad)=\"onLazyLoad.emit($event)\"\n                                [options]=\"virtualScrollOptions\"\n                            >\n                                <ng-template pTemplate=\"content\" let-items let-scrollerOptions=\"options\">\n                                    <ng-container *ngTemplateOutlet=\"buildInItems; context: { $implicit: items, options: scrollerOptions }\"></ng-container>\n                                </ng-template>\n                                <ng-container *ngIf=\"loaderTemplate\">\n                                    <ng-template pTemplate=\"loader\" let-scrollerOptions=\"options\">\n                                        <ng-container *ngTemplateOutlet=\"loaderTemplate; context: { options: scrollerOptions }\"></ng-container>\n                                    </ng-template>\n                                </ng-container>\n                            </p-scroller>\n                            <ng-container *ngIf=\"!virtualScroll\">\n                                <ng-container *ngTemplateOutlet=\"buildInItems; context: { $implicit: visibleOptions(), options: {} }\"></ng-container>\n                            </ng-container>\n\n                            <ng-template #buildInItems let-items let-scrollerOptions=\"options\">\n                                <ul #items [attr.id]=\"id + '_list'\" class=\"p-dropdown-items\" [ngClass]=\"scrollerOptions.contentStyleClass\" [style]=\"scrollerOptions.contentStyle\" role=\"listbox\">\n                                    <ng-template ngFor let-option [ngForOf]=\"items\" let-i=\"index\">\n                                        <ng-container *ngIf=\"option.group\">\n                                            <li class=\"p-dropdown-item-group\" [attr.id]=\"id + '_' + getOptionIndex(i, scrollerOptions)\" [ngStyle]=\"{ height: scrollerOptions.itemSize + 'px' }\" role=\"option\">\n                                                <span *ngIf=\"!groupTemplate\">{{ getOptionGroupLabel(option.optionGroup) }}</span>\n                                                <ng-container *ngTemplateOutlet=\"groupTemplate; context: { $implicit: option.optionGroup }\"></ng-container>\n                                            </li>\n                                        </ng-container>\n                                        <ng-container *ngIf=\"!option.group\">\n                                            <p-dropdownItem\n                                                [id]=\"id + '_' + getOptionIndex(i, scrollerOptions)\"\n                                                [option]=\"option\"\n                                                [selected]=\"isSelected(option)\"\n                                                [label]=\"getOptionLabel(option)\"\n                                                [disabled]=\"isOptionDisabled(option)\"\n                                                [template]=\"itemTemplate\"\n                                                [focused]=\"focusedOptionIndex() === getOptionIndex(i, scrollerOptions)\"\n                                                [ariaPosInset]=\"getAriaPosInset(getOptionIndex(i, scrollerOptions))\"\n                                                [ariaSetSize]=\"ariaSetSize\"\n                                                (onClick)=\"onOptionSelect($event, option)\"\n                                                (onMouseEnter)=\"onOptionMouseEnter($event, getOptionIndex(i, scrollerOptions))\"\n                                            ></p-dropdownItem>\n                                        </ng-container>\n                                    </ng-template>\n\n                                    <li *ngIf=\"filterValue && isEmpty()\" class=\"p-dropdown-empty-message\" [ngStyle]=\"{ height: scrollerOptions.itemSize + 'px' }\">\n                                        <ng-container *ngIf=\"!emptyFilterTemplate && !emptyTemplate; else emptyFilter\">\n                                            {{ emptyFilterMessageLabel }}\n                                        </ng-container>\n                                        <ng-container #emptyFilter *ngTemplateOutlet=\"emptyFilterTemplate || emptyTemplate\"></ng-container>\n                                    </li>\n                                    <li *ngIf=\"!filterValue && isEmpty()\" class=\"p-dropdown-empty-message\" [ngStyle]=\"{ height: scrollerOptions.itemSize + 'px' }\">\n                                        <ng-container *ngIf=\"!emptyTemplate; else empty\">\n                                            {{ emptyMessageLabel }}\n                                        </ng-container>\n                                        <ng-container #empty *ngTemplateOutlet=\"emptyTemplate\"></ng-container>\n                                    </li>\n                                </ul>\n                            </ng-template>\n                        </div>\n                        <ng-container *ngTemplateOutlet=\"footerTemplate\"></ng-container>\n                        <span\n                            #lastHiddenFocusableEl\n                            role=\"presentation\"\n                            [attr.aria-hidden]=\"true\"\n                            class=\"p-hidden-accessible p-hidden-focusable\"\n                            [attr.tabindex]=\"0\"\n                            (focus)=\"onLastHiddenFocus($event)\"\n                            [attr.data-p-hidden-accessible]=\"true\"\n                            [attr.data-p-hidden-focusable]=\"true\"\n                        ></span>\n                    </div>\n                </ng-template>\n            </p-overlay>\n        </div>\n    `, isInline: true, styles: [\"@layer primeng{.p-dropdown{display:inline-flex;cursor:pointer;position:relative;-webkit-user-select:none;user-select:none}.p-dropdown-clear-icon{position:absolute;top:50%;margin-top:-.5rem}.p-dropdown-trigger{display:flex;align-items:center;justify-content:center;flex-shrink:0}.p-dropdown-label{display:block;white-space:nowrap;overflow:hidden;flex:1 1 auto;width:1%;text-overflow:ellipsis;cursor:pointer}.p-dropdown-label-empty{overflow:hidden;opacity:0}input.p-dropdown-label{cursor:default}.p-dropdown .p-dropdown-panel{min-width:100%}.p-dropdown-items-wrapper{overflow:auto}.p-dropdown-item{cursor:pointer;font-weight:400;white-space:nowrap;position:relative;overflow:hidden}.p-dropdown-item-group{cursor:auto}.p-dropdown-items{margin:0;padding:0;list-style-type:none}.p-dropdown-filter{width:100%}.p-dropdown-filter-container{position:relative}.p-dropdown-filter-icon{position:absolute;top:50%;margin-top:-.5rem}.p-fluid .p-dropdown{display:flex}.p-fluid .p-dropdown .p-dropdown-label{width:1%}}\\n\"], dependencies: [{ kind: \"directive\", type: i0.forwardRef(() => i1.NgClass), selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }, { kind: \"directive\", type: i0.forwardRef(() => i1.NgForOf), selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { kind: \"directive\", type: i0.forwardRef(() => i1.NgIf), selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i0.forwardRef(() => i1.NgTemplateOutlet), selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\", \"ngTemplateOutletInjector\"] }, { kind: \"directive\", type: i0.forwardRef(() => i1.NgStyle), selector: \"[ngStyle]\", inputs: [\"ngStyle\"] }, { kind: \"component\", type: i0.forwardRef(() => i4.Overlay), selector: \"p-overlay\", inputs: [\"visible\", \"mode\", \"style\", \"styleClass\", \"contentStyle\", \"contentStyleClass\", \"target\", \"appendTo\", \"autoZIndex\", \"baseZIndex\", \"showTransitionOptions\", \"hideTransitionOptions\", \"listener\", \"responsive\", \"options\"], outputs: [\"visibleChange\", \"onBeforeShow\", \"onShow\", \"onBeforeHide\", \"onHide\", \"onAnimationStart\", \"onAnimationDone\"] }, { kind: \"directive\", type: i0.forwardRef(() => i3.PrimeTemplate), selector: \"[pTemplate]\", inputs: [\"type\", \"pTemplate\"] }, { kind: \"directive\", type: i0.forwardRef(() => i5.Tooltip), selector: \"[pTooltip]\", inputs: [\"tooltipPosition\", \"tooltipEvent\", \"appendTo\", \"positionStyle\", \"tooltipStyleClass\", \"tooltipZIndex\", \"escape\", \"showDelay\", \"hideDelay\", \"life\", \"positionTop\", \"positionLeft\", \"autoHide\", \"fitContent\", \"hideOnEscape\", \"pTooltip\", \"tooltipDisabled\", \"tooltipOptions\"] }, { kind: \"component\", type: i0.forwardRef(() => i6.Scroller), selector: \"p-scroller\", inputs: [\"id\", \"style\", \"styleClass\", \"tabindex\", \"items\", \"itemSize\", \"scrollHeight\", \"scrollWidth\", \"orientation\", \"step\", \"delay\", \"resizeDelay\", \"appendOnly\", \"inline\", \"lazy\", \"disabled\", \"loaderDisabled\", \"columns\", \"showSpacer\", \"showLoader\", \"numToleratedItems\", \"loading\", \"autoSize\", \"trackBy\", \"options\"], outputs: [\"onLazyLoad\", \"onScroll\", \"onScrollIndexChange\"] }, { kind: \"directive\", type: i0.forwardRef(() => i7.AutoFocus), selector: \"[pAutoFocus]\", inputs: [\"autofocus\"] }, { kind: \"component\", type: i0.forwardRef(() => TimesIcon), selector: \"TimesIcon\" }, { kind: \"component\", type: i0.forwardRef(() => ChevronDownIcon), selector: \"ChevronDownIcon\" }, { kind: \"component\", type: i0.forwardRef(() => SearchIcon), selector: \"SearchIcon\" }, { kind: \"component\", type: i0.forwardRef(() => DropdownItem), selector: \"p-dropdownItem\", inputs: [\"id\", \"option\", \"selected\", \"focused\", \"label\", \"disabled\", \"visible\", \"itemSize\", \"ariaPosInset\", \"ariaSetSize\", \"template\"], outputs: [\"onClick\", \"onMouseEnter\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.0.5\", ngImport: i0, type: Dropdown, decorators: [{\n            type: Component,\n            args: [{ selector: 'p-dropdown', template: `\n        <div #container [attr.id]=\"id\" [ngClass]=\"containerClass\" (click)=\"onContainerClick($event)\" [ngStyle]=\"style\" [class]=\"styleClass\">\n            <span\n                #focusInput\n                [ngClass]=\"inputClass\"\n                *ngIf=\"!editable\"\n                [pTooltip]=\"tooltip\"\n                [tooltipPosition]=\"tooltipPosition\"\n                [positionStyle]=\"tooltipPositionStyle\"\n                [tooltipStyleClass]=\"tooltipStyleClass\"\n                [attr.aria-disabled]=\"disabled\"\n                [attr.id]=\"inputId\"\n                role=\"combobox\"\n                [attr.aria-label]=\"ariaLabel || (label() === 'p-emptylabel' ? undefined : label())\"\n                [attr.aria-labelledby]=\"ariaLabelledBy\"\n                [attr.aria-haspopup]=\"'listbox'\"\n                [attr.aria-expanded]=\"overlayVisible\"\n                [attr.aria-controls]=\"id + '_list'\"\n                [attr.tabindex]=\"!disabled ? tabindex : -1\"\n                pAutoFocus\n                [autofocus]=\"autofocus\"\n                [attr.aria-activedescendant]=\"focused ? focusedOptionId : undefined\"\n                (focus)=\"onInputFocus($event)\"\n                (blur)=\"onInputBlur($event)\"\n                (keydown)=\"onKeyDown($event)\"\n            >\n                <ng-container *ngIf=\"!selectedItemTemplate; else defaultPlaceholder\">{{ label() === 'p-emptylabel' ? '&nbsp;' : label() }}</ng-container>\n                <ng-container *ngTemplateOutlet=\"selectedItemTemplate; context: { $implicit: selectedOption }\"></ng-container>\n                <ng-template #defaultPlaceholder>\n                    <span *ngIf=\"!modelValue() && (label() === placeholder || (label() && !placeholder))\">{{ label() === 'p-emptylabel' ? '&nbsp;' : placeholder }}</span>\n                </ng-template>\n            </span>\n            <input\n                *ngIf=\"editable\"\n                #editableInput\n                type=\"text\"\n                [attr.maxlength]=\"maxlength\"\n                [ngClass]=\"inputClass\"\n                [disabled]=\"disabled\"\n                aria-haspopup=\"listbox\"\n                [attr.placeholder]=\"placeholder\"\n                [attr.aria-expanded]=\"overlayVisible\"\n                (input)=\"onEditableInput($event)\"\n                (keydown)=\"onKeyDown($event)\"\n                (focus)=\"onInputFocus($event)\"\n                (blur)=\"onInputBlur($event)\"\n            />\n            <ng-container *ngIf=\"isVisibleClearIcon\">\n                <TimesIcon [styleClass]=\"'p-dropdown-clear-icon'\" (click)=\"clear($event)\" *ngIf=\"!clearIconTemplate\" [attr.data-pc-section]=\"'clearicon'\" />\n                <span class=\"p-dropdown-clear-icon\" (click)=\"clear($event)\" *ngIf=\"clearIconTemplate\" [attr.data-pc-section]=\"'clearicon'\">\n                    <ng-template *ngTemplateOutlet=\"clearIconTemplate\"></ng-template>\n                </span>\n            </ng-container>\n\n            <div class=\"p-dropdown-trigger\" role=\"button\" aria-label=\"dropdown trigger\" aria-haspopup=\"listbox\" [attr.aria-expanded]=\"overlayVisible\" [attr.data-pc-section]=\"'trigger'\">\n                <ng-container *ngIf=\"!dropdownIconTemplate\">\n                    <span class=\"p-dropdown-trigger-icon\" *ngIf=\"dropdownIcon\" [ngClass]=\"dropdownIcon\"></span>\n                    <ChevronDownIcon *ngIf=\"!dropdownIcon\" [styleClass]=\"'p-dropdown-trigger-icon'\" />\n                </ng-container>\n                <span *ngIf=\"dropdownIconTemplate\" class=\"p-dropdown-trigger-icon\">\n                    <ng-template *ngTemplateOutlet=\"dropdownIconTemplate\"></ng-template>\n                </span>\n            </div>\n\n            <p-overlay\n                #overlay\n                [(visible)]=\"overlayVisible\"\n                [options]=\"overlayOptions\"\n                [target]=\"'@parent'\"\n                [appendTo]=\"appendTo\"\n                [autoZIndex]=\"autoZIndex\"\n                [baseZIndex]=\"baseZIndex\"\n                [showTransitionOptions]=\"showTransitionOptions\"\n                [hideTransitionOptions]=\"hideTransitionOptions\"\n                (onAnimationStart)=\"onOverlayAnimationStart($event)\"\n                (onHide)=\"hide()\"\n            >\n                <ng-template pTemplate=\"content\">\n                    <div [ngClass]=\"'p-dropdown-panel p-component'\" [ngStyle]=\"panelStyle\" [class]=\"panelStyleClass\">\n                        <span\n                            #firstHiddenFocusableEl\n                            role=\"presentation\"\n                            [attr.aria-hidden]=\"true\"\n                            class=\"p-hidden-accessible p-hidden-focusable\"\n                            [attr.tabindex]=\"0\"\n                            (focus)=\"onFirstHiddenFocus($event)\"\n                            [attr.data-p-hidden-accessible]=\"true\"\n                            [attr.data-p-hidden-focusable]=\"true\"\n                        >\n                        </span>\n                        <ng-container *ngTemplateOutlet=\"headerTemplate\"></ng-container>\n                        <div class=\"p-dropdown-header\" *ngIf=\"filter\" (click)=\"$event.stopPropagation()\">\n                            <ng-container *ngIf=\"filterTemplate; else builtInFilterElement\">\n                                <ng-container *ngTemplateOutlet=\"filterTemplate; context: { options: filterOptions }\"></ng-container>\n                            </ng-container>\n                            <ng-template #builtInFilterElement>\n                                <div class=\"p-dropdown-filter-container\">\n                                    <input\n                                        #filter\n                                        type=\"text\"\n                                        autocomplete=\"off\"\n                                        [value]=\"_filterValue() || ''\"\n                                        class=\"p-dropdown-filter p-inputtext p-component\"\n                                        [attr.placeholder]=\"filterPlaceholder\"\n                                        [attr.aria-owns]=\"id + '_list'\"\n                                        (input)=\"onFilterInputChange($event)\"\n                                        [attr.aria-label]=\"ariaFilterLabel\"\n                                        [attr.aria-activedescendant]=\"focusedOptionId\"\n                                        (keydown)=\"onFilterKeyDown($event)\"\n                                        (blur)=\"onFilterBlur($event)\"\n                                    />\n                                    <SearchIcon *ngIf=\"!filterIconTemplate\" [styleClass]=\"'p-dropdown-filter-icon'\" />\n                                    <span *ngIf=\"filterIconTemplate\" class=\"p-dropdown-filter-icon\">\n                                        <ng-template *ngTemplateOutlet=\"filterIconTemplate\"></ng-template>\n                                    </span>\n                                </div>\n                            </ng-template>\n                        </div>\n                        <div class=\"p-dropdown-items-wrapper\" [style.max-height]=\"virtualScroll ? 'auto' : scrollHeight || 'auto'\">\n                            <p-scroller\n                                *ngIf=\"virtualScroll\"\n                                #scroller\n                                [items]=\"visibleOptions()\"\n                                [style]=\"{ height: scrollHeight }\"\n                                [itemSize]=\"virtualScrollItemSize || _itemSize\"\n                                [autoSize]=\"true\"\n                                [lazy]=\"lazy\"\n                                (onLazyLoad)=\"onLazyLoad.emit($event)\"\n                                [options]=\"virtualScrollOptions\"\n                            >\n                                <ng-template pTemplate=\"content\" let-items let-scrollerOptions=\"options\">\n                                    <ng-container *ngTemplateOutlet=\"buildInItems; context: { $implicit: items, options: scrollerOptions }\"></ng-container>\n                                </ng-template>\n                                <ng-container *ngIf=\"loaderTemplate\">\n                                    <ng-template pTemplate=\"loader\" let-scrollerOptions=\"options\">\n                                        <ng-container *ngTemplateOutlet=\"loaderTemplate; context: { options: scrollerOptions }\"></ng-container>\n                                    </ng-template>\n                                </ng-container>\n                            </p-scroller>\n                            <ng-container *ngIf=\"!virtualScroll\">\n                                <ng-container *ngTemplateOutlet=\"buildInItems; context: { $implicit: visibleOptions(), options: {} }\"></ng-container>\n                            </ng-container>\n\n                            <ng-template #buildInItems let-items let-scrollerOptions=\"options\">\n                                <ul #items [attr.id]=\"id + '_list'\" class=\"p-dropdown-items\" [ngClass]=\"scrollerOptions.contentStyleClass\" [style]=\"scrollerOptions.contentStyle\" role=\"listbox\">\n                                    <ng-template ngFor let-option [ngForOf]=\"items\" let-i=\"index\">\n                                        <ng-container *ngIf=\"option.group\">\n                                            <li class=\"p-dropdown-item-group\" [attr.id]=\"id + '_' + getOptionIndex(i, scrollerOptions)\" [ngStyle]=\"{ height: scrollerOptions.itemSize + 'px' }\" role=\"option\">\n                                                <span *ngIf=\"!groupTemplate\">{{ getOptionGroupLabel(option.optionGroup) }}</span>\n                                                <ng-container *ngTemplateOutlet=\"groupTemplate; context: { $implicit: option.optionGroup }\"></ng-container>\n                                            </li>\n                                        </ng-container>\n                                        <ng-container *ngIf=\"!option.group\">\n                                            <p-dropdownItem\n                                                [id]=\"id + '_' + getOptionIndex(i, scrollerOptions)\"\n                                                [option]=\"option\"\n                                                [selected]=\"isSelected(option)\"\n                                                [label]=\"getOptionLabel(option)\"\n                                                [disabled]=\"isOptionDisabled(option)\"\n                                                [template]=\"itemTemplate\"\n                                                [focused]=\"focusedOptionIndex() === getOptionIndex(i, scrollerOptions)\"\n                                                [ariaPosInset]=\"getAriaPosInset(getOptionIndex(i, scrollerOptions))\"\n                                                [ariaSetSize]=\"ariaSetSize\"\n                                                (onClick)=\"onOptionSelect($event, option)\"\n                                                (onMouseEnter)=\"onOptionMouseEnter($event, getOptionIndex(i, scrollerOptions))\"\n                                            ></p-dropdownItem>\n                                        </ng-container>\n                                    </ng-template>\n\n                                    <li *ngIf=\"filterValue && isEmpty()\" class=\"p-dropdown-empty-message\" [ngStyle]=\"{ height: scrollerOptions.itemSize + 'px' }\">\n                                        <ng-container *ngIf=\"!emptyFilterTemplate && !emptyTemplate; else emptyFilter\">\n                                            {{ emptyFilterMessageLabel }}\n                                        </ng-container>\n                                        <ng-container #emptyFilter *ngTemplateOutlet=\"emptyFilterTemplate || emptyTemplate\"></ng-container>\n                                    </li>\n                                    <li *ngIf=\"!filterValue && isEmpty()\" class=\"p-dropdown-empty-message\" [ngStyle]=\"{ height: scrollerOptions.itemSize + 'px' }\">\n                                        <ng-container *ngIf=\"!emptyTemplate; else empty\">\n                                            {{ emptyMessageLabel }}\n                                        </ng-container>\n                                        <ng-container #empty *ngTemplateOutlet=\"emptyTemplate\"></ng-container>\n                                    </li>\n                                </ul>\n                            </ng-template>\n                        </div>\n                        <ng-container *ngTemplateOutlet=\"footerTemplate\"></ng-container>\n                        <span\n                            #lastHiddenFocusableEl\n                            role=\"presentation\"\n                            [attr.aria-hidden]=\"true\"\n                            class=\"p-hidden-accessible p-hidden-focusable\"\n                            [attr.tabindex]=\"0\"\n                            (focus)=\"onLastHiddenFocus($event)\"\n                            [attr.data-p-hidden-accessible]=\"true\"\n                            [attr.data-p-hidden-focusable]=\"true\"\n                        ></span>\n                    </div>\n                </ng-template>\n            </p-overlay>\n        </div>\n    `, host: {\n                        class: 'p-element p-inputwrapper',\n                        '[class.p-inputwrapper-filled]': 'filled',\n                        '[class.p-inputwrapper-focus]': 'focused || overlayVisible'\n                    }, providers: [DROPDOWN_VALUE_ACCESSOR], changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.None, styles: [\"@layer primeng{.p-dropdown{display:inline-flex;cursor:pointer;position:relative;-webkit-user-select:none;user-select:none}.p-dropdown-clear-icon{position:absolute;top:50%;margin-top:-.5rem}.p-dropdown-trigger{display:flex;align-items:center;justify-content:center;flex-shrink:0}.p-dropdown-label{display:block;white-space:nowrap;overflow:hidden;flex:1 1 auto;width:1%;text-overflow:ellipsis;cursor:pointer}.p-dropdown-label-empty{overflow:hidden;opacity:0}input.p-dropdown-label{cursor:default}.p-dropdown .p-dropdown-panel{min-width:100%}.p-dropdown-items-wrapper{overflow:auto}.p-dropdown-item{cursor:pointer;font-weight:400;white-space:nowrap;position:relative;overflow:hidden}.p-dropdown-item-group{cursor:auto}.p-dropdown-items{margin:0;padding:0;list-style-type:none}.p-dropdown-filter{width:100%}.p-dropdown-filter-container{position:relative}.p-dropdown-filter-icon{position:absolute;top:50%;margin-top:-.5rem}.p-fluid .p-dropdown{display:flex}.p-fluid .p-dropdown .p-dropdown-label{width:1%}}\\n\"] }]\n        }], ctorParameters: () => [{ type: i0.ElementRef }, { type: i0.Renderer2 }, { type: i0.ChangeDetectorRef }, { type: i0.NgZone }, { type: i3.FilterService }, { type: i3.PrimeNGConfig }], propDecorators: { id: [{\n                type: Input\n            }], scrollHeight: [{\n                type: Input\n            }], filter: [{\n                type: Input\n            }], name: [{\n                type: Input\n            }], style: [{\n                type: Input\n            }], panelStyle: [{\n                type: Input\n            }], styleClass: [{\n                type: Input\n            }], panelStyleClass: [{\n                type: Input\n            }], readonly: [{\n                type: Input\n            }], required: [{\n                type: Input\n            }], editable: [{\n                type: Input\n            }], appendTo: [{\n                type: Input\n            }], tabindex: [{\n                type: Input\n            }], placeholder: [{\n                type: Input\n            }], filterPlaceholder: [{\n                type: Input\n            }], filterLocale: [{\n                type: Input\n            }], inputId: [{\n                type: Input\n            }], dataKey: [{\n                type: Input\n            }], filterBy: [{\n                type: Input\n            }], filterFields: [{\n                type: Input\n            }], autofocus: [{\n                type: Input\n            }], resetFilterOnHide: [{\n                type: Input\n            }], dropdownIcon: [{\n                type: Input\n            }], optionLabel: [{\n                type: Input\n            }], optionValue: [{\n                type: Input\n            }], optionDisabled: [{\n                type: Input\n            }], optionGroupLabel: [{\n                type: Input\n            }], optionGroupChildren: [{\n                type: Input\n            }], autoDisplayFirst: [{\n                type: Input\n            }], group: [{\n                type: Input\n            }], showClear: [{\n                type: Input\n            }], emptyFilterMessage: [{\n                type: Input\n            }], emptyMessage: [{\n                type: Input\n            }], lazy: [{\n                type: Input\n            }], virtualScroll: [{\n                type: Input\n            }], virtualScrollItemSize: [{\n                type: Input\n            }], virtualScrollOptions: [{\n                type: Input\n            }], overlayOptions: [{\n                type: Input\n            }], ariaFilterLabel: [{\n                type: Input\n            }], ariaLabel: [{\n                type: Input\n            }], ariaLabelledBy: [{\n                type: Input\n            }], filterMatchMode: [{\n                type: Input\n            }], maxlength: [{\n                type: Input\n            }], tooltip: [{\n                type: Input\n            }], tooltipPosition: [{\n                type: Input\n            }], tooltipPositionStyle: [{\n                type: Input\n            }], tooltipStyleClass: [{\n                type: Input\n            }], focusOnHover: [{\n                type: Input\n            }], selectOnFocus: [{\n                type: Input\n            }], autoOptionFocus: [{\n                type: Input\n            }], autofocusFilter: [{\n                type: Input\n            }], disabled: [{\n                type: Input\n            }], itemSize: [{\n                type: Input\n            }], autoZIndex: [{\n                type: Input\n            }], baseZIndex: [{\n                type: Input\n            }], showTransitionOptions: [{\n                type: Input\n            }], hideTransitionOptions: [{\n                type: Input\n            }], filterValue: [{\n                type: Input\n            }], options: [{\n                type: Input\n            }], onChange: [{\n                type: Output\n            }], onFilter: [{\n                type: Output\n            }], onFocus: [{\n                type: Output\n            }], onBlur: [{\n                type: Output\n            }], onClick: [{\n                type: Output\n            }], onShow: [{\n                type: Output\n            }], onHide: [{\n                type: Output\n            }], onClear: [{\n                type: Output\n            }], onLazyLoad: [{\n                type: Output\n            }], containerViewChild: [{\n                type: ViewChild,\n                args: ['container']\n            }], filterViewChild: [{\n                type: ViewChild,\n                args: ['filter']\n            }], focusInputViewChild: [{\n                type: ViewChild,\n                args: ['focusInput']\n            }], editableInputViewChild: [{\n                type: ViewChild,\n                args: ['editableInput']\n            }], itemsViewChild: [{\n                type: ViewChild,\n                args: ['items']\n            }], scroller: [{\n                type: ViewChild,\n                args: ['scroller']\n            }], overlayViewChild: [{\n                type: ViewChild,\n                args: ['overlay']\n            }], firstHiddenFocusableElementOnOverlay: [{\n                type: ViewChild,\n                args: ['firstHiddenFocusableEl']\n            }], lastHiddenFocusableElementOnOverlay: [{\n                type: ViewChild,\n                args: ['lastHiddenFocusableEl']\n            }], templates: [{\n                type: ContentChildren,\n                args: [PrimeTemplate]\n            }] } });\nclass DropdownModule {\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.0.5\", ngImport: i0, type: DropdownModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\n    static ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"17.0.5\", ngImport: i0, type: DropdownModule, declarations: [Dropdown, DropdownItem], imports: [CommonModule, OverlayModule, SharedModule, TooltipModule, RippleModule, ScrollerModule, AutoFocusModule, TimesIcon, ChevronDownIcon, SearchIcon], exports: [Dropdown, OverlayModule, SharedModule, ScrollerModule] });\n    static ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"17.0.5\", ngImport: i0, type: DropdownModule, imports: [CommonModule, OverlayModule, SharedModule, TooltipModule, RippleModule, ScrollerModule, AutoFocusModule, TimesIcon, ChevronDownIcon, SearchIcon, OverlayModule, SharedModule, ScrollerModule] });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.0.5\", ngImport: i0, type: DropdownModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [CommonModule, OverlayModule, SharedModule, TooltipModule, RippleModule, ScrollerModule, AutoFocusModule, TimesIcon, ChevronDownIcon, SearchIcon],\n                    exports: [Dropdown, OverlayModule, SharedModule, ScrollerModule],\n                    declarations: [Dropdown, DropdownItem]\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { DROPDOWN_VALUE_ACCESSOR, Dropdown, DropdownItem, DropdownModule };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}