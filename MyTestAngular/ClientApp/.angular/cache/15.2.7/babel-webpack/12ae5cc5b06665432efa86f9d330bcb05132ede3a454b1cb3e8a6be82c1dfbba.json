{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/common\";\nfunction ApplicationTypeComponent_table_2_tr_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const appType_r2 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(appType_r2.id);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(appType_r2.name);\n  }\n}\nfunction ApplicationTypeComponent_table_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"table\", 1)(1, \"thead\")(2, \"tr\")(3, \"th\");\n    i0.ɵɵtext(4, \"Date\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"th\");\n    i0.ɵɵtext(6, \"Temp. (C)\");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(7, \"tbody\");\n    i0.ɵɵtemplate(8, ApplicationTypeComponent_table_2_tr_8_Template, 5, 2, \"tr\", 2);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(8);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.appTypes);\n  }\n}\nexport class ApplicationTypeComponent {\n  constructor(http, baseUrl) {\n    this.appTypes = [];\n    http.get(baseUrl + 'applicationtype').subscribe(result => {\n      this.appTypes = result;\n    }, error => console.error(error));\n  }\n}\nApplicationTypeComponent.ɵfac = function ApplicationTypeComponent_Factory(t) {\n  return new (t || ApplicationTypeComponent)(i0.ɵɵdirectiveInject(i1.HttpClient), i0.ɵɵdirectiveInject('BASE_URL'));\n};\nApplicationTypeComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ApplicationTypeComponent,\n  selectors: [[\"applicationtype-data\"]],\n  decls: 3,\n  vars: 1,\n  consts: [[\"class\", \"table table-striped\", \"aria-labelledby\", \"tableLabel\", 4, \"ngIf\"], [\"aria-labelledby\", \"tableLabel\", 1, \"table\", \"table-striped\"], [4, \"ngFor\", \"ngForOf\"]],\n  template: function ApplicationTypeComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"h1\");\n      i0.ɵɵtext(1, \"Application TYPE\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(2, ApplicationTypeComponent_table_2_Template, 9, 1, \"table\", 0);\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", ctx.appTypes);\n    }\n  },\n  dependencies: [i2.NgForOf, i2.NgIf],\n  encapsulation: 2\n});","map":{"version":3,"mappings":";;;;;IAYIA,0BAAqC;IAC/BA,YAAgB;IAAAA,iBAAK;IACzBA,0BAAI;IAAAA,YAAkB;IAAAA,iBAAK;;;;IADvBA,eAAgB;IAAhBA,mCAAgB;IAChBA,eAAkB;IAAlBA,qCAAkB;;;;;IAV5BA,gCAAiF;IAGvEA,oBAAI;IAAAA,iBAAK;IACbA,0BAAI;IAAAA,yBAAS;IAAAA,iBAAK;IAGtBA,6BAAO;IACLA,+EAGK;IACPA,iBAAQ;;;;IAJkBA,eAAW;IAAXA,yCAAW;;;ACJvC,OAAM,MAAOC,wBAAwB;EAGnCC,YAAYC,IAAgB,EAAsBC,OAAe;IAF1D,aAAQ,GAAsB,EAAE;IAGrCD,IAAI,CAACE,GAAG,CAAoBD,OAAO,GAAG,iBAAiB,CAAC,CAACE,SAAS,CAACC,MAAM,IAAG;MAC1E,IAAI,CAACC,QAAQ,GAAGD,MAAM;IACxB,CAAC,EAAEE,KAAK,IAAIC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC,CAAC;EACnC;;AAPWR,wBAAwB;mBAAxBA,wBAAwB,4DAGG,UAAU;AAAA;AAHrCA,wBAAwB;QAAxBA,wBAAwB;EAAAU;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MDRrCf,0BAAI;MAAAA,gCAAgB;MAAAA,iBAAK;MAIzBA,6EAaQ;;;MAbyDA,eAAc;MAAdA,mCAAc","names":["i0","ApplicationTypeComponent","constructor","http","baseUrl","get","subscribe","result","appTypes","error","console","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["C:\\Users\\sikri\\source\\repos\\MyTestAngular\\MyTestAngular\\ClientApp\\src\\app\\applicationtype\\applicationtype.component.html","C:\\Users\\sikri\\source\\repos\\MyTestAngular\\MyTestAngular\\ClientApp\\src\\app\\applicationtype\\applicationtype.component.ts"],"sourcesContent":["<h1>Application TYPE</h1>\r\n\r\n\r\n\r\n<table class='table table-striped' aria-labelledby=\"tableLabel\" *ngIf=\"appTypes\">\r\n  <thead>\r\n    <tr>\r\n      <th>Date</th>\r\n      <th>Temp. (C)</th>\r\n    </tr>\r\n  </thead>\r\n  <tbody>\r\n    <tr *ngFor=\"let appType of appTypes\">\r\n      <td>{{ appType.id }}</td>\r\n      <td>{{ appType.name }}</td>\r\n    </tr>\r\n  </tbody>\r\n</table>\r\n","import { Component, Inject } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { ApplicationType } from '../modal/applicationtype.mode';\r\n\r\n@Component({\r\n  selector: 'applicationtype-data',\r\n  templateUrl: './applicationtype.component.html'\r\n})\r\nexport class ApplicationTypeComponent {\r\n  public appTypes: ApplicationType[] = [];\r\n\r\n  constructor(http: HttpClient, @Inject('BASE_URL') baseUrl: string){\r\n    http.get<ApplicationType[]>(baseUrl + 'applicationtype').subscribe(result => {\r\n      this.appTypes = result;\r\n    }, error => console.error(error));\r\n  }\r\n}\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}