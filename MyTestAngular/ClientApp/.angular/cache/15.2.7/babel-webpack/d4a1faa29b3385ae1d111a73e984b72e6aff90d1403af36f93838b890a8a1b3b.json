{"ast":null,"code":"import { __decorate, __param } from \"tslib\";\nimport { Component, Inject } from '@angular/core';\nlet HomeComponent = class HomeComponent {\n  constructor(http, baseUrl) {\n    this.loading = false;\n    this.products = [];\n    this.baseUrl = baseUrl;\n    this.http = http;\n    this.getProduct();\n  }\n  getProduct() {\n    this.http.get(this.baseUrl + 'Product').subscribe(result => {\n      this.products = result;\n      this.loading = true;\n    }, error => console.error(error));\n  }\n};\nHomeComponent = __decorate([Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html'\n}), __param(1, Inject('BASE_URL'))], HomeComponent);\nexport { HomeComponent };","map":{"version":3,"mappings":";AACA,SAASA,SAAS,EAAEC,MAAM,QAAQ,eAAe;AAO1C,IAAMC,aAAa,GAAnB,MAAMA,aAAa;EAMxBC,YAAYC,IAAgB,EAAsBC,OAAe;IAHjE,YAAO,GAAY,KAAK;IACxB,aAAQ,GAAc,EAAE;IAGtB,IAAI,CAACA,OAAO,GAAGA,OAAO;IACtB,IAAI,CAACD,IAAI,GAAGA,IAAI;IAChB,IAAI,CAACE,UAAU,EAAE;EACnB;EAEAA,UAAU;IACR,IAAI,CAACF,IAAI,CAACG,GAAG,CAAY,IAAI,CAACF,OAAO,GAAG,SAAS,CAAC,CAACG,SAAS,CAACC,MAAM,IAAG;MACpE,IAAI,CAACC,QAAQ,GAAGD,MAAM;MACtB,IAAI,CAACE,OAAO,GAAG,IAAI;IACrB,CAAC,EAAEC,KAAK,IAAIC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC,CAAC;EACnC;CACD;AAlBYV,aAAa,eAJzBF,SAAS,CAAC;EACTc,QAAQ,EAAE,UAAU;EACpBC,WAAW,EAAE;CACd,CAAC,EAO+BC,iBAAM,CAAC,UAAU,CAAC,IANtCd,aAAa,CAkBzB;SAlBYA,aAAa","names":["Component","Inject","HomeComponent","constructor","http","baseUrl","getProduct","get","subscribe","result","products","loading","error","console","selector","templateUrl","__param"],"sourceRoot":"","sources":["C:\\Users\\sikri\\source\\repos\\MyTestAngular\\MyTestAngular\\ClientApp\\src\\app\\home\\home.component.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\r\nimport { Component, Inject } from '@angular/core';\r\nimport { Product } from '../modal/product.mode';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n})\r\nexport class HomeComponent {\r\n  baseUrl: string;\r\n  http: HttpClient;\r\n  loading: boolean = false;\r\n  products: Product[] = [];\r\n\r\n  constructor(http: HttpClient, @Inject('BASE_URL') baseUrl: string) {\r\n    this.baseUrl = baseUrl;\r\n    this.http = http;\r\n    this.getProduct();\r\n  }\r\n\r\n  getProduct() {\r\n    this.http.get<Product[]>(this.baseUrl + 'Product').subscribe(result => {\r\n      this.products = result;\r\n      this.loading = true;\r\n    }, error => console.error(error));\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}