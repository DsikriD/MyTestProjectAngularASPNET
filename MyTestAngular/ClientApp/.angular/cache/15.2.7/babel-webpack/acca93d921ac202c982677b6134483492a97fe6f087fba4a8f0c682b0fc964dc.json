{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/common\";\nfunction ApplicationTypeComponent_table_9_tr_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\")(6, \"button\", 8);\n    i0.ɵɵelement(7, \"i\", 9);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const appType_r2 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(appType_r2.id);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(appType_r2.name);\n  }\n}\nfunction ApplicationTypeComponent_table_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"table\", 6)(1, \"thead\")(2, \"tr\")(3, \"th\");\n    i0.ɵɵtext(4, \"Id\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"th\");\n    i0.ɵɵtext(6, \"Name\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(7, \"th\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(8, \"tbody\");\n    i0.ɵɵtemplate(9, ApplicationTypeComponent_table_9_tr_9_Template, 8, 2, \"tr\", 7);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(9);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.appTypes);\n  }\n}\nexport class ApplicationTypeComponent {\n  constructor(http, baseUrl) {\n    this.appTypes = [];\n    this.baseUrl = \"\";\n    this.http = http;\n    this.baseUrl = baseUrl;\n    http.get(baseUrl + 'Type').subscribe(result => {\n      this.appTypes = result;\n    });\n  }\n}\nApplicationTypeComponent.ɵfac = function ApplicationTypeComponent_Factory(t) {\n  return new (t || ApplicationTypeComponent)(i0.ɵɵdirectiveInject(i1.HttpClient), i0.ɵɵdirectiveInject('BASE_URL'));\n};\nApplicationTypeComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ApplicationTypeComponent,\n  selectors: [[\"applicationtype-data\"]],\n  decls: 10,\n  vars: 1,\n  consts: [[1, \"row\"], [1, \"col-6\", \"border\", \"border-danger\"], [1, \"col-6\", \"border\", \"border-danger\", \"text-end\"], [1, \"btn\", \"btn-primary\", \"form-control\", \"mt-2\"], [1, \"fa\", \"fa-plus\"], [\"class\", \"table table-striped\", \"aria-labelledby\", \"tableLabel\", 4, \"ngIf\"], [\"aria-labelledby\", \"tableLabel\", 1, \"table\", \"table-striped\"], [4, \"ngFor\", \"ngForOf\"], [1, \"btn\", \"btn-danger\"], [1, \"fa\", \"fa-trash\"]],\n  template: function ApplicationTypeComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"h1\");\n      i0.ɵɵtext(3, \"\\u0422\\u0438\\u043F\\u044B\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(4, \"div\", 2)(5, \"button\", 3)(6, \"span\")(7, \"i\", 4);\n      i0.ɵɵtext(8, \"\\u00A0\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u0442\\u0438\\u043F\");\n      i0.ɵɵelementEnd()()()()();\n      i0.ɵɵtemplate(9, ApplicationTypeComponent_table_9_Template, 10, 1, \"table\", 5);\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(9);\n      i0.ɵɵproperty(\"ngIf\", ctx.appTypes);\n    }\n  },\n  dependencies: [i2.NgForOf, i2.NgIf],\n  encapsulation: 2\n});","map":{"version":3,"mappings":";;;;;IAsBIA,0BAAqC;IAC/BA,YAAgB;IAAAA,iBAAK;IACzBA,0BAAI;IAAAA,YAAkB;IAAAA,iBAAK;IAC3BA,0BAAI;IAEAA,uBAA2B;IAC7BA,iBAAS;;;;IALPA,eAAgB;IAAhBA,mCAAgB;IAChBA,eAAkB;IAAlBA,qCAAkB;;;;;IAX5BA,gCAAiF;IAGvEA,kBAAE;IAAAA,iBAAK;IACXA,0BAAI;IAAAA,oBAAI;IAAAA,iBAAK;IACbA,qBAAS;IACXA,iBAAK;IAEPA,6BAAO;IACLA,+EAQK;IACPA,iBAAQ;;;;IATkBA,eAAW;IAAXA,yCAAW;;;ACdvC,OAAM,MAAOC,wBAAwB;EAKnCC,YAAYC,IAAgB,EAAsBC,OAAe;IAJ1D,aAAQ,GAAsB,EAAE;IAEvC,YAAO,GAAW,EAAE;IAGlB,IAAI,CAACD,IAAI,GAAGA,IAAI;IAChB,IAAI,CAACC,OAAO,GAAGA,OAAO;IACtBD,IAAI,CAACE,GAAG,CAAoBD,OAAO,GAAG,MAAM,CAAC,CAACE,SAAS,CAACC,MAAM,IAAG;MAC/D,IAAI,CAACC,QAAQ,GAAGD,MAAM;IACxB,CAAC,CAAC;EACJ;;AAXWN,wBAAwB;mBAAxBA,wBAAwB,4DAKG,UAAU;AAAA;AALrCA,wBAAwB;QAAxBA,wBAAwB;EAAAQ;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MDRrCb,8BAAiB;MAGTA,wCAAI;MAAAA,iBAAK;MAEfA,8BAAiD;MAEnBA,yFAAkB;MAAAA,iBAAI;MAMtDA,8EAmBQ;;;MAnByDA,eAAc;MAAdA,mCAAc","names":["i0","ApplicationTypeComponent","constructor","http","baseUrl","get","subscribe","result","appTypes","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["C:\\Users\\sikri\\source\\repos\\MyTestAngular\\MyTestAngular\\ClientApp\\src\\app\\applicationtype\\applicationtype.component.html","C:\\Users\\sikri\\source\\repos\\MyTestAngular\\MyTestAngular\\ClientApp\\src\\app\\applicationtype\\applicationtype.component.ts"],"sourcesContent":["<div class=\"row\">\r\n\r\n  <div class=\"col-6 border border-danger\">\r\n    <h1>Типы</h1>\r\n  </div>\r\n  <div class=\"col-6 border border-danger text-end\">\r\n    <button class=\"btn btn-primary form-control mt-2\">\r\n    <span><i class=\"fa fa-plus\">&nbsp;Добавить тип</i> </span>\r\n    </button>\r\n  </div>\r\n</div>\r\n\r\n\r\n<table class='table table-striped' aria-labelledby=\"tableLabel\" *ngIf=\"appTypes\">\r\n  <thead>\r\n    <tr>\r\n      <th>Id</th>\r\n      <th>Name</th>\r\n      <th></th>\r\n    </tr>\r\n  </thead>\r\n  <tbody>\r\n    <tr *ngFor=\"let appType of appTypes\">\r\n      <td>{{ appType.id }}</td>\r\n      <td>{{ appType.name }}</td>\r\n      <td>\r\n        <button class=\"btn btn-danger\">\r\n          <i class=\"fa fa-trash\"></i>\r\n        </button>\r\n      </td>\r\n    </tr>\r\n  </tbody>\r\n</table>\r\n","import { Component, Inject } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { ApplicationType } from '../modal/applicationtype.mode';\r\n\r\n@Component({\r\n  selector: 'applicationtype-data',\r\n  templateUrl: './applicationtype.component.html'\r\n})\r\nexport class ApplicationTypeComponent {\r\n  public appTypes: ApplicationType[] = [];\r\n  http: HttpClient;\r\n  baseUrl: string = \"\";\r\n\r\n  constructor(http: HttpClient, @Inject('BASE_URL') baseUrl: string) {\r\n    this.http = http;\r\n    this.baseUrl = baseUrl;\r\n    http.get<ApplicationType[]>(baseUrl + 'Type').subscribe(result => {\r\n      this.appTypes = result;\r\n    });\r\n  }\r\n}\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}