{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class ApplicationTypeComponent {\n  constructor(http, baseUrl) {\n    this.forecasts = [];\n    console.log(http.head + \" | \" + baseUrl);\n    w;\n  }\n}\nApplicationTypeComponent.ɵfac = function ApplicationTypeComponent_Factory(t) {\n  return new (t || ApplicationTypeComponent)(i0.ɵɵdirectiveInject(i1.HttpClient), i0.ɵɵdirectiveInject('BASE_URL'));\n};\nApplicationTypeComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ApplicationTypeComponent,\n  selectors: [[\"applicationtype-data\"]],\n  decls: 2,\n  vars: 0,\n  template: function ApplicationTypeComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"h1\");\n      i0.ɵɵtext(1, \"Application TYPE\");\n      i0.ɵɵelementEnd();\n    }\n  },\n  encapsulation: 2\n});","map":{"version":3,"mappings":";;AAQA,OAAM,MAAOA,wBAAwB;EAGnCC,YAAYC,IAAgB,EAAsBC,OAAe;IAF1D,cAAS,GAAsB,EAAE;IAGtCC,OAAO,CAACC,GAAG,CAACH,IAAI,CAACI,IAAI,GAAG,KAAK,GAAGH,OAAO,CAAC;IAACI,CAAC;EAC5C;;AALWP,wBAAwB;mBAAxBA,wBAAwB,4DAGG,UAAU;AAAA;AAHrCA,wBAAwB;QAAxBA,wBAAwB;EAAAQ;EAAAC;EAAAC;EAAAC;IAAA;MCRrCC,0BAAI;MAAAA,gCAAgB;MAAAA,iBAAK","names":["ApplicationTypeComponent","constructor","http","baseUrl","console","log","head","w","selectors","decls","vars","template","i0"],"sourceRoot":"","sources":["C:\\Users\\sikri\\source\\repos\\MyTestAngular\\MyTestAngular\\ClientApp\\src\\app\\applicationtype\\applicationtype.component.ts","C:\\Users\\sikri\\source\\repos\\MyTestAngular\\MyTestAngular\\ClientApp\\src\\app\\applicationtype\\applicationtype.component.html"],"sourcesContent":["import { Component, Inject } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { ApplicationType } from '../modal/applicationtype.mode';\r\n\r\n@Component({\r\n  selector: 'applicationtype-data',\r\n  templateUrl: './applicationtype.component.html'\r\n})\r\nexport class ApplicationTypeComponent {\r\n  public forecasts: ApplicationType[] = [];\r\n\r\n  constructor(http: HttpClient, @Inject('BASE_URL') baseUrl: string) {\r\n    console.log(http.head + \" | \" + baseUrl);w\r\n  }\r\n}\r\n\r\n\r\n","<h1>Application TYPE</h1>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}