{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"../loading/loading.component\";\nimport * as i4 from \"./addtype/addtype.component\";\nimport * as i5 from \"./edittype/edittype.component\";\nfunction ApplicationTypeComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 2);\n    i0.ɵɵelement(1, \"app-loading\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ApplicationTypeComponent_div_1_table_8_tr_10_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\", 12)(6, \"app-edittype\", 13);\n    i0.ɵɵlistener(\"typeForEdit\", function ApplicationTypeComponent_div_1_table_8_tr_10_Template_app_edittype_typeForEdit_6_listener($event) {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r5 = i0.ɵɵnextContext(3);\n      return i0.ɵɵresetView(ctx_r5.editType($event));\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(7, \"td\", 12)(8, \"button\", 14);\n    i0.ɵɵlistener(\"click\", function ApplicationTypeComponent_div_1_table_8_tr_10_Template_button_click_8_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r6);\n      const type_r4 = restoredCtx.$implicit;\n      const ctx_r7 = i0.ɵɵnextContext(3);\n      return i0.ɵɵresetView(ctx_r7.deleteType(type_r4.id));\n    });\n    i0.ɵɵelement(9, \"i\", 15);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const type_r4 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(type_r4.id);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(type_r4.name);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"type\", type_r4);\n  }\n}\nfunction ApplicationTypeComponent_div_1_table_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"table\", 10)(1, \"thead\")(2, \"tr\")(3, \"th\");\n    i0.ɵɵtext(4, \"Id\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"th\");\n    i0.ɵɵtext(6, \"Name\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(7, \"th\")(8, \"th\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(9, \"tbody\");\n    i0.ɵɵtemplate(10, ApplicationTypeComponent_div_1_table_8_tr_10_Template, 10, 3, \"tr\", 11);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(10);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r2.appTypes);\n  }\n}\nfunction ApplicationTypeComponent_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r9 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\")(1, \"div\", 3)(2, \"div\", 4)(3, \"h1\", 5);\n    i0.ɵɵtext(4, \"\\u0422\\u0438\\u043F\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(5, \"div\", 6)(6, \"app-addtype\", 7);\n    i0.ɵɵlistener(\"typeForAdd\", function ApplicationTypeComponent_div_1_Template_app_addtype_typeForAdd_6_listener($event) {\n      i0.ɵɵrestoreView(_r9);\n      const ctx_r8 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r8.addType($event));\n    });\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(7, \"div\", 8);\n    i0.ɵɵtemplate(8, ApplicationTypeComponent_div_1_table_8_Template, 11, 1, \"table\", 9);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(8);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.loading);\n  }\n}\nexport class ApplicationTypeComponent {\n  constructor(http, baseUrl) {\n    this.appTypes = [];\n    this.baseUrl = \"\";\n    this.loading = false;\n    this.http = http;\n    this.baseUrl = baseUrl;\n    this.getType();\n  }\n  getType() {\n    this.http.get(this.baseUrl + 'Type').subscribe(result => {\n      this.appTypes = result;\n      this.loading = true;\n    });\n  }\n  deleteType(id) {\n    this.loading = false;\n    this.http.delete(this.baseUrl + 'Type/' + id).subscribe(result => {\n      this.getType();\n    });\n  }\n  editType(type) {\n    this.loading = false;\n    return this.http.put(this.baseUrl + 'Type/', type).subscribe(result => {\n      this.getType();\n    });\n  }\n  addType(type) {\n    this.loading = false;\n    return this.http.post(this.baseUrl + 'Type/', type).subscribe(result => {\n      this.getType();\n    });\n  }\n}\nApplicationTypeComponent.ɵfac = function ApplicationTypeComponent_Factory(t) {\n  return new (t || ApplicationTypeComponent)(i0.ɵɵdirectiveInject(i1.HttpClient), i0.ɵɵdirectiveInject('BASE_URL'));\n};\nApplicationTypeComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ApplicationTypeComponent,\n  selectors: [[\"applicationtype-data\"]],\n  decls: 2,\n  vars: 2,\n  consts: [[\"class\", \"d-flex justify-content-center\", 4, \"ngIf\"], [4, \"ngIf\"], [1, \"d-flex\", \"justify-content-center\"], [1, \"row\", \"ms-1\", \"me-1\", \"mb-2\"], [1, \"col-6\"], [1, \"font-weight-bold\"], [1, \"col-6\", \"text-end\"], [3, \"typeForAdd\"], [1, \"row\", \"border\", \"border-dark\", \"ms-2\", \"me-2\", \"mb-2\"], [\"class\", \"table table-striped\", \"aria-labelledby\", \"tableLabel\", 4, \"ngIf\"], [\"aria-labelledby\", \"tableLabel\", 1, \"table\", \"table-striped\"], [4, \"ngFor\", \"ngForOf\"], [1, \"text-end\"], [3, \"type\", \"typeForEdit\"], [\"type\", \"button\", 1, \"btn\", \"btn-outline-danger\", 3, \"click\"], [\"aria-hidden\", \"true\", 1, \"fa\", \"fa-trash\"]],\n  template: function ApplicationTypeComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, ApplicationTypeComponent_div_0_Template, 2, 0, \"div\", 0);\n      i0.ɵɵtemplate(1, ApplicationTypeComponent_div_1_Template, 9, 1, \"div\", 1);\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngIf\", !ctx.loading);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.loading);\n    }\n  },\n  dependencies: [i2.NgForOf, i2.NgIf, i3.LoadingComponent, i4.AddtypeComponent, i5.EdittypeComponent],\n  encapsulation: 2\n});","map":{"version":3,"mappings":";;;;;;;;IACAA,8BAA4D;IAC1DA,8BAA2B;IAC7BA,iBAAM;;;;;;IAuBEA,0BAAkC;IAC5BA,YAAa;IAAAA,iBAAK;IACtBA,0BAAI;IAAAA,YAAe;IAAAA,iBAAK;IACxBA,8BAAqB;IACSA;MAAAA;MAAA;MAAA,OAAeA,sCAAgB;IAAA,EAAC;IAAEA,iBAAe;IAE/EA,8BAAqB;IACkCA;MAAA;MAAA;MAAA;MAAA,OAASA,4CAAmB;IAAA,EAAC;IAACA,wBAA8C;IAAAA,iBAAS;;;;IANxIA,eAAa;IAAbA,gCAAa;IACbA,eAAe;IAAfA,kCAAe;IAEHA,eAAa;IAAbA,8BAAa;;;;;IAdnCA,iCAAgF;IAGtEA,kBAAE;IAAAA,iBAAK;IACXA,0BAAI;IAAAA,oBAAI;IAAAA,iBAAK;IACbA,qBAAS;IAEXA,iBAAK;IAEPA,6BAAO;IACLA,yFASK;IACPA,iBAAQ;;;;IAVeA,gBAAW;IAAXA,yCAAW;;;;;;IArBxCA,2BAAqB;IAGcA,kCAAG;IAAAA,iBAAK;IAEvCA,8BAA4B;IACbA;MAAAA;MAAA;MAAA,OAAcA,qCAAe;IAAA,EAAC;IAACA,iBAAc;IAI9DA,8BAAmD;IACjDA,oFAqBQ;IACVA,iBAAM;;;;IAtBIA,eAAa;IAAbA,qCAAa;;;ACPzB,OAAM,MAAOC,wBAAwB;EAMnCC,YAAYC,IAAgB,EAAsBC,OAAe;IAL1D,aAAQ,GAAsB,EAAE;IAEvC,YAAO,GAAW,EAAE;IACpB,YAAO,GAAY,KAAK;IAGtB,IAAI,CAACD,IAAI,GAAGA,IAAI;IAChB,IAAI,CAACC,OAAO,GAAGA,OAAO;IACtB,IAAI,CAACC,OAAO,EAAE;EAChB;EAEAA,OAAO;IACL,IAAI,CAACF,IAAI,CAACG,GAAG,CAAoB,IAAI,CAACF,OAAO,GAAG,MAAM,CAAC,CAACG,SAAS,CAACC,MAAM,IAAG;MACzE,IAAI,CAACC,QAAQ,GAAGD,MAAM;MACtB,IAAI,CAACE,OAAO,GAAG,IAAI;IACrB,CAAC,CAAC;EACJ;EAEAC,UAAU,CAACC,EAAU;IACnB,IAAI,CAACF,OAAO,GAAG,KAAK;IACpB,IAAI,CAACP,IAAI,CAACU,MAAM,CAAkB,IAAI,CAACT,OAAO,GAAG,OAAO,GAAGQ,EAAE,CAAC,CAACL,SAAS,CAACC,MAAM,IAAG;MAChF,IAAI,CAACH,OAAO,EAAE;IAChB,CAAC,CAAC;EACJ;EAEAS,QAAQ,CAACC,IAAqB;IAC5B,IAAI,CAACL,OAAO,GAAG,KAAK;IACpB,OAAO,IAAI,CAACP,IAAI,CAACa,GAAG,CAAkB,IAAI,CAACZ,OAAO,GAAG,OAAO,EAAEW,IAAI,CAAC,CAACR,SAAS,CAACC,MAAM,IAAG;MACrF,IAAI,CAACH,OAAO,EAAE;IAChB,CAAC,CAAC;EACJ;EAEAY,OAAO,CAACF,IAAqB;IAC3B,IAAI,CAACL,OAAO,GAAG,KAAK;IACpB,OAAO,IAAI,CAACP,IAAI,CAACe,IAAI,CAAkB,IAAI,CAACd,OAAO,GAAG,OAAO,EAAEW,IAAI,CAAC,CAACR,SAAS,CAACC,MAAM,IAAG;MACtF,IAAI,CAACH,OAAO,EAAE;IAChB,CAAC,CAAC;EACJ;;AAtCWJ,wBAAwB;mBAAxBA,wBAAwB,4DAMG,UAAU;AAAA;AANrCA,wBAAwB;QAAxBA,wBAAwB;EAAAkB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MDRrCvB,yEAEM;MAENA,yEAmCM;;;MAvCAA,mCAAc;MAIdA,eAAa;MAAbA,kCAAa","names":["i0","ApplicationTypeComponent","constructor","http","baseUrl","getType","get","subscribe","result","appTypes","loading","deleteType","id","delete","editType","type","put","addType","post","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["C:\\Users\\sikri\\source\\repos\\MyTestAngular\\MyTestAngular\\ClientApp\\src\\app\\applicationtype\\applicationtype.component.html","C:\\Users\\sikri\\source\\repos\\MyTestAngular\\MyTestAngular\\ClientApp\\src\\app\\applicationtype\\applicationtype.component.ts"],"sourcesContent":["\r\n<div *ngIf=\"!loading\" class=\"d-flex justify-content-center\">\r\n  <app-loading></app-loading>\r\n</div>\r\n\r\n<div *ngIf=\"loading\">\r\n  <div class=\"row ms-1 me-1 mb-2\">\r\n    <div class=\"col-6\">\r\n      <h1 class=\"font-weight-bold\">Тип</h1>\r\n    </div>\r\n    <div class=\"col-6 text-end\">\r\n      <app-addtype (typeForAdd)=\"addType($event)\"></app-addtype>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"row border border-dark ms-2 me-2 mb-2\">\r\n    <table *ngIf=\"loading\" class='table table-striped' aria-labelledby=\"tableLabel\">\r\n      <thead>\r\n        <tr>\r\n          <th>Id</th>\r\n          <th>Name</th>\r\n          <th></th>\r\n          <th></th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr *ngFor=\"let type of appTypes\">\r\n          <td>{{ type.id }}</td>\r\n          <td>{{ type.name }}</td>\r\n          <td class=\"text-end\">\r\n            <app-edittype [type]=\"type\" (typeForEdit)=\"editType($event)\" ></app-edittype>\r\n          </td>\r\n          <td class=\"text-end\">\r\n            <button type=\"button\" class=\"btn btn-outline-danger\" (click)=\"deleteType(type.id)\"><i class=\"fa fa-trash\" aria-hidden=\"true\"></i></button>\r\n          </td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n  </div>\r\n\r\n</div>\r\n\r\n","import { Component, Inject } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { ApplicationType } from '../modal/applicationtype.mode';\r\n\r\n\r\n@Component({\r\n  selector: 'applicationtype-data',\r\n  templateUrl: './applicationtype.component.html'\r\n})\r\nexport class ApplicationTypeComponent {\r\n  public appTypes: ApplicationType[] = [];\r\n  http: HttpClient;\r\n  baseUrl: string = \"\";\r\n  loading: boolean = false;\r\n\r\n  constructor(http: HttpClient, @Inject('BASE_URL') baseUrl: string) {\r\n    this.http = http;\r\n    this.baseUrl = baseUrl;\r\n    this.getType();\r\n  }\r\n\r\n  getType() {\r\n    this.http.get<ApplicationType[]>(this.baseUrl + 'Type').subscribe(result => {\r\n      this.appTypes = result;\r\n      this.loading = true;\r\n    });\r\n  }\r\n\r\n  deleteType(id: number) {\r\n    this.loading = false;\r\n    this.http.delete<ApplicationType>(this.baseUrl + 'Type/' + id).subscribe(result => {\r\n      this.getType();\r\n    })\r\n  }\r\n\r\n  editType(type: ApplicationType) {\r\n    this.loading = false;\r\n    return this.http.put<ApplicationType>(this.baseUrl + 'Type/', type).subscribe(result => {\r\n      this.getType();\r\n    });\r\n  }\r\n\r\n  addType(type: ApplicationType) {\r\n    this.loading = false;\r\n    return this.http.post<ApplicationType>(this.baseUrl + 'Type/', type).subscribe(result => {\r\n      this.getType();\r\n    });\r\n  }\r\n\r\n\r\n}\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}